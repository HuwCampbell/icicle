welcome to iREPL
ok, loaded 38 functions from data/libs/prelude.icicle
ok, loaded test/cli/repl/data.psv, 13 rows
> -- Show everything
> ok, flatten (simplified) is now on
ok, c is now on
> > -- Enable C evaluation
> ok, c evaluation now on
                   _________-----_____
        _____------           __      ----_
 ___----             ___------              \
    ----________        ----                 \
                -----__    |             _____)
                     __-                /     \
         _______-----    ___--          \    /)\
   ------_______      ---____            \__/  /
                -----__    \ --    _          /\
                       --__--__     \_____/   \_/\
                               ----|   /          |
                                   |  |___________|
                                   |  | ((_(_)| )_)
                                   |  \_((_(_)|/(_)
                                   \             (
                                    \_____________)
> > -- An interesting expression with structs and strings
> - Flattened (simplified), not typechecked:
conv$3 = TIME
conv$4 = MAX_MAP_SIZE
init acc$conv$8$simpflat$33@{Error} = ExceptNotAnError@{Error};
init acc$conv$8$simpflat$34@{Double} = 0.0@{Double};
init acc$conv$12$simpflat$39@{Error} = ExceptNotAnError@{Error};
init acc$conv$12$simpflat$40@{Double} = 0.0@{Double};
init acc$s$reify$6$conv$13$simpflat$47@{Error} = ExceptFold1NoValue@{Error};
init acc$s$reify$6$conv$13$simpflat$48@{Double} = 0.0@{Double};
init acc$s$reify$6$conv$13$simpflat$49@{Double} = 0.0@{Double};
init acc$conv$58$simpflat$50@{Error} = ExceptNotAnError@{Error};
init acc$conv$58$simpflat$51@{Int} = 0@{Int};
init acc$conv$59$simpflat$56@{Error} = ExceptNotAnError@{Error};
init acc$conv$59$simpflat$57@{Int} = 0@{Int};
init acc$conv$63$simpflat$64@{Error} = ExceptNotAnError@{Error};
init acc$conv$63$simpflat$65@{Double} = 0.0@{Double};
init acc$a$conv$64$simpflat$74@{Error} = ExceptNotAnError@{Error};
init acc$a$conv$64$simpflat$75@{Double} = 0.0@{Double};
init acc$a$conv$64$simpflat$76@{Double} = 0.0@{Double};
init acc$a$conv$64$simpflat$77@{Double} = 0.0@{Double};
load_resumable@{Error} acc$a$conv$64$simpflat$74;
load_resumable@{Double} acc$a$conv$64$simpflat$75;
load_resumable@{Double} acc$a$conv$64$simpflat$76;
load_resumable@{Double} acc$a$conv$64$simpflat$77;
load_resumable@{Error} acc$conv$63$simpflat$64;
load_resumable@{Double} acc$conv$63$simpflat$65;
load_resumable@{Error} acc$conv$59$simpflat$56;
load_resumable@{Int} acc$conv$59$simpflat$57;
load_resumable@{Error} acc$conv$58$simpflat$50;
load_resumable@{Int} acc$conv$58$simpflat$51;
load_resumable@{Error} acc$s$reify$6$conv$13$simpflat$47;
load_resumable@{Double} acc$s$reify$6$conv$13$simpflat$48;
load_resumable@{Double} acc$s$reify$6$conv$13$simpflat$49;
load_resumable@{Error} acc$conv$12$simpflat$39;
load_resumable@{Double} acc$conv$12$simpflat$40;
load_resumable@{Error} acc$conv$8$simpflat$33;
load_resumable@{Double} acc$conv$8$simpflat$34;
for_facts (conv$2@{Time}, conv$1@{FactIdentifier}, conv$0$simpflat$282@{Error}, conv$0$simpflat$283@{String}, conv$0$simpflat$284@{Int}, conv$0$simpflat$285@{Time}) in new
{
  init flat$0$simpflat$78@{Error} = ExceptNotAnError@{Error};
  init flat$0$simpflat$79@{Int} = 0@{Int};
  if (eq#@{Error} conv$0$simpflat$282 (ExceptNotAnError@{Error}))
  {
    write flat$0$simpflat$78 = ExceptNotAnError@{Error};
    write flat$0$simpflat$79 = conv$0$simpflat$284;
  }
  else
  {
    write flat$0$simpflat$78 = conv$0$simpflat$282;
    write flat$0$simpflat$79 = 0@{Int};
  }
  read flat$0$simpflat$80 = flat$0$simpflat$78 [Error];
  read flat$0$simpflat$81 = flat$0$simpflat$79 [Int];
  init flat$1$simpflat$82@{Error} = ExceptNotAnError@{Error};
  init flat$1$simpflat$83@{Double} = 0.0@{Double};
  if (eq#@{Error} flat$0$simpflat$80 (ExceptNotAnError@{Error}))
  {
    write flat$1$simpflat$82 = ExceptNotAnError@{Error};
    write flat$1$simpflat$83 = doubleOfInt# flat$0$simpflat$81;
  }
  else
  {
    write flat$1$simpflat$82 = flat$0$simpflat$80;
    write flat$1$simpflat$83 = 0.0@{Double};
  }
  read flat$1$simpflat$84 = flat$1$simpflat$82 [Error];
  read flat$1$simpflat$85 = flat$1$simpflat$83 [Double];
  write acc$conv$8$simpflat$33 = flat$1$simpflat$84;
  write acc$conv$8$simpflat$34 = flat$1$simpflat$85;
  read conv$8$aval$0$simpflat$86 = acc$conv$8$simpflat$33 [Error];
  read conv$8$aval$0$simpflat$87 = acc$conv$8$simpflat$34 [Double];
  init flat$2$simpflat$92@{Error} = ExceptNotAnError@{Error};
  init flat$2$simpflat$93@{Double} = 0.0@{Double};
  if (eq#@{Error} conv$8$aval$0$simpflat$86 (ExceptNotAnError@{Error}))
  {
    write flat$2$simpflat$92 = ExceptNotAnError@{Error};
    write flat$2$simpflat$93 = conv$8$aval$0$simpflat$87;
  }
  else
  {
    write flat$2$simpflat$92 = conv$8$aval$0$simpflat$86;
    write flat$2$simpflat$93 = 0.0@{Double};
  }
  read flat$2$simpflat$94 = flat$2$simpflat$92 [Error];
  read flat$2$simpflat$95 = flat$2$simpflat$93 [Double];
  write acc$conv$12$simpflat$39 = flat$2$simpflat$94;
  write acc$conv$12$simpflat$40 = flat$2$simpflat$95;
  read conv$12$aval$2$simpflat$96 = acc$conv$12$simpflat$39 [Error];
  read conv$12$aval$2$simpflat$97 = acc$conv$12$simpflat$40 [Double];
  read s$reify$6$conv$13$aval$1$simpflat$104 = acc$s$reify$6$conv$13$simpflat$47 [Error];
  read s$reify$6$conv$13$aval$1$simpflat$105 = acc$s$reify$6$conv$13$simpflat$48 [Double];
  read s$reify$6$conv$13$aval$1$simpflat$106 = acc$s$reify$6$conv$13$simpflat$49 [Double];
  init flat$9$simpflat$107@{Error} = ExceptNotAnError@{Error};
  init flat$9$simpflat$108@{Double} = 0.0@{Double};
  init flat$9$simpflat$109@{Double} = 0.0@{Double};
  if (eq#@{Error} s$reify$6$conv$13$aval$1$simpflat$104 (ExceptNotAnError@{Error}))
  {
    init flat$16$simpflat$110@{Error} = ExceptNotAnError@{Error};
    init flat$16$simpflat$111@{Double} = 0.0@{Double};
    init flat$16$simpflat$112@{Double} = 0.0@{Double};
    if (eq#@{Error} s$reify$6$conv$13$aval$1$simpflat$104 (ExceptNotAnError@{Error}))
    {
      init flat$19$simpflat$113@{Error} = ExceptNotAnError@{Error};
      init flat$19$simpflat$114@{Double} = 0.0@{Double};
      if (eq#@{Error} conv$12$aval$2$simpflat$96 (ExceptNotAnError@{Error}))
      {
        write flat$19$simpflat$113 = ExceptNotAnError@{Error};
        write flat$19$simpflat$114 = sub#@{Double} conv$12$aval$2$simpflat$97 s$reify$6$conv$13$aval$1$simpflat$105;
      }
      else
      {
        write flat$19$simpflat$113 = conv$12$aval$2$simpflat$96;
        write flat$19$simpflat$114 = 0.0@{Double};
      }
      read flat$19$simpflat$115 = flat$19$simpflat$113 [Error];
      read flat$19$simpflat$116 = flat$19$simpflat$114 [Double];
      init flat$20$simpflat$117@{Error} = ExceptNotAnError@{Error};
      init flat$20$simpflat$118@{Double} = 0.0@{Double};
      if (eq#@{Error} flat$19$simpflat$115 (ExceptNotAnError@{Error}))
      {
        write flat$20$simpflat$117 = ExceptNotAnError@{Error};
        let simpflat$354 = add#@{Double} s$reify$6$conv$13$aval$1$simpflat$106 (1.0@{Double});
        write flat$20$simpflat$118 = div# flat$19$simpflat$116 simpflat$354;
      }
      else
      {
        write flat$20$simpflat$117 = flat$19$simpflat$115;
        write flat$20$simpflat$118 = 0.0@{Double};
      }
      read flat$20$simpflat$119 = flat$20$simpflat$117 [Error];
      read flat$20$simpflat$120 = flat$20$simpflat$118 [Double];
      init flat$21$simpflat$121@{Error} = ExceptNotAnError@{Error};
      init flat$21$simpflat$122@{Double} = 0.0@{Double};
      if (eq#@{Error} flat$20$simpflat$119 (ExceptNotAnError@{Error}))
      {
        write flat$21$simpflat$121 = ExceptNotAnError@{Error};
        write flat$21$simpflat$122 = add#@{Double} s$reify$6$conv$13$aval$1$simpflat$105 flat$20$simpflat$120;
      }
      else
      {
        write flat$21$simpflat$121 = flat$20$simpflat$119;
        write flat$21$simpflat$122 = 0.0@{Double};
      }
      read flat$21$simpflat$123 = flat$21$simpflat$121 [Error];
      read flat$21$simpflat$124 = flat$21$simpflat$122 [Double];
      init flat$22$simpflat$125@{Error} = ExceptNotAnError@{Error};
      init flat$22$simpflat$126@{Double} = 0.0@{Double};
      init flat$22$simpflat$127@{Double} = 0.0@{Double};
      if (eq#@{Error} flat$21$simpflat$123 (ExceptNotAnError@{Error}))
      {
        write flat$22$simpflat$125 = ExceptNotAnError@{Error};
        write flat$22$simpflat$126 = flat$21$simpflat$124;
        write flat$22$simpflat$127 = add#@{Double} s$reify$6$conv$13$aval$1$simpflat$106 (1.0@{Double});
      }
      else
      {
        write flat$22$simpflat$125 = flat$21$simpflat$123;
        write flat$22$simpflat$126 = 0.0@{Double};
        write flat$22$simpflat$127 = 0.0@{Double};
      }
      read flat$22$simpflat$128 = flat$22$simpflat$125 [Error];
      read flat$22$simpflat$129 = flat$22$simpflat$126 [Double];
      read flat$22$simpflat$130 = flat$22$simpflat$127 [Double];
      write flat$16$simpflat$110 = flat$22$simpflat$128;
      write flat$16$simpflat$111 = flat$22$simpflat$129;
      write flat$16$simpflat$112 = flat$22$simpflat$130;
    }
    else
    {
      write flat$16$simpflat$110 = s$reify$6$conv$13$aval$1$simpflat$104;
      write flat$16$simpflat$111 = 0.0@{Double};
      write flat$16$simpflat$112 = 0.0@{Double};
    }
    read flat$16$simpflat$131 = flat$16$simpflat$110 [Error];
    read flat$16$simpflat$132 = flat$16$simpflat$111 [Double];
    read flat$16$simpflat$133 = flat$16$simpflat$112 [Double];
    write flat$9$simpflat$107 = flat$16$simpflat$131;
    write flat$9$simpflat$108 = flat$16$simpflat$132;
    write flat$9$simpflat$109 = flat$16$simpflat$133;
  }
  else
  {
    init flat$12$simpflat$134@{Error} = ExceptNotAnError@{Error};
    init flat$12$simpflat$135@{Double} = 0.0@{Double};
    init flat$12$simpflat$136@{Double} = 0.0@{Double};
    if (eq#@{Error} (ExceptFold1NoValue@{Error}) s$reify$6$conv$13$aval$1$simpflat$104)
    {
      init flat$13$simpflat$137@{Error} = ExceptNotAnError@{Error};
      init flat$13$simpflat$138@{Double} = 0.0@{Double};
      init flat$13$simpflat$139@{Double} = 0.0@{Double};
      if (eq#@{Error} conv$12$aval$2$simpflat$96 (ExceptNotAnError@{Error}))
      {
        write flat$13$simpflat$137 = ExceptNotAnError@{Error};
        write flat$13$simpflat$138 = conv$12$aval$2$simpflat$97;
        write flat$13$simpflat$139 = 1.0@{Double};
      }
      else
      {
        write flat$13$simpflat$137 = conv$12$aval$2$simpflat$96;
        write flat$13$simpflat$138 = 0.0@{Double};
        write flat$13$simpflat$139 = 0.0@{Double};
      }
      read flat$13$simpflat$140 = flat$13$simpflat$137 [Error];
      read flat$13$simpflat$141 = flat$13$simpflat$138 [Double];
      read flat$13$simpflat$142 = flat$13$simpflat$139 [Double];
      write flat$12$simpflat$134 = flat$13$simpflat$140;
      write flat$12$simpflat$135 = flat$13$simpflat$141;
      write flat$12$simpflat$136 = flat$13$simpflat$142;
    }
    else
    {
      write flat$12$simpflat$134 = s$reify$6$conv$13$aval$1$simpflat$104;
      write flat$12$simpflat$135 = 0.0@{Double};
      write flat$12$simpflat$136 = 0.0@{Double};
    }
    read flat$12$simpflat$143 = flat$12$simpflat$134 [Error];
    read flat$12$simpflat$144 = flat$12$simpflat$135 [Double];
    read flat$12$simpflat$145 = flat$12$simpflat$136 [Double];
    write flat$9$simpflat$107 = flat$12$simpflat$143;
    write flat$9$simpflat$108 = flat$12$simpflat$144;
    write flat$9$simpflat$109 = flat$12$simpflat$145;
  }
  read flat$9$simpflat$146 = flat$9$simpflat$107 [Error];
  read flat$9$simpflat$147 = flat$9$simpflat$108 [Double];
  read flat$9$simpflat$148 = flat$9$simpflat$109 [Double];
  write acc$s$reify$6$conv$13$simpflat$47 = flat$9$simpflat$146;
  write acc$s$reify$6$conv$13$simpflat$48 = flat$9$simpflat$147;
  write acc$s$reify$6$conv$13$simpflat$49 = flat$9$simpflat$148;
  init flat$31$simpflat$149@{Error} = ExceptNotAnError@{Error};
  init flat$31$simpflat$150@{String} = ""@{String};
  if (eq#@{Error} conv$0$simpflat$282 (ExceptNotAnError@{Error}))
  {
    write flat$31$simpflat$149 = ExceptNotAnError@{Error};
    write flat$31$simpflat$150 = conv$0$simpflat$283;
  }
  else
  {
    write flat$31$simpflat$149 = conv$0$simpflat$282;
    write flat$31$simpflat$150 = ""@{String};
  }
  read flat$31$simpflat$151 = flat$31$simpflat$149 [Error];
  read flat$31$simpflat$152 = flat$31$simpflat$150 [String];
  init flat$32$simpflat$153@{Error} = ExceptNotAnError@{Error};
  init flat$32$simpflat$154@{Bool} = False@{Bool};
  if (eq#@{Error} flat$31$simpflat$151 (ExceptNotAnError@{Error}))
  {
    write flat$32$simpflat$153 = ExceptNotAnError@{Error};
    write flat$32$simpflat$154 = eq#@{String} flat$31$simpflat$152 ("torso"@{String});
  }
  else
  {
    write flat$32$simpflat$153 = flat$31$simpflat$151;
    write flat$32$simpflat$154 = False@{Bool};
  }
  read flat$32$simpflat$155 = flat$32$simpflat$153 [Error];
  read flat$32$simpflat$156 = flat$32$simpflat$154 [Bool];
  init flat$33@{Bool} = False@{Bool};
  if (eq#@{Error} flat$32$simpflat$155 (ExceptNotAnError@{Error}))
  {
    write flat$33 = flat$32$simpflat$156;
  }
  else
  {
    write flat$33 = True@{Bool};
  }
  read flat$33 = flat$33 [Bool];
  if (flat$33)
  {
    init flat$34$simpflat$157@{Error} = ExceptNotAnError@{Error};
    init flat$34$simpflat$158@{Int} = 0@{Int};
    if (eq#@{Error} conv$0$simpflat$282 (ExceptNotAnError@{Error}))
    {
      write flat$34$simpflat$157 = ExceptNotAnError@{Error};
      write flat$34$simpflat$158 = conv$0$simpflat$284;
    }
    else
    {
      write flat$34$simpflat$157 = conv$0$simpflat$282;
      write flat$34$simpflat$158 = 0@{Int};
    }
    read flat$34$simpflat$159 = flat$34$simpflat$157 [Error];
    read flat$34$simpflat$160 = flat$34$simpflat$158 [Int];
    write acc$conv$58$simpflat$50 = flat$34$simpflat$159;
    write acc$conv$58$simpflat$51 = flat$34$simpflat$160;
    read conv$58$aval$3$simpflat$161 = acc$conv$58$simpflat$50 [Error];
    read conv$58$aval$3$simpflat$162 = acc$conv$58$simpflat$51 [Int];
    write acc$conv$59$simpflat$56 = conv$58$aval$3$simpflat$161;
    write acc$conv$59$simpflat$57 = conv$58$aval$3$simpflat$162;
    read conv$59$aval$4$simpflat$167 = acc$conv$59$simpflat$56 [Error];
    read conv$59$aval$4$simpflat$168 = acc$conv$59$simpflat$57 [Int];
    init flat$35$simpflat$175@{Error} = ExceptNotAnError@{Error};
    init flat$35$simpflat$176@{Double} = 0.0@{Double};
    if (eq#@{Error} conv$59$aval$4$simpflat$167 (ExceptNotAnError@{Error}))
    {
      write flat$35$simpflat$175 = ExceptNotAnError@{Error};
      write flat$35$simpflat$176 = doubleOfInt# conv$59$aval$4$simpflat$168;
    }
    else
    {
      write flat$35$simpflat$175 = conv$59$aval$4$simpflat$167;
      write flat$35$simpflat$176 = 0.0@{Double};
    }
    read flat$35$simpflat$177 = flat$35$simpflat$175 [Error];
    read flat$35$simpflat$178 = flat$35$simpflat$176 [Double];
    write acc$conv$63$simpflat$64 = flat$35$simpflat$177;
    write acc$conv$63$simpflat$65 = flat$35$simpflat$178;
    read conv$63$aval$6$simpflat$179 = acc$conv$63$simpflat$64 [Error];
    read conv$63$aval$6$simpflat$180 = acc$conv$63$simpflat$65 [Double];
    read a$conv$64$aval$5$simpflat$189 = acc$a$conv$64$simpflat$74 [Error];
    read a$conv$64$aval$5$simpflat$190 = acc$a$conv$64$simpflat$75 [Double];
    read a$conv$64$aval$5$simpflat$191 = acc$a$conv$64$simpflat$76 [Double];
    read a$conv$64$aval$5$simpflat$192 = acc$a$conv$64$simpflat$77 [Double];
    init flat$36$simpflat$193@{Error} = ExceptNotAnError@{Error};
    init flat$36$simpflat$194@{Double} = 0.0@{Double};
    init flat$36$simpflat$195@{Double} = 0.0@{Double};
    init flat$36$simpflat$196@{Double} = 0.0@{Double};
    if (eq#@{Error} a$conv$64$aval$5$simpflat$189 (ExceptNotAnError@{Error}))
    {
      let nn$conv$71 = add#@{Double} a$conv$64$aval$5$simpflat$190 (1.0@{Double});
      init flat$39$simpflat$197@{Error} = ExceptNotAnError@{Error};
      init flat$39$simpflat$198@{Double} = 0.0@{Double};
      if (eq#@{Error} conv$63$aval$6$simpflat$179 (ExceptNotAnError@{Error}))
      {
        write flat$39$simpflat$197 = ExceptNotAnError@{Error};
        write flat$39$simpflat$198 = sub#@{Double} conv$63$aval$6$simpflat$180 a$conv$64$aval$5$simpflat$191;
      }
      else
      {
        write flat$39$simpflat$197 = conv$63$aval$6$simpflat$179;
        write flat$39$simpflat$198 = 0.0@{Double};
      }
      read flat$39$simpflat$199 = flat$39$simpflat$197 [Error];
      read flat$39$simpflat$200 = flat$39$simpflat$198 [Double];
      init flat$40$simpflat$201@{Error} = ExceptNotAnError@{Error};
      init flat$40$simpflat$202@{Double} = 0.0@{Double};
      if (eq#@{Error} flat$39$simpflat$199 (ExceptNotAnError@{Error}))
      {
        write flat$40$simpflat$201 = ExceptNotAnError@{Error};
        write flat$40$simpflat$202 = div# flat$39$simpflat$200 nn$conv$71;
      }
      else
      {
        write flat$40$simpflat$201 = flat$39$simpflat$199;
        write flat$40$simpflat$202 = 0.0@{Double};
      }
      read flat$40$simpflat$203 = flat$40$simpflat$201 [Error];
      read flat$40$simpflat$204 = flat$40$simpflat$202 [Double];
      init flat$41$simpflat$205@{Error} = ExceptNotAnError@{Error};
      init flat$41$simpflat$206@{Double} = 0.0@{Double};
      if (eq#@{Error} flat$40$simpflat$203 (ExceptNotAnError@{Error}))
      {
        write flat$41$simpflat$205 = ExceptNotAnError@{Error};
        write flat$41$simpflat$206 = add#@{Double} a$conv$64$aval$5$simpflat$191 flat$40$simpflat$204;
      }
      else
      {
        write flat$41$simpflat$205 = flat$40$simpflat$203;
        write flat$41$simpflat$206 = 0.0@{Double};
      }
      read flat$41$simpflat$207 = flat$41$simpflat$205 [Error];
      read flat$41$simpflat$208 = flat$41$simpflat$206 [Double];
      init flat$42$simpflat$209@{Error} = ExceptNotAnError@{Error};
      init flat$42$simpflat$210@{Double} = 0.0@{Double};
      if (eq#@{Error} flat$39$simpflat$199 (ExceptNotAnError@{Error}))
      {
        init flat$57$simpflat$211@{Error} = ExceptNotAnError@{Error};
        init flat$57$simpflat$212@{Double} = 0.0@{Double};
        if (eq#@{Error} conv$63$aval$6$simpflat$179 (ExceptNotAnError@{Error}))
        {
          init flat$63$simpflat$213@{Error} = ExceptNotAnError@{Error};
          init flat$63$simpflat$214@{Double} = 0.0@{Double};
          if (eq#@{Error} flat$41$simpflat$207 (ExceptNotAnError@{Error}))
          {
            write flat$63$simpflat$213 = ExceptNotAnError@{Error};
            write flat$63$simpflat$214 = sub#@{Double} conv$63$aval$6$simpflat$180 flat$41$simpflat$208;
          }
          else
          {
            write flat$63$simpflat$213 = flat$41$simpflat$207;
            write flat$63$simpflat$214 = 0.0@{Double};
          }
          read flat$63$simpflat$215 = flat$63$simpflat$213 [Error];
          read flat$63$simpflat$216 = flat$63$simpflat$214 [Double];
          write flat$57$simpflat$211 = flat$63$simpflat$215;
          write flat$57$simpflat$212 = flat$63$simpflat$216;
        }
        else
        {
          write flat$57$simpflat$211 = conv$63$aval$6$simpflat$179;
          write flat$57$simpflat$212 = 0.0@{Double};
        }
        read flat$57$simpflat$217 = flat$57$simpflat$211 [Error];
        read flat$57$simpflat$218 = flat$57$simpflat$212 [Double];
        init flat$58$simpflat$219@{Error} = ExceptNotAnError@{Error};
        init flat$58$simpflat$220@{Double} = 0.0@{Double};
        if (eq#@{Error} flat$57$simpflat$217 (ExceptNotAnError@{Error}))
        {
          write flat$58$simpflat$219 = ExceptNotAnError@{Error};
          write flat$58$simpflat$220 = mul#@{Double} flat$39$simpflat$200 flat$57$simpflat$218;
        }
        else
        {
          write flat$58$simpflat$219 = flat$57$simpflat$217;
          write flat$58$simpflat$220 = 0.0@{Double};
        }
        read flat$58$simpflat$221 = flat$58$simpflat$219 [Error];
        read flat$58$simpflat$222 = flat$58$simpflat$220 [Double];
        write flat$42$simpflat$209 = flat$58$simpflat$221;
        write flat$42$simpflat$210 = flat$58$simpflat$222;
      }
      else
      {
        write flat$42$simpflat$209 = flat$39$simpflat$199;
        write flat$42$simpflat$210 = 0.0@{Double};
      }
      read flat$42$simpflat$223 = flat$42$simpflat$209 [Error];
      read flat$42$simpflat$224 = flat$42$simpflat$210 [Double];
      init flat$43$simpflat$225@{Error} = ExceptNotAnError@{Error};
      init flat$43$simpflat$226@{Double} = 0.0@{Double};
      if (eq#@{Error} flat$42$simpflat$223 (ExceptNotAnError@{Error}))
      {
        write flat$43$simpflat$225 = ExceptNotAnError@{Error};
        write flat$43$simpflat$226 = add#@{Double} a$conv$64$aval$5$simpflat$192 flat$42$simpflat$224;
      }
      else
      {
        write flat$43$simpflat$225 = flat$42$simpflat$223;
        write flat$43$simpflat$226 = 0.0@{Double};
      }
      read flat$43$simpflat$227 = flat$43$simpflat$225 [Error];
      read flat$43$simpflat$228 = flat$43$simpflat$226 [Double];
      init flat$44$simpflat$229@{Error} = ExceptNotAnError@{Error};
      init flat$44$simpflat$230@{Double} = 0.0@{Double};
      init flat$44$simpflat$231@{Double} = 0.0@{Double};
      if (eq#@{Error} flat$41$simpflat$207 (ExceptNotAnError@{Error}))
      {
        write flat$44$simpflat$229 = ExceptNotAnError@{Error};
        write flat$44$simpflat$230 = add#@{Double} a$conv$64$aval$5$simpflat$190 (1.0@{Double});
        write flat$44$simpflat$231 = flat$41$simpflat$208;
      }
      else
      {
        write flat$44$simpflat$229 = flat$41$simpflat$207;
        write flat$44$simpflat$230 = 0.0@{Double};
        write flat$44$simpflat$231 = 0.0@{Double};
      }
      read flat$44$simpflat$232 = flat$44$simpflat$229 [Error];
      read flat$44$simpflat$233 = flat$44$simpflat$230 [Double];
      read flat$44$simpflat$234 = flat$44$simpflat$231 [Double];
      init flat$45$simpflat$235@{Error} = ExceptNotAnError@{Error};
      init flat$45$simpflat$236@{Double} = 0.0@{Double};
      init flat$45$simpflat$237@{Double} = 0.0@{Double};
      init flat$45$simpflat$238@{Double} = 0.0@{Double};
      if (eq#@{Error} flat$44$simpflat$232 (ExceptNotAnError@{Error}))
      {
        init flat$48$simpflat$239@{Error} = ExceptNotAnError@{Error};
        init flat$48$simpflat$240@{Double} = 0.0@{Double};
        init flat$48$simpflat$241@{Double} = 0.0@{Double};
        init flat$48$simpflat$242@{Double} = 0.0@{Double};
        if (eq#@{Error} flat$43$simpflat$227 (ExceptNotAnError@{Error}))
        {
          write flat$48$simpflat$239 = ExceptNotAnError@{Error};
          write flat$48$simpflat$240 = flat$44$simpflat$233;
          write flat$48$simpflat$241 = flat$44$simpflat$234;
          write flat$48$simpflat$242 = flat$43$simpflat$228;
        }
        else
        {
          write flat$48$simpflat$239 = flat$43$simpflat$227;
          write flat$48$simpflat$240 = 0.0@{Double};
          write flat$48$simpflat$241 = 0.0@{Double};
          write flat$48$simpflat$242 = 0.0@{Double};
        }
        read flat$48$simpflat$243 = flat$48$simpflat$239 [Error];
        read flat$48$simpflat$244 = flat$48$simpflat$240 [Double];
        read flat$48$simpflat$245 = flat$48$simpflat$241 [Double];
        read flat$48$simpflat$246 = flat$48$simpflat$242 [Double];
        write flat$45$simpflat$235 = flat$48$simpflat$243;
        write flat$45$simpflat$236 = flat$48$simpflat$244;
        write flat$45$simpflat$237 = flat$48$simpflat$245;
        write flat$45$simpflat$238 = flat$48$simpflat$246;
      }
      else
      {
        write flat$45$simpflat$235 = flat$44$simpflat$232;
        write flat$45$simpflat$236 = 0.0@{Double};
        write flat$45$simpflat$237 = 0.0@{Double};
        write flat$45$simpflat$238 = 0.0@{Double};
      }
      read flat$45$simpflat$247 = flat$45$simpflat$235 [Error];
      read flat$45$simpflat$248 = flat$45$simpflat$236 [Double];
      read flat$45$simpflat$249 = flat$45$simpflat$237 [Double];
      read flat$45$simpflat$250 = flat$45$simpflat$238 [Double];
      write flat$36$simpflat$193 = flat$45$simpflat$247;
      write flat$36$simpflat$194 = flat$45$simpflat$248;
      write flat$36$simpflat$195 = flat$45$simpflat$249;
      write flat$36$simpflat$196 = flat$45$simpflat$250;
    }
    else
    {
      write flat$36$simpflat$193 = a$conv$64$aval$5$simpflat$189;
      write flat$36$simpflat$194 = 0.0@{Double};
      write flat$36$simpflat$195 = 0.0@{Double};
      write flat$36$simpflat$196 = 0.0@{Double};
    }
    read flat$36$simpflat$251 = flat$36$simpflat$193 [Error];
    read flat$36$simpflat$252 = flat$36$simpflat$194 [Double];
    read flat$36$simpflat$253 = flat$36$simpflat$195 [Double];
    read flat$36$simpflat$254 = flat$36$simpflat$196 [Double];
    write acc$a$conv$64$simpflat$74 = flat$36$simpflat$251;
    write acc$a$conv$64$simpflat$75 = flat$36$simpflat$252;
    write acc$a$conv$64$simpflat$76 = flat$36$simpflat$253;
    write acc$a$conv$64$simpflat$77 = flat$36$simpflat$254;
  }
}
save_resumable@{Error} acc$a$conv$64$simpflat$74;
save_resumable@{Double} acc$a$conv$64$simpflat$75;
save_resumable@{Double} acc$a$conv$64$simpflat$76;
save_resumable@{Double} acc$a$conv$64$simpflat$77;
save_resumable@{Error} acc$conv$63$simpflat$64;
save_resumable@{Double} acc$conv$63$simpflat$65;
save_resumable@{Error} acc$conv$59$simpflat$56;
save_resumable@{Int} acc$conv$59$simpflat$57;
save_resumable@{Error} acc$conv$58$simpflat$50;
save_resumable@{Int} acc$conv$58$simpflat$51;
save_resumable@{Error} acc$s$reify$6$conv$13$simpflat$47;
save_resumable@{Double} acc$s$reify$6$conv$13$simpflat$48;
save_resumable@{Double} acc$s$reify$6$conv$13$simpflat$49;
save_resumable@{Error} acc$conv$12$simpflat$39;
save_resumable@{Double} acc$conv$12$simpflat$40;
save_resumable@{Error} acc$conv$8$simpflat$33;
save_resumable@{Double} acc$conv$8$simpflat$34;
read a$conv$64$simpflat$255 = acc$a$conv$64$simpflat$74 [Error];
read a$conv$64$simpflat$256 = acc$a$conv$64$simpflat$75 [Double];
read a$conv$64$simpflat$258 = acc$a$conv$64$simpflat$77 [Double];
read s$reify$6$conv$13$simpflat$259 = acc$s$reify$6$conv$13$simpflat$47 [Error];
read s$reify$6$conv$13$simpflat$260 = acc$s$reify$6$conv$13$simpflat$48 [Double];
init flat$89$simpflat$262@{Error} = ExceptNotAnError@{Error};
init flat$89$simpflat$263@{Double} = 0.0@{Double};
if (eq#@{Error} s$reify$6$conv$13$simpflat$259 (ExceptNotAnError@{Error}))
{
  write flat$89$simpflat$262 = ExceptNotAnError@{Error};
  write flat$89$simpflat$263 = s$reify$6$conv$13$simpflat$260;
}
else
{
  write flat$89$simpflat$262 = s$reify$6$conv$13$simpflat$259;
  write flat$89$simpflat$263 = 0.0@{Double};
}
read flat$89$simpflat$264 = flat$89$simpflat$262 [Error];
read flat$89$simpflat$265 = flat$89$simpflat$263 [Double];
init flat$90$simpflat$266@{Error} = ExceptNotAnError@{Error};
init flat$90$simpflat$267@{Double} = 0.0@{Double};
if (eq#@{Error} flat$89$simpflat$264 (ExceptNotAnError@{Error}))
{
  init flat$93$simpflat$268@{Error} = ExceptNotAnError@{Error};
  init flat$93$simpflat$269@{Double} = 0.0@{Double};
  if (eq#@{Error} a$conv$64$simpflat$255 (ExceptNotAnError@{Error}))
  {
    let conv$119 = sub#@{Double} a$conv$64$simpflat$256 (1.0@{Double});
    let simpflat$749 = div# a$conv$64$simpflat$258 conv$119;
    write flat$93$simpflat$268 = ExceptNotAnError@{Error};
    write flat$93$simpflat$269 = simpflat$749;
  }
  else
  {
    write flat$93$simpflat$268 = a$conv$64$simpflat$255;
    write flat$93$simpflat$269 = 0.0@{Double};
  }
  read flat$93$simpflat$270 = flat$93$simpflat$268 [Error];
  read flat$93$simpflat$271 = flat$93$simpflat$269 [Double];
  init flat$94$simpflat$272@{Error} = ExceptNotAnError@{Error};
  init flat$94$simpflat$273@{Double} = 0.0@{Double};
  if (eq#@{Error} flat$93$simpflat$270 (ExceptNotAnError@{Error}))
  {
    write flat$94$simpflat$272 = ExceptNotAnError@{Error};
    write flat$94$simpflat$273 = sqrt# flat$93$simpflat$271;
  }
  else
  {
    write flat$94$simpflat$272 = flat$93$simpflat$270;
    write flat$94$simpflat$273 = 0.0@{Double};
  }
  read flat$94$simpflat$274 = flat$94$simpflat$272 [Error];
  read flat$94$simpflat$275 = flat$94$simpflat$273 [Double];
  init flat$95$simpflat$276@{Error} = ExceptNotAnError@{Error};
  init flat$95$simpflat$277@{Double} = 0.0@{Double};
  if (eq#@{Error} flat$94$simpflat$274 (ExceptNotAnError@{Error}))
  {
    write flat$95$simpflat$276 = ExceptNotAnError@{Error};
    write flat$95$simpflat$277 = mul#@{Double} flat$89$simpflat$265 flat$94$simpflat$275;
  }
  else
  {
    write flat$95$simpflat$276 = flat$94$simpflat$274;
    write flat$95$simpflat$277 = 0.0@{Double};
  }
  read flat$95$simpflat$278 = flat$95$simpflat$276 [Error];
  read flat$95$simpflat$279 = flat$95$simpflat$277 [Double];
  write flat$90$simpflat$266 = flat$95$simpflat$278;
  write flat$90$simpflat$267 = flat$95$simpflat$279;
}
else
{
  write flat$90$simpflat$266 = flat$89$simpflat$264;
  write flat$90$simpflat$267 = 0.0@{Double};
}
read flat$90$simpflat$280 = flat$90$simpflat$266 [Error];
read flat$90$simpflat$281 = flat$90$simpflat$267 [Double];
output@{(Sum Error Double)} repl (flat$90$simpflat$280@{Error}, flat$90$simpflat$281@{Double});

- Flattened Avalanche (simplified), typechecked:
conv$3 = TIME
conv$4 = MAX_MAP_SIZE
init acc$conv$8$simpflat$33@{Error} = ExceptNotAnError@{Error};
init acc$conv$8$simpflat$34@{Double} = 0.0@{Double};
init acc$conv$12$simpflat$39@{Error} = ExceptNotAnError@{Error};
init acc$conv$12$simpflat$40@{Double} = 0.0@{Double};
init acc$s$reify$6$conv$13$simpflat$47@{Error} = ExceptFold1NoValue@{Error};
init acc$s$reify$6$conv$13$simpflat$48@{Double} = 0.0@{Double};
init acc$s$reify$6$conv$13$simpflat$49@{Double} = 0.0@{Double};
init acc$conv$58$simpflat$50@{Error} = ExceptNotAnError@{Error};
init acc$conv$58$simpflat$51@{Int} = 0@{Int};
init acc$conv$59$simpflat$56@{Error} = ExceptNotAnError@{Error};
init acc$conv$59$simpflat$57@{Int} = 0@{Int};
init acc$conv$63$simpflat$64@{Error} = ExceptNotAnError@{Error};
init acc$conv$63$simpflat$65@{Double} = 0.0@{Double};
init acc$a$conv$64$simpflat$74@{Error} = ExceptNotAnError@{Error};
init acc$a$conv$64$simpflat$75@{Double} = 0.0@{Double};
init acc$a$conv$64$simpflat$76@{Double} = 0.0@{Double};
init acc$a$conv$64$simpflat$77@{Double} = 0.0@{Double};
load_resumable@{Error} acc$a$conv$64$simpflat$74;
load_resumable@{Double} acc$a$conv$64$simpflat$75;
load_resumable@{Double} acc$a$conv$64$simpflat$76;
load_resumable@{Double} acc$a$conv$64$simpflat$77;
load_resumable@{Error} acc$conv$63$simpflat$64;
load_resumable@{Double} acc$conv$63$simpflat$65;
load_resumable@{Error} acc$conv$59$simpflat$56;
load_resumable@{Int} acc$conv$59$simpflat$57;
load_resumable@{Error} acc$conv$58$simpflat$50;
load_resumable@{Int} acc$conv$58$simpflat$51;
load_resumable@{Error} acc$s$reify$6$conv$13$simpflat$47;
load_resumable@{Double} acc$s$reify$6$conv$13$simpflat$48;
load_resumable@{Double} acc$s$reify$6$conv$13$simpflat$49;
load_resumable@{Error} acc$conv$12$simpflat$39;
load_resumable@{Double} acc$conv$12$simpflat$40;
load_resumable@{Error} acc$conv$8$simpflat$33;
load_resumable@{Double} acc$conv$8$simpflat$34;
for_facts (conv$2@{Time}, conv$1@{FactIdentifier}, conv$0$simpflat$282@{Error}, conv$0$simpflat$283@{String}, conv$0$simpflat$284@{Int}, conv$0$simpflat$285@{Time}) in new
{
  init flat$0$simpflat$78@{Error} = ExceptNotAnError@{Error};
  init flat$0$simpflat$79@{Int} = 0@{Int};
  if (eq#@{Error} conv$0$simpflat$282 (ExceptNotAnError@{Error}))
  {
    write flat$0$simpflat$78 = ExceptNotAnError@{Error};
    write flat$0$simpflat$79 = conv$0$simpflat$284;
  }
  else
  {
    write flat$0$simpflat$78 = conv$0$simpflat$282;
    write flat$0$simpflat$79 = 0@{Int};
  }
  read flat$0$simpflat$80 = flat$0$simpflat$78 [Error];
  read flat$0$simpflat$81 = flat$0$simpflat$79 [Int];
  init flat$1$simpflat$82@{Error} = ExceptNotAnError@{Error};
  init flat$1$simpflat$83@{Double} = 0.0@{Double};
  if (eq#@{Error} flat$0$simpflat$80 (ExceptNotAnError@{Error}))
  {
    write flat$1$simpflat$82 = ExceptNotAnError@{Error};
    write flat$1$simpflat$83 = doubleOfInt# flat$0$simpflat$81;
  }
  else
  {
    write flat$1$simpflat$82 = flat$0$simpflat$80;
    write flat$1$simpflat$83 = 0.0@{Double};
  }
  read flat$1$simpflat$84 = flat$1$simpflat$82 [Error];
  read flat$1$simpflat$85 = flat$1$simpflat$83 [Double];
  write acc$conv$8$simpflat$33 = flat$1$simpflat$84;
  write acc$conv$8$simpflat$34 = flat$1$simpflat$85;
  read conv$8$aval$0$simpflat$86 = acc$conv$8$simpflat$33 [Error];
  read conv$8$aval$0$simpflat$87 = acc$conv$8$simpflat$34 [Double];
  init flat$2$simpflat$92@{Error} = ExceptNotAnError@{Error};
  init flat$2$simpflat$93@{Double} = 0.0@{Double};
  if (eq#@{Error} conv$8$aval$0$simpflat$86 (ExceptNotAnError@{Error}))
  {
    write flat$2$simpflat$92 = ExceptNotAnError@{Error};
    write flat$2$simpflat$93 = conv$8$aval$0$simpflat$87;
  }
  else
  {
    write flat$2$simpflat$92 = conv$8$aval$0$simpflat$86;
    write flat$2$simpflat$93 = 0.0@{Double};
  }
  read flat$2$simpflat$94 = flat$2$simpflat$92 [Error];
  read flat$2$simpflat$95 = flat$2$simpflat$93 [Double];
  write acc$conv$12$simpflat$39 = flat$2$simpflat$94;
  write acc$conv$12$simpflat$40 = flat$2$simpflat$95;
  read conv$12$aval$2$simpflat$96 = acc$conv$12$simpflat$39 [Error];
  read conv$12$aval$2$simpflat$97 = acc$conv$12$simpflat$40 [Double];
  read s$reify$6$conv$13$aval$1$simpflat$104 = acc$s$reify$6$conv$13$simpflat$47 [Error];
  read s$reify$6$conv$13$aval$1$simpflat$105 = acc$s$reify$6$conv$13$simpflat$48 [Double];
  read s$reify$6$conv$13$aval$1$simpflat$106 = acc$s$reify$6$conv$13$simpflat$49 [Double];
  init flat$9$simpflat$107@{Error} = ExceptNotAnError@{Error};
  init flat$9$simpflat$108@{Double} = 0.0@{Double};
  init flat$9$simpflat$109@{Double} = 0.0@{Double};
  if (eq#@{Error} s$reify$6$conv$13$aval$1$simpflat$104 (ExceptNotAnError@{Error}))
  {
    init flat$16$simpflat$110@{Error} = ExceptNotAnError@{Error};
    init flat$16$simpflat$111@{Double} = 0.0@{Double};
    init flat$16$simpflat$112@{Double} = 0.0@{Double};
    if (eq#@{Error} s$reify$6$conv$13$aval$1$simpflat$104 (ExceptNotAnError@{Error}))
    {
      init flat$19$simpflat$113@{Error} = ExceptNotAnError@{Error};
      init flat$19$simpflat$114@{Double} = 0.0@{Double};
      if (eq#@{Error} conv$12$aval$2$simpflat$96 (ExceptNotAnError@{Error}))
      {
        write flat$19$simpflat$113 = ExceptNotAnError@{Error};
        write flat$19$simpflat$114 = sub#@{Double} conv$12$aval$2$simpflat$97 s$reify$6$conv$13$aval$1$simpflat$105;
      }
      else
      {
        write flat$19$simpflat$113 = conv$12$aval$2$simpflat$96;
        write flat$19$simpflat$114 = 0.0@{Double};
      }
      read flat$19$simpflat$115 = flat$19$simpflat$113 [Error];
      read flat$19$simpflat$116 = flat$19$simpflat$114 [Double];
      init flat$20$simpflat$117@{Error} = ExceptNotAnError@{Error};
      init flat$20$simpflat$118@{Double} = 0.0@{Double};
      if (eq#@{Error} flat$19$simpflat$115 (ExceptNotAnError@{Error}))
      {
        write flat$20$simpflat$117 = ExceptNotAnError@{Error};
        let simpflat$354 = add#@{Double} s$reify$6$conv$13$aval$1$simpflat$106 (1.0@{Double});
        write flat$20$simpflat$118 = div# flat$19$simpflat$116 simpflat$354;
      }
      else
      {
        write flat$20$simpflat$117 = flat$19$simpflat$115;
        write flat$20$simpflat$118 = 0.0@{Double};
      }
      read flat$20$simpflat$119 = flat$20$simpflat$117 [Error];
      read flat$20$simpflat$120 = flat$20$simpflat$118 [Double];
      init flat$21$simpflat$121@{Error} = ExceptNotAnError@{Error};
      init flat$21$simpflat$122@{Double} = 0.0@{Double};
      if (eq#@{Error} flat$20$simpflat$119 (ExceptNotAnError@{Error}))
      {
        write flat$21$simpflat$121 = ExceptNotAnError@{Error};
        write flat$21$simpflat$122 = add#@{Double} s$reify$6$conv$13$aval$1$simpflat$105 flat$20$simpflat$120;
      }
      else
      {
        write flat$21$simpflat$121 = flat$20$simpflat$119;
        write flat$21$simpflat$122 = 0.0@{Double};
      }
      read flat$21$simpflat$123 = flat$21$simpflat$121 [Error];
      read flat$21$simpflat$124 = flat$21$simpflat$122 [Double];
      init flat$22$simpflat$125@{Error} = ExceptNotAnError@{Error};
      init flat$22$simpflat$126@{Double} = 0.0@{Double};
      init flat$22$simpflat$127@{Double} = 0.0@{Double};
      if (eq#@{Error} flat$21$simpflat$123 (ExceptNotAnError@{Error}))
      {
        write flat$22$simpflat$125 = ExceptNotAnError@{Error};
        write flat$22$simpflat$126 = flat$21$simpflat$124;
        write flat$22$simpflat$127 = add#@{Double} s$reify$6$conv$13$aval$1$simpflat$106 (1.0@{Double});
      }
      else
      {
        write flat$22$simpflat$125 = flat$21$simpflat$123;
        write flat$22$simpflat$126 = 0.0@{Double};
        write flat$22$simpflat$127 = 0.0@{Double};
      }
      read flat$22$simpflat$128 = flat$22$simpflat$125 [Error];
      read flat$22$simpflat$129 = flat$22$simpflat$126 [Double];
      read flat$22$simpflat$130 = flat$22$simpflat$127 [Double];
      write flat$16$simpflat$110 = flat$22$simpflat$128;
      write flat$16$simpflat$111 = flat$22$simpflat$129;
      write flat$16$simpflat$112 = flat$22$simpflat$130;
    }
    else
    {
      write flat$16$simpflat$110 = s$reify$6$conv$13$aval$1$simpflat$104;
      write flat$16$simpflat$111 = 0.0@{Double};
      write flat$16$simpflat$112 = 0.0@{Double};
    }
    read flat$16$simpflat$131 = flat$16$simpflat$110 [Error];
    read flat$16$simpflat$132 = flat$16$simpflat$111 [Double];
    read flat$16$simpflat$133 = flat$16$simpflat$112 [Double];
    write flat$9$simpflat$107 = flat$16$simpflat$131;
    write flat$9$simpflat$108 = flat$16$simpflat$132;
    write flat$9$simpflat$109 = flat$16$simpflat$133;
  }
  else
  {
    init flat$12$simpflat$134@{Error} = ExceptNotAnError@{Error};
    init flat$12$simpflat$135@{Double} = 0.0@{Double};
    init flat$12$simpflat$136@{Double} = 0.0@{Double};
    if (eq#@{Error} (ExceptFold1NoValue@{Error}) s$reify$6$conv$13$aval$1$simpflat$104)
    {
      init flat$13$simpflat$137@{Error} = ExceptNotAnError@{Error};
      init flat$13$simpflat$138@{Double} = 0.0@{Double};
      init flat$13$simpflat$139@{Double} = 0.0@{Double};
      if (eq#@{Error} conv$12$aval$2$simpflat$96 (ExceptNotAnError@{Error}))
      {
        write flat$13$simpflat$137 = ExceptNotAnError@{Error};
        write flat$13$simpflat$138 = conv$12$aval$2$simpflat$97;
        write flat$13$simpflat$139 = 1.0@{Double};
      }
      else
      {
        write flat$13$simpflat$137 = conv$12$aval$2$simpflat$96;
        write flat$13$simpflat$138 = 0.0@{Double};
        write flat$13$simpflat$139 = 0.0@{Double};
      }
      read flat$13$simpflat$140 = flat$13$simpflat$137 [Error];
      read flat$13$simpflat$141 = flat$13$simpflat$138 [Double];
      read flat$13$simpflat$142 = flat$13$simpflat$139 [Double];
      write flat$12$simpflat$134 = flat$13$simpflat$140;
      write flat$12$simpflat$135 = flat$13$simpflat$141;
      write flat$12$simpflat$136 = flat$13$simpflat$142;
    }
    else
    {
      write flat$12$simpflat$134 = s$reify$6$conv$13$aval$1$simpflat$104;
      write flat$12$simpflat$135 = 0.0@{Double};
      write flat$12$simpflat$136 = 0.0@{Double};
    }
    read flat$12$simpflat$143 = flat$12$simpflat$134 [Error];
    read flat$12$simpflat$144 = flat$12$simpflat$135 [Double];
    read flat$12$simpflat$145 = flat$12$simpflat$136 [Double];
    write flat$9$simpflat$107 = flat$12$simpflat$143;
    write flat$9$simpflat$108 = flat$12$simpflat$144;
    write flat$9$simpflat$109 = flat$12$simpflat$145;
  }
  read flat$9$simpflat$146 = flat$9$simpflat$107 [Error];
  read flat$9$simpflat$147 = flat$9$simpflat$108 [Double];
  read flat$9$simpflat$148 = flat$9$simpflat$109 [Double];
  write acc$s$reify$6$conv$13$simpflat$47 = flat$9$simpflat$146;
  write acc$s$reify$6$conv$13$simpflat$48 = flat$9$simpflat$147;
  write acc$s$reify$6$conv$13$simpflat$49 = flat$9$simpflat$148;
  init flat$31$simpflat$149@{Error} = ExceptNotAnError@{Error};
  init flat$31$simpflat$150@{String} = ""@{String};
  if (eq#@{Error} conv$0$simpflat$282 (ExceptNotAnError@{Error}))
  {
    write flat$31$simpflat$149 = ExceptNotAnError@{Error};
    write flat$31$simpflat$150 = conv$0$simpflat$283;
  }
  else
  {
    write flat$31$simpflat$149 = conv$0$simpflat$282;
    write flat$31$simpflat$150 = ""@{String};
  }
  read flat$31$simpflat$151 = flat$31$simpflat$149 [Error];
  read flat$31$simpflat$152 = flat$31$simpflat$150 [String];
  init flat$32$simpflat$153@{Error} = ExceptNotAnError@{Error};
  init flat$32$simpflat$154@{Bool} = False@{Bool};
  if (eq#@{Error} flat$31$simpflat$151 (ExceptNotAnError@{Error}))
  {
    write flat$32$simpflat$153 = ExceptNotAnError@{Error};
    write flat$32$simpflat$154 = eq#@{String} flat$31$simpflat$152 ("torso"@{String});
  }
  else
  {
    write flat$32$simpflat$153 = flat$31$simpflat$151;
    write flat$32$simpflat$154 = False@{Bool};
  }
  read flat$32$simpflat$155 = flat$32$simpflat$153 [Error];
  read flat$32$simpflat$156 = flat$32$simpflat$154 [Bool];
  init flat$33@{Bool} = False@{Bool};
  if (eq#@{Error} flat$32$simpflat$155 (ExceptNotAnError@{Error}))
  {
    write flat$33 = flat$32$simpflat$156;
  }
  else
  {
    write flat$33 = True@{Bool};
  }
  read flat$33 = flat$33 [Bool];
  if (flat$33)
  {
    init flat$34$simpflat$157@{Error} = ExceptNotAnError@{Error};
    init flat$34$simpflat$158@{Int} = 0@{Int};
    if (eq#@{Error} conv$0$simpflat$282 (ExceptNotAnError@{Error}))
    {
      write flat$34$simpflat$157 = ExceptNotAnError@{Error};
      write flat$34$simpflat$158 = conv$0$simpflat$284;
    }
    else
    {
      write flat$34$simpflat$157 = conv$0$simpflat$282;
      write flat$34$simpflat$158 = 0@{Int};
    }
    read flat$34$simpflat$159 = flat$34$simpflat$157 [Error];
    read flat$34$simpflat$160 = flat$34$simpflat$158 [Int];
    write acc$conv$58$simpflat$50 = flat$34$simpflat$159;
    write acc$conv$58$simpflat$51 = flat$34$simpflat$160;
    read conv$58$aval$3$simpflat$161 = acc$conv$58$simpflat$50 [Error];
    read conv$58$aval$3$simpflat$162 = acc$conv$58$simpflat$51 [Int];
    write acc$conv$59$simpflat$56 = conv$58$aval$3$simpflat$161;
    write acc$conv$59$simpflat$57 = conv$58$aval$3$simpflat$162;
    read conv$59$aval$4$simpflat$167 = acc$conv$59$simpflat$56 [Error];
    read conv$59$aval$4$simpflat$168 = acc$conv$59$simpflat$57 [Int];
    init flat$35$simpflat$175@{Error} = ExceptNotAnError@{Error};
    init flat$35$simpflat$176@{Double} = 0.0@{Double};
    if (eq#@{Error} conv$59$aval$4$simpflat$167 (ExceptNotAnError@{Error}))
    {
      write flat$35$simpflat$175 = ExceptNotAnError@{Error};
      write flat$35$simpflat$176 = doubleOfInt# conv$59$aval$4$simpflat$168;
    }
    else
    {
      write flat$35$simpflat$175 = conv$59$aval$4$simpflat$167;
      write flat$35$simpflat$176 = 0.0@{Double};
    }
    read flat$35$simpflat$177 = flat$35$simpflat$175 [Error];
    read flat$35$simpflat$178 = flat$35$simpflat$176 [Double];
    write acc$conv$63$simpflat$64 = flat$35$simpflat$177;
    write acc$conv$63$simpflat$65 = flat$35$simpflat$178;
    read conv$63$aval$6$simpflat$179 = acc$conv$63$simpflat$64 [Error];
    read conv$63$aval$6$simpflat$180 = acc$conv$63$simpflat$65 [Double];
    read a$conv$64$aval$5$simpflat$189 = acc$a$conv$64$simpflat$74 [Error];
    read a$conv$64$aval$5$simpflat$190 = acc$a$conv$64$simpflat$75 [Double];
    read a$conv$64$aval$5$simpflat$191 = acc$a$conv$64$simpflat$76 [Double];
    read a$conv$64$aval$5$simpflat$192 = acc$a$conv$64$simpflat$77 [Double];
    init flat$36$simpflat$193@{Error} = ExceptNotAnError@{Error};
    init flat$36$simpflat$194@{Double} = 0.0@{Double};
    init flat$36$simpflat$195@{Double} = 0.0@{Double};
    init flat$36$simpflat$196@{Double} = 0.0@{Double};
    if (eq#@{Error} a$conv$64$aval$5$simpflat$189 (ExceptNotAnError@{Error}))
    {
      let nn$conv$71 = add#@{Double} a$conv$64$aval$5$simpflat$190 (1.0@{Double});
      init flat$39$simpflat$197@{Error} = ExceptNotAnError@{Error};
      init flat$39$simpflat$198@{Double} = 0.0@{Double};
      if (eq#@{Error} conv$63$aval$6$simpflat$179 (ExceptNotAnError@{Error}))
      {
        write flat$39$simpflat$197 = ExceptNotAnError@{Error};
        write flat$39$simpflat$198 = sub#@{Double} conv$63$aval$6$simpflat$180 a$conv$64$aval$5$simpflat$191;
      }
      else
      {
        write flat$39$simpflat$197 = conv$63$aval$6$simpflat$179;
        write flat$39$simpflat$198 = 0.0@{Double};
      }
      read flat$39$simpflat$199 = flat$39$simpflat$197 [Error];
      read flat$39$simpflat$200 = flat$39$simpflat$198 [Double];
      init flat$40$simpflat$201@{Error} = ExceptNotAnError@{Error};
      init flat$40$simpflat$202@{Double} = 0.0@{Double};
      if (eq#@{Error} flat$39$simpflat$199 (ExceptNotAnError@{Error}))
      {
        write flat$40$simpflat$201 = ExceptNotAnError@{Error};
        write flat$40$simpflat$202 = div# flat$39$simpflat$200 nn$conv$71;
      }
      else
      {
        write flat$40$simpflat$201 = flat$39$simpflat$199;
        write flat$40$simpflat$202 = 0.0@{Double};
      }
      read flat$40$simpflat$203 = flat$40$simpflat$201 [Error];
      read flat$40$simpflat$204 = flat$40$simpflat$202 [Double];
      init flat$41$simpflat$205@{Error} = ExceptNotAnError@{Error};
      init flat$41$simpflat$206@{Double} = 0.0@{Double};
      if (eq#@{Error} flat$40$simpflat$203 (ExceptNotAnError@{Error}))
      {
        write flat$41$simpflat$205 = ExceptNotAnError@{Error};
        write flat$41$simpflat$206 = add#@{Double} a$conv$64$aval$5$simpflat$191 flat$40$simpflat$204;
      }
      else
      {
        write flat$41$simpflat$205 = flat$40$simpflat$203;
        write flat$41$simpflat$206 = 0.0@{Double};
      }
      read flat$41$simpflat$207 = flat$41$simpflat$205 [Error];
      read flat$41$simpflat$208 = flat$41$simpflat$206 [Double];
      init flat$42$simpflat$209@{Error} = ExceptNotAnError@{Error};
      init flat$42$simpflat$210@{Double} = 0.0@{Double};
      if (eq#@{Error} flat$39$simpflat$199 (ExceptNotAnError@{Error}))
      {
        init flat$57$simpflat$211@{Error} = ExceptNotAnError@{Error};
        init flat$57$simpflat$212@{Double} = 0.0@{Double};
        if (eq#@{Error} conv$63$aval$6$simpflat$179 (ExceptNotAnError@{Error}))
        {
          init flat$63$simpflat$213@{Error} = ExceptNotAnError@{Error};
          init flat$63$simpflat$214@{Double} = 0.0@{Double};
          if (eq#@{Error} flat$41$simpflat$207 (ExceptNotAnError@{Error}))
          {
            write flat$63$simpflat$213 = ExceptNotAnError@{Error};
            write flat$63$simpflat$214 = sub#@{Double} conv$63$aval$6$simpflat$180 flat$41$simpflat$208;
          }
          else
          {
            write flat$63$simpflat$213 = flat$41$simpflat$207;
            write flat$63$simpflat$214 = 0.0@{Double};
          }
          read flat$63$simpflat$215 = flat$63$simpflat$213 [Error];
          read flat$63$simpflat$216 = flat$63$simpflat$214 [Double];
          write flat$57$simpflat$211 = flat$63$simpflat$215;
          write flat$57$simpflat$212 = flat$63$simpflat$216;
        }
        else
        {
          write flat$57$simpflat$211 = conv$63$aval$6$simpflat$179;
          write flat$57$simpflat$212 = 0.0@{Double};
        }
        read flat$57$simpflat$217 = flat$57$simpflat$211 [Error];
        read flat$57$simpflat$218 = flat$57$simpflat$212 [Double];
        init flat$58$simpflat$219@{Error} = ExceptNotAnError@{Error};
        init flat$58$simpflat$220@{Double} = 0.0@{Double};
        if (eq#@{Error} flat$57$simpflat$217 (ExceptNotAnError@{Error}))
        {
          write flat$58$simpflat$219 = ExceptNotAnError@{Error};
          write flat$58$simpflat$220 = mul#@{Double} flat$39$simpflat$200 flat$57$simpflat$218;
        }
        else
        {
          write flat$58$simpflat$219 = flat$57$simpflat$217;
          write flat$58$simpflat$220 = 0.0@{Double};
        }
        read flat$58$simpflat$221 = flat$58$simpflat$219 [Error];
        read flat$58$simpflat$222 = flat$58$simpflat$220 [Double];
        write flat$42$simpflat$209 = flat$58$simpflat$221;
        write flat$42$simpflat$210 = flat$58$simpflat$222;
      }
      else
      {
        write flat$42$simpflat$209 = flat$39$simpflat$199;
        write flat$42$simpflat$210 = 0.0@{Double};
      }
      read flat$42$simpflat$223 = flat$42$simpflat$209 [Error];
      read flat$42$simpflat$224 = flat$42$simpflat$210 [Double];
      init flat$43$simpflat$225@{Error} = ExceptNotAnError@{Error};
      init flat$43$simpflat$226@{Double} = 0.0@{Double};
      if (eq#@{Error} flat$42$simpflat$223 (ExceptNotAnError@{Error}))
      {
        write flat$43$simpflat$225 = ExceptNotAnError@{Error};
        write flat$43$simpflat$226 = add#@{Double} a$conv$64$aval$5$simpflat$192 flat$42$simpflat$224;
      }
      else
      {
        write flat$43$simpflat$225 = flat$42$simpflat$223;
        write flat$43$simpflat$226 = 0.0@{Double};
      }
      read flat$43$simpflat$227 = flat$43$simpflat$225 [Error];
      read flat$43$simpflat$228 = flat$43$simpflat$226 [Double];
      init flat$44$simpflat$229@{Error} = ExceptNotAnError@{Error};
      init flat$44$simpflat$230@{Double} = 0.0@{Double};
      init flat$44$simpflat$231@{Double} = 0.0@{Double};
      if (eq#@{Error} flat$41$simpflat$207 (ExceptNotAnError@{Error}))
      {
        write flat$44$simpflat$229 = ExceptNotAnError@{Error};
        write flat$44$simpflat$230 = add#@{Double} a$conv$64$aval$5$simpflat$190 (1.0@{Double});
        write flat$44$simpflat$231 = flat$41$simpflat$208;
      }
      else
      {
        write flat$44$simpflat$229 = flat$41$simpflat$207;
        write flat$44$simpflat$230 = 0.0@{Double};
        write flat$44$simpflat$231 = 0.0@{Double};
      }
      read flat$44$simpflat$232 = flat$44$simpflat$229 [Error];
      read flat$44$simpflat$233 = flat$44$simpflat$230 [Double];
      read flat$44$simpflat$234 = flat$44$simpflat$231 [Double];
      init flat$45$simpflat$235@{Error} = ExceptNotAnError@{Error};
      init flat$45$simpflat$236@{Double} = 0.0@{Double};
      init flat$45$simpflat$237@{Double} = 0.0@{Double};
      init flat$45$simpflat$238@{Double} = 0.0@{Double};
      if (eq#@{Error} flat$44$simpflat$232 (ExceptNotAnError@{Error}))
      {
        init flat$48$simpflat$239@{Error} = ExceptNotAnError@{Error};
        init flat$48$simpflat$240@{Double} = 0.0@{Double};
        init flat$48$simpflat$241@{Double} = 0.0@{Double};
        init flat$48$simpflat$242@{Double} = 0.0@{Double};
        if (eq#@{Error} flat$43$simpflat$227 (ExceptNotAnError@{Error}))
        {
          write flat$48$simpflat$239 = ExceptNotAnError@{Error};
          write flat$48$simpflat$240 = flat$44$simpflat$233;
          write flat$48$simpflat$241 = flat$44$simpflat$234;
          write flat$48$simpflat$242 = flat$43$simpflat$228;
        }
        else
        {
          write flat$48$simpflat$239 = flat$43$simpflat$227;
          write flat$48$simpflat$240 = 0.0@{Double};
          write flat$48$simpflat$241 = 0.0@{Double};
          write flat$48$simpflat$242 = 0.0@{Double};
        }
        read flat$48$simpflat$243 = flat$48$simpflat$239 [Error];
        read flat$48$simpflat$244 = flat$48$simpflat$240 [Double];
        read flat$48$simpflat$245 = flat$48$simpflat$241 [Double];
        read flat$48$simpflat$246 = flat$48$simpflat$242 [Double];
        write flat$45$simpflat$235 = flat$48$simpflat$243;
        write flat$45$simpflat$236 = flat$48$simpflat$244;
        write flat$45$simpflat$237 = flat$48$simpflat$245;
        write flat$45$simpflat$238 = flat$48$simpflat$246;
      }
      else
      {
        write flat$45$simpflat$235 = flat$44$simpflat$232;
        write flat$45$simpflat$236 = 0.0@{Double};
        write flat$45$simpflat$237 = 0.0@{Double};
        write flat$45$simpflat$238 = 0.0@{Double};
      }
      read flat$45$simpflat$247 = flat$45$simpflat$235 [Error];
      read flat$45$simpflat$248 = flat$45$simpflat$236 [Double];
      read flat$45$simpflat$249 = flat$45$simpflat$237 [Double];
      read flat$45$simpflat$250 = flat$45$simpflat$238 [Double];
      write flat$36$simpflat$193 = flat$45$simpflat$247;
      write flat$36$simpflat$194 = flat$45$simpflat$248;
      write flat$36$simpflat$195 = flat$45$simpflat$249;
      write flat$36$simpflat$196 = flat$45$simpflat$250;
    }
    else
    {
      write flat$36$simpflat$193 = a$conv$64$aval$5$simpflat$189;
      write flat$36$simpflat$194 = 0.0@{Double};
      write flat$36$simpflat$195 = 0.0@{Double};
      write flat$36$simpflat$196 = 0.0@{Double};
    }
    read flat$36$simpflat$251 = flat$36$simpflat$193 [Error];
    read flat$36$simpflat$252 = flat$36$simpflat$194 [Double];
    read flat$36$simpflat$253 = flat$36$simpflat$195 [Double];
    read flat$36$simpflat$254 = flat$36$simpflat$196 [Double];
    write acc$a$conv$64$simpflat$74 = flat$36$simpflat$251;
    write acc$a$conv$64$simpflat$75 = flat$36$simpflat$252;
    write acc$a$conv$64$simpflat$76 = flat$36$simpflat$253;
    write acc$a$conv$64$simpflat$77 = flat$36$simpflat$254;
  }
}
save_resumable@{Error} acc$a$conv$64$simpflat$74;
save_resumable@{Double} acc$a$conv$64$simpflat$75;
save_resumable@{Double} acc$a$conv$64$simpflat$76;
save_resumable@{Double} acc$a$conv$64$simpflat$77;
save_resumable@{Error} acc$conv$63$simpflat$64;
save_resumable@{Double} acc$conv$63$simpflat$65;
save_resumable@{Error} acc$conv$59$simpflat$56;
save_resumable@{Int} acc$conv$59$simpflat$57;
save_resumable@{Error} acc$conv$58$simpflat$50;
save_resumable@{Int} acc$conv$58$simpflat$51;
save_resumable@{Error} acc$s$reify$6$conv$13$simpflat$47;
save_resumable@{Double} acc$s$reify$6$conv$13$simpflat$48;
save_resumable@{Double} acc$s$reify$6$conv$13$simpflat$49;
save_resumable@{Error} acc$conv$12$simpflat$39;
save_resumable@{Double} acc$conv$12$simpflat$40;
save_resumable@{Error} acc$conv$8$simpflat$33;
save_resumable@{Double} acc$conv$8$simpflat$34;
read a$conv$64$simpflat$255 = acc$a$conv$64$simpflat$74 [Error];
read a$conv$64$simpflat$256 = acc$a$conv$64$simpflat$75 [Double];
read a$conv$64$simpflat$258 = acc$a$conv$64$simpflat$77 [Double];
read s$reify$6$conv$13$simpflat$259 = acc$s$reify$6$conv$13$simpflat$47 [Error];
read s$reify$6$conv$13$simpflat$260 = acc$s$reify$6$conv$13$simpflat$48 [Double];
init flat$89$simpflat$262@{Error} = ExceptNotAnError@{Error};
init flat$89$simpflat$263@{Double} = 0.0@{Double};
if (eq#@{Error} s$reify$6$conv$13$simpflat$259 (ExceptNotAnError@{Error}))
{
  write flat$89$simpflat$262 = ExceptNotAnError@{Error};
  write flat$89$simpflat$263 = s$reify$6$conv$13$simpflat$260;
}
else
{
  write flat$89$simpflat$262 = s$reify$6$conv$13$simpflat$259;
  write flat$89$simpflat$263 = 0.0@{Double};
}
read flat$89$simpflat$264 = flat$89$simpflat$262 [Error];
read flat$89$simpflat$265 = flat$89$simpflat$263 [Double];
init flat$90$simpflat$266@{Error} = ExceptNotAnError@{Error};
init flat$90$simpflat$267@{Double} = 0.0@{Double};
if (eq#@{Error} flat$89$simpflat$264 (ExceptNotAnError@{Error}))
{
  init flat$93$simpflat$268@{Error} = ExceptNotAnError@{Error};
  init flat$93$simpflat$269@{Double} = 0.0@{Double};
  if (eq#@{Error} a$conv$64$simpflat$255 (ExceptNotAnError@{Error}))
  {
    let conv$119 = sub#@{Double} a$conv$64$simpflat$256 (1.0@{Double});
    let simpflat$749 = div# a$conv$64$simpflat$258 conv$119;
    write flat$93$simpflat$268 = ExceptNotAnError@{Error};
    write flat$93$simpflat$269 = simpflat$749;
  }
  else
  {
    write flat$93$simpflat$268 = a$conv$64$simpflat$255;
    write flat$93$simpflat$269 = 0.0@{Double};
  }
  read flat$93$simpflat$270 = flat$93$simpflat$268 [Error];
  read flat$93$simpflat$271 = flat$93$simpflat$269 [Double];
  init flat$94$simpflat$272@{Error} = ExceptNotAnError@{Error};
  init flat$94$simpflat$273@{Double} = 0.0@{Double};
  if (eq#@{Error} flat$93$simpflat$270 (ExceptNotAnError@{Error}))
  {
    write flat$94$simpflat$272 = ExceptNotAnError@{Error};
    write flat$94$simpflat$273 = sqrt# flat$93$simpflat$271;
  }
  else
  {
    write flat$94$simpflat$272 = flat$93$simpflat$270;
    write flat$94$simpflat$273 = 0.0@{Double};
  }
  read flat$94$simpflat$274 = flat$94$simpflat$272 [Error];
  read flat$94$simpflat$275 = flat$94$simpflat$273 [Double];
  init flat$95$simpflat$276@{Error} = ExceptNotAnError@{Error};
  init flat$95$simpflat$277@{Double} = 0.0@{Double};
  if (eq#@{Error} flat$94$simpflat$274 (ExceptNotAnError@{Error}))
  {
    write flat$95$simpflat$276 = ExceptNotAnError@{Error};
    write flat$95$simpflat$277 = mul#@{Double} flat$89$simpflat$265 flat$94$simpflat$275;
  }
  else
  {
    write flat$95$simpflat$276 = flat$94$simpflat$274;
    write flat$95$simpflat$277 = 0.0@{Double};
  }
  read flat$95$simpflat$278 = flat$95$simpflat$276 [Error];
  read flat$95$simpflat$279 = flat$95$simpflat$277 [Double];
  write flat$90$simpflat$266 = flat$95$simpflat$278;
  write flat$90$simpflat$267 = flat$95$simpflat$279;
}
else
{
  write flat$90$simpflat$266 = flat$89$simpflat$264;
  write flat$90$simpflat$267 = 0.0@{Double};
}
read flat$90$simpflat$280 = flat$90$simpflat$266 [Error];
read flat$90$simpflat$281 = flat$90$simpflat$267 [Double];
output@{(Sum Error Double)} repl (flat$90$simpflat$280@{Error}, flat$90$simpflat$281@{Double});

- C:
#line 1 "state and input definition #0 - repl"

typedef struct {
    itime_t          convzd3;
    iint_t           new_count;
    ierror_t         *new_convzd0zdsimpflatzd282;
    istring_t        *new_convzd0zdsimpflatzd283;
    iint_t           *new_convzd0zdsimpflatzd284;
    itime_t          *new_convzd0zdsimpflatzd285;
} input_repl_t;

typedef struct {
    /* runtime */
    anemone_mempool_t *mempool;
    iint_t           max_map_size;

    /* inputs */
    input_repl_t     input;

  /* compute for (0,0) */
    /* outputs */
    ierror_t         replzdixzd0;
    idouble_t        replzdixzd1;

    /* resumables: values */
    idouble_t        res_0_0_acczdconvzd8zdsimpflatzd34;
    ierror_t         res_0_0_acczdconvzd8zdsimpflatzd33;
    ierror_t         res_0_0_acczdconvzd12zdsimpflatzd39;
    idouble_t        res_0_0_acczdconvzd12zdsimpflatzd40;
    idouble_t        res_0_0_acczdazdconvzd64zdsimpflatzd76;
    idouble_t        res_0_0_acczdazdconvzd64zdsimpflatzd77;
    ierror_t         res_0_0_acczdazdconvzd64zdsimpflatzd74;
    idouble_t        res_0_0_acczdazdconvzd64zdsimpflatzd75;
    ierror_t         res_0_0_acczdszdreifyzd6zdconvzd13zdsimpflatzd47;
    idouble_t        res_0_0_acczdszdreifyzd6zdconvzd13zdsimpflatzd49;
    idouble_t        res_0_0_acczdszdreifyzd6zdconvzd13zdsimpflatzd48;
    ierror_t         res_0_0_acczdconvzd58zdsimpflatzd50;
    iint_t           res_0_0_acczdconvzd58zdsimpflatzd51;
    ierror_t         res_0_0_acczdconvzd59zdsimpflatzd56;
    iint_t           res_0_0_acczdconvzd59zdsimpflatzd57;
    ierror_t         res_0_0_acczdconvzd63zdsimpflatzd64;
    idouble_t        res_0_0_acczdconvzd63zdsimpflatzd65;

    /* resumables: has flags */
    ibool_t          has_flags_start_0_0;
    ibool_t          has_0_0_acczdconvzd8zdsimpflatzd34;
    ibool_t          has_0_0_acczdconvzd8zdsimpflatzd33;
    ibool_t          has_0_0_acczdconvzd12zdsimpflatzd39;
    ibool_t          has_0_0_acczdconvzd12zdsimpflatzd40;
    ibool_t          has_0_0_acczdazdconvzd64zdsimpflatzd76;
    ibool_t          has_0_0_acczdazdconvzd64zdsimpflatzd77;
    ibool_t          has_0_0_acczdazdconvzd64zdsimpflatzd74;
    ibool_t          has_0_0_acczdazdconvzd64zdsimpflatzd75;
    ibool_t          has_0_0_acczdszdreifyzd6zdconvzd13zdsimpflatzd47;
    ibool_t          has_0_0_acczdszdreifyzd6zdconvzd13zdsimpflatzd49;
    ibool_t          has_0_0_acczdszdreifyzd6zdconvzd13zdsimpflatzd48;
    ibool_t          has_0_0_acczdconvzd58zdsimpflatzd50;
    ibool_t          has_0_0_acczdconvzd58zdsimpflatzd51;
    ibool_t          has_0_0_acczdconvzd59zdsimpflatzd56;
    ibool_t          has_0_0_acczdconvzd59zdsimpflatzd57;
    ibool_t          has_0_0_acczdconvzd63zdsimpflatzd64;
    ibool_t          has_0_0_acczdconvzd63zdsimpflatzd65;
    ibool_t          has_flags_end_0_0;


} iattribute_0_t;

iint_t size_of_state_iattribute_0 ()
{
    return sizeof (iattribute_0_t);
}

#line 1 "compute function #0 - repl icompute_attribute_0_compute_0"
void icompute_attribute_0_compute_0(iattribute_0_t *s)
{
    ierror_t         convzd12zdavalzd2zdsimpflatzd96;
    idouble_t        convzd12zdavalzd2zdsimpflatzd97;
    idouble_t        flatzd22zdsimpflatzd130;
    idouble_t        acczdconvzd8zdsimpflatzd34;
    ierror_t         acczdconvzd8zdsimpflatzd33;
    iint_t           flatzd34zdsimpflatzd160;
    idouble_t        flatzd35zdsimpflatzd176;
    ierror_t         flatzd35zdsimpflatzd177;
    ierror_t         flatzd35zdsimpflatzd175;
    idouble_t        flatzd35zdsimpflatzd178;
    ierror_t         flatzd20zdsimpflatzd119;
    idouble_t        flatzd20zdsimpflatzd118;
    ierror_t         flatzd20zdsimpflatzd117;
    ierror_t         flatzd31zdsimpflatzd149;
    idouble_t        flatzd95zdsimpflatzd279;
    ierror_t         flatzd95zdsimpflatzd278;
    ierror_t         flatzd95zdsimpflatzd276;
    idouble_t        flatzd95zdsimpflatzd277;
    ierror_t         flatzd93zdsimpflatzd270;
    idouble_t        flatzd93zdsimpflatzd271;
    ierror_t         flatzd94zdsimpflatzd274;
    idouble_t        flatzd94zdsimpflatzd273;
    ierror_t         flatzd94zdsimpflatzd272;
    idouble_t        flatzd94zdsimpflatzd275;
    idouble_t        flatzd93zdsimpflatzd269;
    ierror_t         flatzd93zdsimpflatzd268;
    ierror_t         flatzd90zdsimpflatzd266;
    idouble_t        flatzd90zdsimpflatzd267;
    ierror_t         flatzd0zdsimpflatzd78;
    iint_t           flatzd0zdsimpflatzd79;
    ierror_t         flatzd2zdsimpflatzd92;
    idouble_t        flatzd2zdsimpflatzd93;
    ierror_t         flatzd2zdsimpflatzd94;
    idouble_t        flatzd2zdsimpflatzd95;
    ierror_t         flatzd32zdsimpflatzd155;
    ibool_t          flatzd32zdsimpflatzd156;
    ibool_t          flatzd32zdsimpflatzd154;
    ierror_t         flatzd32zdsimpflatzd153;
    istring_t        flatzd31zdsimpflatzd150;
    ierror_t         flatzd31zdsimpflatzd151;
    istring_t        flatzd31zdsimpflatzd152;
    ierror_t         flatzd34zdsimpflatzd159;
    iint_t           flatzd34zdsimpflatzd158;
    ierror_t         flatzd34zdsimpflatzd157;
    iint_t           flatzd0zdsimpflatzd81;
    ierror_t         flatzd0zdsimpflatzd80;
    idouble_t        flatzd1zdsimpflatzd85;
    ierror_t         flatzd1zdsimpflatzd84;
    idouble_t        flatzd1zdsimpflatzd83;
    ierror_t         flatzd1zdsimpflatzd82;
    ierror_t         convzd8zdavalzd0zdsimpflatzd86;
    idouble_t        convzd8zdavalzd0zdsimpflatzd87;
    ierror_t         acczdconvzd12zdsimpflatzd39;
    idouble_t        acczdconvzd12zdsimpflatzd40;
    idouble_t        acczdazdconvzd64zdsimpflatzd76;
    idouble_t        acczdazdconvzd64zdsimpflatzd77;
    ierror_t         acczdazdconvzd64zdsimpflatzd74;
    idouble_t        acczdazdconvzd64zdsimpflatzd75;
    ierror_t         flatzd21zdsimpflatzd121;
    idouble_t        flatzd21zdsimpflatzd122;
    idouble_t        flatzd21zdsimpflatzd124;
    ierror_t         flatzd21zdsimpflatzd123;
    idouble_t        flatzd20zdsimpflatzd120;
    ierror_t         flatzd22zdsimpflatzd128;
    idouble_t        flatzd22zdsimpflatzd129;
    ierror_t         flatzd22zdsimpflatzd125;
    idouble_t        flatzd22zdsimpflatzd126;
    idouble_t        flatzd22zdsimpflatzd127;
    idouble_t        flatzd90zdsimpflatzd281;
    ierror_t         flatzd90zdsimpflatzd280;
    idouble_t        flatzd9zdsimpflatzd109;
    ierror_t         flatzd9zdsimpflatzd107;
    idouble_t        flatzd9zdsimpflatzd108;
    idouble_t        flatzd36zdsimpflatzd196;
    idouble_t        flatzd36zdsimpflatzd194;
    idouble_t        flatzd36zdsimpflatzd195;
    ierror_t         flatzd36zdsimpflatzd193;
    ierror_t         flatzd39zdsimpflatzd197;
    idouble_t        flatzd39zdsimpflatzd198;
    ierror_t         flatzd39zdsimpflatzd199;
    idouble_t        flatzd36zdsimpflatzd254;
    idouble_t        flatzd36zdsimpflatzd253;
    idouble_t        flatzd36zdsimpflatzd252;
    ierror_t         flatzd36zdsimpflatzd251;
    idouble_t        flatzd12zdsimpflatzd144;
    idouble_t        flatzd12zdsimpflatzd145;
    ierror_t         flatzd12zdsimpflatzd143;
    idouble_t        flatzd13zdsimpflatzd141;
    ierror_t         flatzd13zdsimpflatzd140;
    idouble_t        flatzd13zdsimpflatzd142;
    ierror_t         flatzd13zdsimpflatzd137;
    idouble_t        flatzd13zdsimpflatzd138;
    idouble_t        flatzd13zdsimpflatzd139;
    ierror_t         flatzd12zdsimpflatzd134;
    idouble_t        flatzd12zdsimpflatzd136;
    idouble_t        flatzd12zdsimpflatzd135;
    ierror_t         flatzd16zdsimpflatzd131;
    idouble_t        flatzd16zdsimpflatzd133;
    idouble_t        flatzd16zdsimpflatzd132;
    idouble_t        flatzd39zdsimpflatzd200;
    idouble_t        flatzd16zdsimpflatzd111;
    idouble_t        flatzd16zdsimpflatzd112;
    ierror_t         flatzd16zdsimpflatzd110;
    ierror_t         flatzd19zdsimpflatzd113;
    idouble_t        flatzd19zdsimpflatzd114;
    ierror_t         flatzd19zdsimpflatzd115;
    idouble_t        flatzd19zdsimpflatzd116;
    ierror_t         flatzd9zdsimpflatzd146;
    idouble_t        flatzd9zdsimpflatzd147;
    idouble_t        flatzd9zdsimpflatzd148;
    ierror_t         flatzd40zdsimpflatzd203;
    idouble_t        flatzd40zdsimpflatzd202;
    idouble_t        flatzd40zdsimpflatzd204;
    ierror_t         flatzd40zdsimpflatzd201;
    ierror_t         flatzd42zdsimpflatzd209;
    idouble_t        flatzd41zdsimpflatzd206;
    ierror_t         flatzd41zdsimpflatzd207;
    ierror_t         flatzd41zdsimpflatzd205;
    idouble_t        flatzd41zdsimpflatzd208;
    idouble_t        flatzd42zdsimpflatzd210;
    ierror_t         acczdszdreifyzd6zdconvzd13zdsimpflatzd47;
    idouble_t        acczdszdreifyzd6zdconvzd13zdsimpflatzd49;
    idouble_t        acczdszdreifyzd6zdconvzd13zdsimpflatzd48;
    ierror_t         convzd63zdavalzd6zdsimpflatzd179;
    idouble_t        flatzd42zdsimpflatzd224;
    ierror_t         flatzd42zdsimpflatzd223;
    ierror_t         flatzd44zdsimpflatzd229;
    ierror_t         flatzd43zdsimpflatzd225;
    ierror_t         flatzd43zdsimpflatzd227;
    idouble_t        flatzd43zdsimpflatzd226;
    idouble_t        flatzd43zdsimpflatzd228;
    idouble_t        flatzd45zdsimpflatzd238;
    ierror_t         flatzd45zdsimpflatzd235;
    idouble_t        flatzd45zdsimpflatzd236;
    idouble_t        flatzd45zdsimpflatzd237;
    ierror_t         flatzd44zdsimpflatzd232;
    idouble_t        flatzd44zdsimpflatzd233;
    idouble_t        flatzd44zdsimpflatzd230;
    idouble_t        flatzd44zdsimpflatzd231;
    idouble_t        flatzd44zdsimpflatzd234;
    ierror_t         flatzd48zdsimpflatzd239;
    ierror_t         flatzd57zdsimpflatzd217;
    idouble_t        flatzd57zdsimpflatzd212;
    ierror_t         flatzd57zdsimpflatzd211;
    idouble_t        flatzd57zdsimpflatzd218;
    ierror_t         flatzd58zdsimpflatzd219;
    ierror_t         acczdconvzd58zdsimpflatzd50;
    iint_t           acczdconvzd58zdsimpflatzd51;
    ierror_t         acczdconvzd59zdsimpflatzd56;
    iint_t           acczdconvzd59zdsimpflatzd57;
    idouble_t        azdconvzd64zdsimpflatzd258;
    idouble_t        azdconvzd64zdsimpflatzd256;
    ierror_t         azdconvzd64zdsimpflatzd255;
    idouble_t        flatzd48zdsimpflatzd244;
    idouble_t        flatzd48zdsimpflatzd246;
    idouble_t        flatzd48zdsimpflatzd240;
    ierror_t         flatzd48zdsimpflatzd243;
    idouble_t        flatzd48zdsimpflatzd242;
    idouble_t        flatzd48zdsimpflatzd245;
    idouble_t        flatzd48zdsimpflatzd241;
    idouble_t        flatzd45zdsimpflatzd248;
    idouble_t        flatzd45zdsimpflatzd249;
    ierror_t         flatzd45zdsimpflatzd247;
    idouble_t        flatzd58zdsimpflatzd220;
    ierror_t         flatzd58zdsimpflatzd221;
    idouble_t        flatzd58zdsimpflatzd222;
    idouble_t        flatzd45zdsimpflatzd250;
    ierror_t         flatzd63zdsimpflatzd213;
    ierror_t         flatzd63zdsimpflatzd215;
    idouble_t        flatzd63zdsimpflatzd216;
    idouble_t        flatzd63zdsimpflatzd214;
    idouble_t        azdconvzd64zdavalzd5zdsimpflatzd192;
    idouble_t        azdconvzd64zdavalzd5zdsimpflatzd191;
    idouble_t        azdconvzd64zdavalzd5zdsimpflatzd190;
    ierror_t         acczdconvzd63zdsimpflatzd64;
    idouble_t        acczdconvzd63zdsimpflatzd65;
    idouble_t        szdreifyzd6zdconvzd13zdsimpflatzd260;
    idouble_t        convzd63zdavalzd6zdsimpflatzd180;
    ierror_t         azdconvzd64zdavalzd5zdsimpflatzd189;
    ierror_t         szdreifyzd6zdconvzd13zdsimpflatzd259;
    idouble_t        szdreifyzd6zdconvzd13zdavalzd1zdsimpflatzd106;
    ierror_t         szdreifyzd6zdconvzd13zdavalzd1zdsimpflatzd104;
    idouble_t        szdreifyzd6zdconvzd13zdavalzd1zdsimpflatzd105;
    iint_t           convzd58zdavalzd3zdsimpflatzd162;
    ierror_t         convzd58zdavalzd3zdsimpflatzd161;
    ierror_t         convzd59zdavalzd4zdsimpflatzd167;
    iint_t           convzd59zdavalzd4zdsimpflatzd168;
    idouble_t        flatzd89zdsimpflatzd263;
    ierror_t         flatzd89zdsimpflatzd262;
    idouble_t        flatzd89zdsimpflatzd265;
    ierror_t         flatzd89zdsimpflatzd264;
    ibool_t          flatzd33;

    anemone_mempool_t *mempool                = s->mempool;
    itime_t          convzd3                  = s->input.convzd3;
    iint_t           convzd4                  = s->max_map_size;

    acczdconvzd8zdsimpflatzd33                = ierror_not_an_error;                  /* init */
    acczdconvzd8zdsimpflatzd34                = 0.0;                                  /* init */
    acczdconvzd12zdsimpflatzd39               = ierror_not_an_error;                  /* init */
    acczdconvzd12zdsimpflatzd40               = 0.0;                                  /* init */
    acczdszdreifyzd6zdconvzd13zdsimpflatzd47  = ierror_fold1_no_value;                /* init */
    acczdszdreifyzd6zdconvzd13zdsimpflatzd48  = 0.0;                                  /* init */
    acczdszdreifyzd6zdconvzd13zdsimpflatzd49  = 0.0;                                  /* init */
    acczdconvzd58zdsimpflatzd50               = ierror_not_an_error;                  /* init */
    acczdconvzd58zdsimpflatzd51               = 0;                                    /* init */
    acczdconvzd59zdsimpflatzd56               = ierror_not_an_error;                  /* init */
    acczdconvzd59zdsimpflatzd57               = 0;                                    /* init */
    acczdconvzd63zdsimpflatzd64               = ierror_not_an_error;                  /* init */
    acczdconvzd63zdsimpflatzd65               = 0.0;                                  /* init */
    acczdazdconvzd64zdsimpflatzd74            = ierror_not_an_error;                  /* init */
    acczdazdconvzd64zdsimpflatzd75            = 0.0;                                  /* init */
    acczdazdconvzd64zdsimpflatzd76            = 0.0;                                  /* init */
    acczdazdconvzd64zdsimpflatzd77            = 0.0;                                  /* init */
    
    if (s->has_0_0_acczdazdconvzd64zdsimpflatzd74) {
        acczdazdconvzd64zdsimpflatzd74        = s->res_0_0_acczdazdconvzd64zdsimpflatzd74; /* load */
    }
    
    if (s->has_0_0_acczdazdconvzd64zdsimpflatzd75) {
        acczdazdconvzd64zdsimpflatzd75        = s->res_0_0_acczdazdconvzd64zdsimpflatzd75; /* load */
    }
    
    if (s->has_0_0_acczdazdconvzd64zdsimpflatzd76) {
        acczdazdconvzd64zdsimpflatzd76        = s->res_0_0_acczdazdconvzd64zdsimpflatzd76; /* load */
    }
    
    if (s->has_0_0_acczdazdconvzd64zdsimpflatzd77) {
        acczdazdconvzd64zdsimpflatzd77        = s->res_0_0_acczdazdconvzd64zdsimpflatzd77; /* load */
    }
    
    if (s->has_0_0_acczdconvzd63zdsimpflatzd64) {
        acczdconvzd63zdsimpflatzd64           = s->res_0_0_acczdconvzd63zdsimpflatzd64; /* load */
    }
    
    if (s->has_0_0_acczdconvzd63zdsimpflatzd65) {
        acczdconvzd63zdsimpflatzd65           = s->res_0_0_acczdconvzd63zdsimpflatzd65; /* load */
    }
    
    if (s->has_0_0_acczdconvzd59zdsimpflatzd56) {
        acczdconvzd59zdsimpflatzd56           = s->res_0_0_acczdconvzd59zdsimpflatzd56; /* load */
    }
    
    if (s->has_0_0_acczdconvzd59zdsimpflatzd57) {
        acczdconvzd59zdsimpflatzd57           = s->res_0_0_acczdconvzd59zdsimpflatzd57; /* load */
    }
    
    if (s->has_0_0_acczdconvzd58zdsimpflatzd50) {
        acczdconvzd58zdsimpflatzd50           = s->res_0_0_acczdconvzd58zdsimpflatzd50; /* load */
    }
    
    if (s->has_0_0_acczdconvzd58zdsimpflatzd51) {
        acczdconvzd58zdsimpflatzd51           = s->res_0_0_acczdconvzd58zdsimpflatzd51; /* load */
    }
    
    if (s->has_0_0_acczdszdreifyzd6zdconvzd13zdsimpflatzd47) {
        acczdszdreifyzd6zdconvzd13zdsimpflatzd47 = s->res_0_0_acczdszdreifyzd6zdconvzd13zdsimpflatzd47; /* load */
    }
    
    if (s->has_0_0_acczdszdreifyzd6zdconvzd13zdsimpflatzd48) {
        acczdszdreifyzd6zdconvzd13zdsimpflatzd48 = s->res_0_0_acczdszdreifyzd6zdconvzd13zdsimpflatzd48; /* load */
    }
    
    if (s->has_0_0_acczdszdreifyzd6zdconvzd13zdsimpflatzd49) {
        acczdszdreifyzd6zdconvzd13zdsimpflatzd49 = s->res_0_0_acczdszdreifyzd6zdconvzd13zdsimpflatzd49; /* load */
    }
    
    if (s->has_0_0_acczdconvzd12zdsimpflatzd39) {
        acczdconvzd12zdsimpflatzd39           = s->res_0_0_acczdconvzd12zdsimpflatzd39; /* load */
    }
    
    if (s->has_0_0_acczdconvzd12zdsimpflatzd40) {
        acczdconvzd12zdsimpflatzd40           = s->res_0_0_acczdconvzd12zdsimpflatzd40; /* load */
    }
    
    if (s->has_0_0_acczdconvzd8zdsimpflatzd33) {
        acczdconvzd8zdsimpflatzd33            = s->res_0_0_acczdconvzd8zdsimpflatzd33; /* load */
    }
    
    if (s->has_0_0_acczdconvzd8zdsimpflatzd34) {
        acczdconvzd8zdsimpflatzd34            = s->res_0_0_acczdconvzd8zdsimpflatzd34; /* load */
    }
    
    const iint_t     new_count                = s->input.new_count;
    const ierror_t  *const new_convzd0zdsimpflatzd282 = s->input.new_convzd0zdsimpflatzd282;
    const istring_t *const new_convzd0zdsimpflatzd283 = s->input.new_convzd0zdsimpflatzd283;
    const iint_t    *const new_convzd0zdsimpflatzd284 = s->input.new_convzd0zdsimpflatzd284;
    const itime_t   *const new_convzd0zdsimpflatzd285 = s->input.new_convzd0zdsimpflatzd285;
    
    for (iint_t i = 0; i < new_count; i++) {
        ifactid_t        convzd1              = i;
        itime_t          convzd2              = new_convzd0zdsimpflatzd285[i];
        ierror_t         convzd0zdsimpflatzd282 = new_convzd0zdsimpflatzd282[i];
        istring_t        convzd0zdsimpflatzd283 = new_convzd0zdsimpflatzd283[i];
        iint_t           convzd0zdsimpflatzd284 = new_convzd0zdsimpflatzd284[i];
        itime_t          convzd0zdsimpflatzd285 = new_convzd0zdsimpflatzd285[i];
        flatzd0zdsimpflatzd78                 = ierror_not_an_error;                  /* init */
        flatzd0zdsimpflatzd79                 = 0;                                    /* init */
        
        if (ierror_eq (convzd0zdsimpflatzd282, ierror_not_an_error)) {
            flatzd0zdsimpflatzd78             = ierror_not_an_error;                  /* write */
            flatzd0zdsimpflatzd79             = convzd0zdsimpflatzd284;               /* write */
        } else {
            flatzd0zdsimpflatzd78             = convzd0zdsimpflatzd282;               /* write */
            flatzd0zdsimpflatzd79             = 0;                                    /* write */
        }
        
        flatzd0zdsimpflatzd80                 = flatzd0zdsimpflatzd78;                /* read */
        flatzd0zdsimpflatzd81                 = flatzd0zdsimpflatzd79;                /* read */
        flatzd1zdsimpflatzd82                 = ierror_not_an_error;                  /* init */
        flatzd1zdsimpflatzd83                 = 0.0;                                  /* init */
        
        if (ierror_eq (flatzd0zdsimpflatzd80, ierror_not_an_error)) {
            flatzd1zdsimpflatzd82             = ierror_not_an_error;                  /* write */
            flatzd1zdsimpflatzd83             = iint_extend (flatzd0zdsimpflatzd81);  /* write */
        } else {
            flatzd1zdsimpflatzd82             = flatzd0zdsimpflatzd80;                /* write */
            flatzd1zdsimpflatzd83             = 0.0;                                  /* write */
        }
        
        flatzd1zdsimpflatzd84                 = flatzd1zdsimpflatzd82;                /* read */
        flatzd1zdsimpflatzd85                 = flatzd1zdsimpflatzd83;                /* read */
        acczdconvzd8zdsimpflatzd33            = flatzd1zdsimpflatzd84;                /* write */
        acczdconvzd8zdsimpflatzd34            = flatzd1zdsimpflatzd85;                /* write */
        convzd8zdavalzd0zdsimpflatzd86        = acczdconvzd8zdsimpflatzd33;           /* read */
        convzd8zdavalzd0zdsimpflatzd87        = acczdconvzd8zdsimpflatzd34;           /* read */
        flatzd2zdsimpflatzd92                 = ierror_not_an_error;                  /* init */
        flatzd2zdsimpflatzd93                 = 0.0;                                  /* init */
        
        if (ierror_eq (convzd8zdavalzd0zdsimpflatzd86, ierror_not_an_error)) {
            flatzd2zdsimpflatzd92             = ierror_not_an_error;                  /* write */
            flatzd2zdsimpflatzd93             = convzd8zdavalzd0zdsimpflatzd87;       /* write */
        } else {
            flatzd2zdsimpflatzd92             = convzd8zdavalzd0zdsimpflatzd86;       /* write */
            flatzd2zdsimpflatzd93             = 0.0;                                  /* write */
        }
        
        flatzd2zdsimpflatzd94                 = flatzd2zdsimpflatzd92;                /* read */
        flatzd2zdsimpflatzd95                 = flatzd2zdsimpflatzd93;                /* read */
        acczdconvzd12zdsimpflatzd39           = flatzd2zdsimpflatzd94;                /* write */
        acczdconvzd12zdsimpflatzd40           = flatzd2zdsimpflatzd95;                /* write */
        convzd12zdavalzd2zdsimpflatzd96       = acczdconvzd12zdsimpflatzd39;          /* read */
        convzd12zdavalzd2zdsimpflatzd97       = acczdconvzd12zdsimpflatzd40;          /* read */
        szdreifyzd6zdconvzd13zdavalzd1zdsimpflatzd104 = acczdszdreifyzd6zdconvzd13zdsimpflatzd47; /* read */
        szdreifyzd6zdconvzd13zdavalzd1zdsimpflatzd105 = acczdszdreifyzd6zdconvzd13zdsimpflatzd48; /* read */
        szdreifyzd6zdconvzd13zdavalzd1zdsimpflatzd106 = acczdszdreifyzd6zdconvzd13zdsimpflatzd49; /* read */
        flatzd9zdsimpflatzd107                = ierror_not_an_error;                  /* init */
        flatzd9zdsimpflatzd108                = 0.0;                                  /* init */
        flatzd9zdsimpflatzd109                = 0.0;                                  /* init */
        
        if (ierror_eq (szdreifyzd6zdconvzd13zdavalzd1zdsimpflatzd104, ierror_not_an_error)) {
            flatzd16zdsimpflatzd110           = ierror_not_an_error;                  /* init */
            flatzd16zdsimpflatzd111           = 0.0;                                  /* init */
            flatzd16zdsimpflatzd112           = 0.0;                                  /* init */
            
            if (ierror_eq (szdreifyzd6zdconvzd13zdavalzd1zdsimpflatzd104, ierror_not_an_error)) {
                flatzd19zdsimpflatzd113       = ierror_not_an_error;                  /* init */
                flatzd19zdsimpflatzd114       = 0.0;                                  /* init */
                
                if (ierror_eq (convzd12zdavalzd2zdsimpflatzd96, ierror_not_an_error)) {
                    flatzd19zdsimpflatzd113   = ierror_not_an_error;                  /* write */
                    flatzd19zdsimpflatzd114   = idouble_sub (convzd12zdavalzd2zdsimpflatzd97, szdreifyzd6zdconvzd13zdavalzd1zdsimpflatzd105); /* write */
                } else {
                    flatzd19zdsimpflatzd113   = convzd12zdavalzd2zdsimpflatzd96;      /* write */
                    flatzd19zdsimpflatzd114   = 0.0;                                  /* write */
                }
                
                flatzd19zdsimpflatzd115       = flatzd19zdsimpflatzd113;              /* read */
                flatzd19zdsimpflatzd116       = flatzd19zdsimpflatzd114;              /* read */
                flatzd20zdsimpflatzd117       = ierror_not_an_error;                  /* init */
                flatzd20zdsimpflatzd118       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzd19zdsimpflatzd115, ierror_not_an_error)) {
                    flatzd20zdsimpflatzd117   = ierror_not_an_error;                  /* write */
                    idouble_t        simpflatzd354 = idouble_add (szdreifyzd6zdconvzd13zdavalzd1zdsimpflatzd106, 1.0); /* let */
                    flatzd20zdsimpflatzd118   = idouble_div (flatzd19zdsimpflatzd116, simpflatzd354); /* write */
                } else {
                    flatzd20zdsimpflatzd117   = flatzd19zdsimpflatzd115;              /* write */
                    flatzd20zdsimpflatzd118   = 0.0;                                  /* write */
                }
                
                flatzd20zdsimpflatzd119       = flatzd20zdsimpflatzd117;              /* read */
                flatzd20zdsimpflatzd120       = flatzd20zdsimpflatzd118;              /* read */
                flatzd21zdsimpflatzd121       = ierror_not_an_error;                  /* init */
                flatzd21zdsimpflatzd122       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzd20zdsimpflatzd119, ierror_not_an_error)) {
                    flatzd21zdsimpflatzd121   = ierror_not_an_error;                  /* write */
                    flatzd21zdsimpflatzd122   = idouble_add (szdreifyzd6zdconvzd13zdavalzd1zdsimpflatzd105, flatzd20zdsimpflatzd120); /* write */
                } else {
                    flatzd21zdsimpflatzd121   = flatzd20zdsimpflatzd119;              /* write */
                    flatzd21zdsimpflatzd122   = 0.0;                                  /* write */
                }
                
                flatzd21zdsimpflatzd123       = flatzd21zdsimpflatzd121;              /* read */
                flatzd21zdsimpflatzd124       = flatzd21zdsimpflatzd122;              /* read */
                flatzd22zdsimpflatzd125       = ierror_not_an_error;                  /* init */
                flatzd22zdsimpflatzd126       = 0.0;                                  /* init */
                flatzd22zdsimpflatzd127       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzd21zdsimpflatzd123, ierror_not_an_error)) {
                    flatzd22zdsimpflatzd125   = ierror_not_an_error;                  /* write */
                    flatzd22zdsimpflatzd126   = flatzd21zdsimpflatzd124;              /* write */
                    flatzd22zdsimpflatzd127   = idouble_add (szdreifyzd6zdconvzd13zdavalzd1zdsimpflatzd106, 1.0); /* write */
                } else {
                    flatzd22zdsimpflatzd125   = flatzd21zdsimpflatzd123;              /* write */
                    flatzd22zdsimpflatzd126   = 0.0;                                  /* write */
                    flatzd22zdsimpflatzd127   = 0.0;                                  /* write */
                }
                
                flatzd22zdsimpflatzd128       = flatzd22zdsimpflatzd125;              /* read */
                flatzd22zdsimpflatzd129       = flatzd22zdsimpflatzd126;              /* read */
                flatzd22zdsimpflatzd130       = flatzd22zdsimpflatzd127;              /* read */
                flatzd16zdsimpflatzd110       = flatzd22zdsimpflatzd128;              /* write */
                flatzd16zdsimpflatzd111       = flatzd22zdsimpflatzd129;              /* write */
                flatzd16zdsimpflatzd112       = flatzd22zdsimpflatzd130;              /* write */
            } else {
                flatzd16zdsimpflatzd110       = szdreifyzd6zdconvzd13zdavalzd1zdsimpflatzd104; /* write */
                flatzd16zdsimpflatzd111       = 0.0;                                  /* write */
                flatzd16zdsimpflatzd112       = 0.0;                                  /* write */
            }
            
            flatzd16zdsimpflatzd131           = flatzd16zdsimpflatzd110;              /* read */
            flatzd16zdsimpflatzd132           = flatzd16zdsimpflatzd111;              /* read */
            flatzd16zdsimpflatzd133           = flatzd16zdsimpflatzd112;              /* read */
            flatzd9zdsimpflatzd107            = flatzd16zdsimpflatzd131;              /* write */
            flatzd9zdsimpflatzd108            = flatzd16zdsimpflatzd132;              /* write */
            flatzd9zdsimpflatzd109            = flatzd16zdsimpflatzd133;              /* write */
        } else {
            flatzd12zdsimpflatzd134           = ierror_not_an_error;                  /* init */
            flatzd12zdsimpflatzd135           = 0.0;                                  /* init */
            flatzd12zdsimpflatzd136           = 0.0;                                  /* init */
            
            if (ierror_eq (ierror_fold1_no_value, szdreifyzd6zdconvzd13zdavalzd1zdsimpflatzd104)) {
                flatzd13zdsimpflatzd137       = ierror_not_an_error;                  /* init */
                flatzd13zdsimpflatzd138       = 0.0;                                  /* init */
                flatzd13zdsimpflatzd139       = 0.0;                                  /* init */
                
                if (ierror_eq (convzd12zdavalzd2zdsimpflatzd96, ierror_not_an_error)) {
                    flatzd13zdsimpflatzd137   = ierror_not_an_error;                  /* write */
                    flatzd13zdsimpflatzd138   = convzd12zdavalzd2zdsimpflatzd97;      /* write */
                    flatzd13zdsimpflatzd139   = 1.0;                                  /* write */
                } else {
                    flatzd13zdsimpflatzd137   = convzd12zdavalzd2zdsimpflatzd96;      /* write */
                    flatzd13zdsimpflatzd138   = 0.0;                                  /* write */
                    flatzd13zdsimpflatzd139   = 0.0;                                  /* write */
                }
                
                flatzd13zdsimpflatzd140       = flatzd13zdsimpflatzd137;              /* read */
                flatzd13zdsimpflatzd141       = flatzd13zdsimpflatzd138;              /* read */
                flatzd13zdsimpflatzd142       = flatzd13zdsimpflatzd139;              /* read */
                flatzd12zdsimpflatzd134       = flatzd13zdsimpflatzd140;              /* write */
                flatzd12zdsimpflatzd135       = flatzd13zdsimpflatzd141;              /* write */
                flatzd12zdsimpflatzd136       = flatzd13zdsimpflatzd142;              /* write */
            } else {
                flatzd12zdsimpflatzd134       = szdreifyzd6zdconvzd13zdavalzd1zdsimpflatzd104; /* write */
                flatzd12zdsimpflatzd135       = 0.0;                                  /* write */
                flatzd12zdsimpflatzd136       = 0.0;                                  /* write */
            }
            
            flatzd12zdsimpflatzd143           = flatzd12zdsimpflatzd134;              /* read */
            flatzd12zdsimpflatzd144           = flatzd12zdsimpflatzd135;              /* read */
            flatzd12zdsimpflatzd145           = flatzd12zdsimpflatzd136;              /* read */
            flatzd9zdsimpflatzd107            = flatzd12zdsimpflatzd143;              /* write */
            flatzd9zdsimpflatzd108            = flatzd12zdsimpflatzd144;              /* write */
            flatzd9zdsimpflatzd109            = flatzd12zdsimpflatzd145;              /* write */
        }
        
        flatzd9zdsimpflatzd146                = flatzd9zdsimpflatzd107;               /* read */
        flatzd9zdsimpflatzd147                = flatzd9zdsimpflatzd108;               /* read */
        flatzd9zdsimpflatzd148                = flatzd9zdsimpflatzd109;               /* read */
        acczdszdreifyzd6zdconvzd13zdsimpflatzd47 = flatzd9zdsimpflatzd146;            /* write */
        acczdszdreifyzd6zdconvzd13zdsimpflatzd48 = flatzd9zdsimpflatzd147;            /* write */
        acczdszdreifyzd6zdconvzd13zdsimpflatzd49 = flatzd9zdsimpflatzd148;            /* write */
        flatzd31zdsimpflatzd149               = ierror_not_an_error;                  /* init */
        flatzd31zdsimpflatzd150               = "";                                   /* init */
        
        if (ierror_eq (convzd0zdsimpflatzd282, ierror_not_an_error)) {
            flatzd31zdsimpflatzd149           = ierror_not_an_error;                  /* write */
            flatzd31zdsimpflatzd150           = convzd0zdsimpflatzd283;               /* write */
        } else {
            flatzd31zdsimpflatzd149           = convzd0zdsimpflatzd282;               /* write */
            flatzd31zdsimpflatzd150           = "";                                   /* write */
        }
        
        flatzd31zdsimpflatzd151               = flatzd31zdsimpflatzd149;              /* read */
        flatzd31zdsimpflatzd152               = flatzd31zdsimpflatzd150;              /* read */
        flatzd32zdsimpflatzd153               = ierror_not_an_error;                  /* init */
        flatzd32zdsimpflatzd154               = ifalse;                               /* init */
        
        if (ierror_eq (flatzd31zdsimpflatzd151, ierror_not_an_error)) {
            flatzd32zdsimpflatzd153           = ierror_not_an_error;                  /* write */
            flatzd32zdsimpflatzd154           = istring_eq (flatzd31zdsimpflatzd152, "torso"); /* write */
        } else {
            flatzd32zdsimpflatzd153           = flatzd31zdsimpflatzd151;              /* write */
            flatzd32zdsimpflatzd154           = ifalse;                               /* write */
        }
        
        flatzd32zdsimpflatzd155               = flatzd32zdsimpflatzd153;              /* read */
        flatzd32zdsimpflatzd156               = flatzd32zdsimpflatzd154;              /* read */
        flatzd33                              = ifalse;                               /* init */
        
        if (ierror_eq (flatzd32zdsimpflatzd155, ierror_not_an_error)) {
            flatzd33                          = flatzd32zdsimpflatzd156;              /* write */
        } else {
            flatzd33                          = itrue;                                /* write */
        }
        
        flatzd33                              = flatzd33;                             /* read */
        
        if (flatzd33) {
            flatzd34zdsimpflatzd157           = ierror_not_an_error;                  /* init */
            flatzd34zdsimpflatzd158           = 0;                                    /* init */
            
            if (ierror_eq (convzd0zdsimpflatzd282, ierror_not_an_error)) {
                flatzd34zdsimpflatzd157       = ierror_not_an_error;                  /* write */
                flatzd34zdsimpflatzd158       = convzd0zdsimpflatzd284;               /* write */
            } else {
                flatzd34zdsimpflatzd157       = convzd0zdsimpflatzd282;               /* write */
                flatzd34zdsimpflatzd158       = 0;                                    /* write */
            }
            
            flatzd34zdsimpflatzd159           = flatzd34zdsimpflatzd157;              /* read */
            flatzd34zdsimpflatzd160           = flatzd34zdsimpflatzd158;              /* read */
            acczdconvzd58zdsimpflatzd50       = flatzd34zdsimpflatzd159;              /* write */
            acczdconvzd58zdsimpflatzd51       = flatzd34zdsimpflatzd160;              /* write */
            convzd58zdavalzd3zdsimpflatzd161  = acczdconvzd58zdsimpflatzd50;          /* read */
            convzd58zdavalzd3zdsimpflatzd162  = acczdconvzd58zdsimpflatzd51;          /* read */
            acczdconvzd59zdsimpflatzd56       = convzd58zdavalzd3zdsimpflatzd161;     /* write */
            acczdconvzd59zdsimpflatzd57       = convzd58zdavalzd3zdsimpflatzd162;     /* write */
            convzd59zdavalzd4zdsimpflatzd167  = acczdconvzd59zdsimpflatzd56;          /* read */
            convzd59zdavalzd4zdsimpflatzd168  = acczdconvzd59zdsimpflatzd57;          /* read */
            flatzd35zdsimpflatzd175           = ierror_not_an_error;                  /* init */
            flatzd35zdsimpflatzd176           = 0.0;                                  /* init */
            
            if (ierror_eq (convzd59zdavalzd4zdsimpflatzd167, ierror_not_an_error)) {
                flatzd35zdsimpflatzd175       = ierror_not_an_error;                  /* write */
                flatzd35zdsimpflatzd176       = iint_extend (convzd59zdavalzd4zdsimpflatzd168); /* write */
            } else {
                flatzd35zdsimpflatzd175       = convzd59zdavalzd4zdsimpflatzd167;     /* write */
                flatzd35zdsimpflatzd176       = 0.0;                                  /* write */
            }
            
            flatzd35zdsimpflatzd177           = flatzd35zdsimpflatzd175;              /* read */
            flatzd35zdsimpflatzd178           = flatzd35zdsimpflatzd176;              /* read */
            acczdconvzd63zdsimpflatzd64       = flatzd35zdsimpflatzd177;              /* write */
            acczdconvzd63zdsimpflatzd65       = flatzd35zdsimpflatzd178;              /* write */
            convzd63zdavalzd6zdsimpflatzd179  = acczdconvzd63zdsimpflatzd64;          /* read */
            convzd63zdavalzd6zdsimpflatzd180  = acczdconvzd63zdsimpflatzd65;          /* read */
            azdconvzd64zdavalzd5zdsimpflatzd189 = acczdazdconvzd64zdsimpflatzd74;     /* read */
            azdconvzd64zdavalzd5zdsimpflatzd190 = acczdazdconvzd64zdsimpflatzd75;     /* read */
            azdconvzd64zdavalzd5zdsimpflatzd191 = acczdazdconvzd64zdsimpflatzd76;     /* read */
            azdconvzd64zdavalzd5zdsimpflatzd192 = acczdazdconvzd64zdsimpflatzd77;     /* read */
            flatzd36zdsimpflatzd193           = ierror_not_an_error;                  /* init */
            flatzd36zdsimpflatzd194           = 0.0;                                  /* init */
            flatzd36zdsimpflatzd195           = 0.0;                                  /* init */
            flatzd36zdsimpflatzd196           = 0.0;                                  /* init */
            
            if (ierror_eq (azdconvzd64zdavalzd5zdsimpflatzd189, ierror_not_an_error)) {
                idouble_t        nnzdconvzd71 = idouble_add (azdconvzd64zdavalzd5zdsimpflatzd190, 1.0); /* let */
                flatzd39zdsimpflatzd197       = ierror_not_an_error;                  /* init */
                flatzd39zdsimpflatzd198       = 0.0;                                  /* init */
                
                if (ierror_eq (convzd63zdavalzd6zdsimpflatzd179, ierror_not_an_error)) {
                    flatzd39zdsimpflatzd197   = ierror_not_an_error;                  /* write */
                    flatzd39zdsimpflatzd198   = idouble_sub (convzd63zdavalzd6zdsimpflatzd180, azdconvzd64zdavalzd5zdsimpflatzd191); /* write */
                } else {
                    flatzd39zdsimpflatzd197   = convzd63zdavalzd6zdsimpflatzd179;     /* write */
                    flatzd39zdsimpflatzd198   = 0.0;                                  /* write */
                }
                
                flatzd39zdsimpflatzd199       = flatzd39zdsimpflatzd197;              /* read */
                flatzd39zdsimpflatzd200       = flatzd39zdsimpflatzd198;              /* read */
                flatzd40zdsimpflatzd201       = ierror_not_an_error;                  /* init */
                flatzd40zdsimpflatzd202       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzd39zdsimpflatzd199, ierror_not_an_error)) {
                    flatzd40zdsimpflatzd201   = ierror_not_an_error;                  /* write */
                    flatzd40zdsimpflatzd202   = idouble_div (flatzd39zdsimpflatzd200, nnzdconvzd71); /* write */
                } else {
                    flatzd40zdsimpflatzd201   = flatzd39zdsimpflatzd199;              /* write */
                    flatzd40zdsimpflatzd202   = 0.0;                                  /* write */
                }
                
                flatzd40zdsimpflatzd203       = flatzd40zdsimpflatzd201;              /* read */
                flatzd40zdsimpflatzd204       = flatzd40zdsimpflatzd202;              /* read */
                flatzd41zdsimpflatzd205       = ierror_not_an_error;                  /* init */
                flatzd41zdsimpflatzd206       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzd40zdsimpflatzd203, ierror_not_an_error)) {
                    flatzd41zdsimpflatzd205   = ierror_not_an_error;                  /* write */
                    flatzd41zdsimpflatzd206   = idouble_add (azdconvzd64zdavalzd5zdsimpflatzd191, flatzd40zdsimpflatzd204); /* write */
                } else {
                    flatzd41zdsimpflatzd205   = flatzd40zdsimpflatzd203;              /* write */
                    flatzd41zdsimpflatzd206   = 0.0;                                  /* write */
                }
                
                flatzd41zdsimpflatzd207       = flatzd41zdsimpflatzd205;              /* read */
                flatzd41zdsimpflatzd208       = flatzd41zdsimpflatzd206;              /* read */
                flatzd42zdsimpflatzd209       = ierror_not_an_error;                  /* init */
                flatzd42zdsimpflatzd210       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzd39zdsimpflatzd199, ierror_not_an_error)) {
                    flatzd57zdsimpflatzd211   = ierror_not_an_error;                  /* init */
                    flatzd57zdsimpflatzd212   = 0.0;                                  /* init */
                    
                    if (ierror_eq (convzd63zdavalzd6zdsimpflatzd179, ierror_not_an_error)) {
                        flatzd63zdsimpflatzd213 = ierror_not_an_error;                /* init */
                        flatzd63zdsimpflatzd214 = 0.0;                                /* init */
                        
                        if (ierror_eq (flatzd41zdsimpflatzd207, ierror_not_an_error)) {
                            flatzd63zdsimpflatzd213 = ierror_not_an_error;            /* write */
                            flatzd63zdsimpflatzd214 = idouble_sub (convzd63zdavalzd6zdsimpflatzd180, flatzd41zdsimpflatzd208); /* write */
                        } else {
                            flatzd63zdsimpflatzd213 = flatzd41zdsimpflatzd207;        /* write */
                            flatzd63zdsimpflatzd214 = 0.0;                            /* write */
                        }
                        
                        flatzd63zdsimpflatzd215 = flatzd63zdsimpflatzd213;            /* read */
                        flatzd63zdsimpflatzd216 = flatzd63zdsimpflatzd214;            /* read */
                        flatzd57zdsimpflatzd211 = flatzd63zdsimpflatzd215;            /* write */
                        flatzd57zdsimpflatzd212 = flatzd63zdsimpflatzd216;            /* write */
                    } else {
                        flatzd57zdsimpflatzd211 = convzd63zdavalzd6zdsimpflatzd179;   /* write */
                        flatzd57zdsimpflatzd212 = 0.0;                                /* write */
                    }
                    
                    flatzd57zdsimpflatzd217   = flatzd57zdsimpflatzd211;              /* read */
                    flatzd57zdsimpflatzd218   = flatzd57zdsimpflatzd212;              /* read */
                    flatzd58zdsimpflatzd219   = ierror_not_an_error;                  /* init */
                    flatzd58zdsimpflatzd220   = 0.0;                                  /* init */
                    
                    if (ierror_eq (flatzd57zdsimpflatzd217, ierror_not_an_error)) {
                        flatzd58zdsimpflatzd219 = ierror_not_an_error;                /* write */
                        flatzd58zdsimpflatzd220 = idouble_mul (flatzd39zdsimpflatzd200, flatzd57zdsimpflatzd218); /* write */
                    } else {
                        flatzd58zdsimpflatzd219 = flatzd57zdsimpflatzd217;            /* write */
                        flatzd58zdsimpflatzd220 = 0.0;                                /* write */
                    }
                    
                    flatzd58zdsimpflatzd221   = flatzd58zdsimpflatzd219;              /* read */
                    flatzd58zdsimpflatzd222   = flatzd58zdsimpflatzd220;              /* read */
                    flatzd42zdsimpflatzd209   = flatzd58zdsimpflatzd221;              /* write */
                    flatzd42zdsimpflatzd210   = flatzd58zdsimpflatzd222;              /* write */
                } else {
                    flatzd42zdsimpflatzd209   = flatzd39zdsimpflatzd199;              /* write */
                    flatzd42zdsimpflatzd210   = 0.0;                                  /* write */
                }
                
                flatzd42zdsimpflatzd223       = flatzd42zdsimpflatzd209;              /* read */
                flatzd42zdsimpflatzd224       = flatzd42zdsimpflatzd210;              /* read */
                flatzd43zdsimpflatzd225       = ierror_not_an_error;                  /* init */
                flatzd43zdsimpflatzd226       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzd42zdsimpflatzd223, ierror_not_an_error)) {
                    flatzd43zdsimpflatzd225   = ierror_not_an_error;                  /* write */
                    flatzd43zdsimpflatzd226   = idouble_add (azdconvzd64zdavalzd5zdsimpflatzd192, flatzd42zdsimpflatzd224); /* write */
                } else {
                    flatzd43zdsimpflatzd225   = flatzd42zdsimpflatzd223;              /* write */
                    flatzd43zdsimpflatzd226   = 0.0;                                  /* write */
                }
                
                flatzd43zdsimpflatzd227       = flatzd43zdsimpflatzd225;              /* read */
                flatzd43zdsimpflatzd228       = flatzd43zdsimpflatzd226;              /* read */
                flatzd44zdsimpflatzd229       = ierror_not_an_error;                  /* init */
                flatzd44zdsimpflatzd230       = 0.0;                                  /* init */
                flatzd44zdsimpflatzd231       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzd41zdsimpflatzd207, ierror_not_an_error)) {
                    flatzd44zdsimpflatzd229   = ierror_not_an_error;                  /* write */
                    flatzd44zdsimpflatzd230   = idouble_add (azdconvzd64zdavalzd5zdsimpflatzd190, 1.0); /* write */
                    flatzd44zdsimpflatzd231   = flatzd41zdsimpflatzd208;              /* write */
                } else {
                    flatzd44zdsimpflatzd229   = flatzd41zdsimpflatzd207;              /* write */
                    flatzd44zdsimpflatzd230   = 0.0;                                  /* write */
                    flatzd44zdsimpflatzd231   = 0.0;                                  /* write */
                }
                
                flatzd44zdsimpflatzd232       = flatzd44zdsimpflatzd229;              /* read */
                flatzd44zdsimpflatzd233       = flatzd44zdsimpflatzd230;              /* read */
                flatzd44zdsimpflatzd234       = flatzd44zdsimpflatzd231;              /* read */
                flatzd45zdsimpflatzd235       = ierror_not_an_error;                  /* init */
                flatzd45zdsimpflatzd236       = 0.0;                                  /* init */
                flatzd45zdsimpflatzd237       = 0.0;                                  /* init */
                flatzd45zdsimpflatzd238       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzd44zdsimpflatzd232, ierror_not_an_error)) {
                    flatzd48zdsimpflatzd239   = ierror_not_an_error;                  /* init */
                    flatzd48zdsimpflatzd240   = 0.0;                                  /* init */
                    flatzd48zdsimpflatzd241   = 0.0;                                  /* init */
                    flatzd48zdsimpflatzd242   = 0.0;                                  /* init */
                    
                    if (ierror_eq (flatzd43zdsimpflatzd227, ierror_not_an_error)) {
                        flatzd48zdsimpflatzd239 = ierror_not_an_error;                /* write */
                        flatzd48zdsimpflatzd240 = flatzd44zdsimpflatzd233;            /* write */
                        flatzd48zdsimpflatzd241 = flatzd44zdsimpflatzd234;            /* write */
                        flatzd48zdsimpflatzd242 = flatzd43zdsimpflatzd228;            /* write */
                    } else {
                        flatzd48zdsimpflatzd239 = flatzd43zdsimpflatzd227;            /* write */
                        flatzd48zdsimpflatzd240 = 0.0;                                /* write */
                        flatzd48zdsimpflatzd241 = 0.0;                                /* write */
                        flatzd48zdsimpflatzd242 = 0.0;                                /* write */
                    }
                    
                    flatzd48zdsimpflatzd243   = flatzd48zdsimpflatzd239;              /* read */
                    flatzd48zdsimpflatzd244   = flatzd48zdsimpflatzd240;              /* read */
                    flatzd48zdsimpflatzd245   = flatzd48zdsimpflatzd241;              /* read */
                    flatzd48zdsimpflatzd246   = flatzd48zdsimpflatzd242;              /* read */
                    flatzd45zdsimpflatzd235   = flatzd48zdsimpflatzd243;              /* write */
                    flatzd45zdsimpflatzd236   = flatzd48zdsimpflatzd244;              /* write */
                    flatzd45zdsimpflatzd237   = flatzd48zdsimpflatzd245;              /* write */
                    flatzd45zdsimpflatzd238   = flatzd48zdsimpflatzd246;              /* write */
                } else {
                    flatzd45zdsimpflatzd235   = flatzd44zdsimpflatzd232;              /* write */
                    flatzd45zdsimpflatzd236   = 0.0;                                  /* write */
                    flatzd45zdsimpflatzd237   = 0.0;                                  /* write */
                    flatzd45zdsimpflatzd238   = 0.0;                                  /* write */
                }
                
                flatzd45zdsimpflatzd247       = flatzd45zdsimpflatzd235;              /* read */
                flatzd45zdsimpflatzd248       = flatzd45zdsimpflatzd236;              /* read */
                flatzd45zdsimpflatzd249       = flatzd45zdsimpflatzd237;              /* read */
                flatzd45zdsimpflatzd250       = flatzd45zdsimpflatzd238;              /* read */
                flatzd36zdsimpflatzd193       = flatzd45zdsimpflatzd247;              /* write */
                flatzd36zdsimpflatzd194       = flatzd45zdsimpflatzd248;              /* write */
                flatzd36zdsimpflatzd195       = flatzd45zdsimpflatzd249;              /* write */
                flatzd36zdsimpflatzd196       = flatzd45zdsimpflatzd250;              /* write */
            } else {
                flatzd36zdsimpflatzd193       = azdconvzd64zdavalzd5zdsimpflatzd189;  /* write */
                flatzd36zdsimpflatzd194       = 0.0;                                  /* write */
                flatzd36zdsimpflatzd195       = 0.0;                                  /* write */
                flatzd36zdsimpflatzd196       = 0.0;                                  /* write */
            }
            
            flatzd36zdsimpflatzd251           = flatzd36zdsimpflatzd193;              /* read */
            flatzd36zdsimpflatzd252           = flatzd36zdsimpflatzd194;              /* read */
            flatzd36zdsimpflatzd253           = flatzd36zdsimpflatzd195;              /* read */
            flatzd36zdsimpflatzd254           = flatzd36zdsimpflatzd196;              /* read */
            acczdazdconvzd64zdsimpflatzd74    = flatzd36zdsimpflatzd251;              /* write */
            acczdazdconvzd64zdsimpflatzd75    = flatzd36zdsimpflatzd252;              /* write */
            acczdazdconvzd64zdsimpflatzd76    = flatzd36zdsimpflatzd253;              /* write */
            acczdazdconvzd64zdsimpflatzd77    = flatzd36zdsimpflatzd254;              /* write */
        }
        
    }
    
    s->has_0_0_acczdazdconvzd64zdsimpflatzd74 = itrue;                                /* save */
    s->res_0_0_acczdazdconvzd64zdsimpflatzd74 = acczdazdconvzd64zdsimpflatzd74;       /* save */
    
    s->has_0_0_acczdazdconvzd64zdsimpflatzd75 = itrue;                                /* save */
    s->res_0_0_acczdazdconvzd64zdsimpflatzd75 = acczdazdconvzd64zdsimpflatzd75;       /* save */
    
    s->has_0_0_acczdazdconvzd64zdsimpflatzd76 = itrue;                                /* save */
    s->res_0_0_acczdazdconvzd64zdsimpflatzd76 = acczdazdconvzd64zdsimpflatzd76;       /* save */
    
    s->has_0_0_acczdazdconvzd64zdsimpflatzd77 = itrue;                                /* save */
    s->res_0_0_acczdazdconvzd64zdsimpflatzd77 = acczdazdconvzd64zdsimpflatzd77;       /* save */
    
    s->has_0_0_acczdconvzd63zdsimpflatzd64    = itrue;                                /* save */
    s->res_0_0_acczdconvzd63zdsimpflatzd64    = acczdconvzd63zdsimpflatzd64;          /* save */
    
    s->has_0_0_acczdconvzd63zdsimpflatzd65    = itrue;                                /* save */
    s->res_0_0_acczdconvzd63zdsimpflatzd65    = acczdconvzd63zdsimpflatzd65;          /* save */
    
    s->has_0_0_acczdconvzd59zdsimpflatzd56    = itrue;                                /* save */
    s->res_0_0_acczdconvzd59zdsimpflatzd56    = acczdconvzd59zdsimpflatzd56;          /* save */
    
    s->has_0_0_acczdconvzd59zdsimpflatzd57    = itrue;                                /* save */
    s->res_0_0_acczdconvzd59zdsimpflatzd57    = acczdconvzd59zdsimpflatzd57;          /* save */
    
    s->has_0_0_acczdconvzd58zdsimpflatzd50    = itrue;                                /* save */
    s->res_0_0_acczdconvzd58zdsimpflatzd50    = acczdconvzd58zdsimpflatzd50;          /* save */
    
    s->has_0_0_acczdconvzd58zdsimpflatzd51    = itrue;                                /* save */
    s->res_0_0_acczdconvzd58zdsimpflatzd51    = acczdconvzd58zdsimpflatzd51;          /* save */
    
    s->has_0_0_acczdszdreifyzd6zdconvzd13zdsimpflatzd47 = itrue;                      /* save */
    s->res_0_0_acczdszdreifyzd6zdconvzd13zdsimpflatzd47 = acczdszdreifyzd6zdconvzd13zdsimpflatzd47; /* save */
    
    s->has_0_0_acczdszdreifyzd6zdconvzd13zdsimpflatzd48 = itrue;                      /* save */
    s->res_0_0_acczdszdreifyzd6zdconvzd13zdsimpflatzd48 = acczdszdreifyzd6zdconvzd13zdsimpflatzd48; /* save */
    
    s->has_0_0_acczdszdreifyzd6zdconvzd13zdsimpflatzd49 = itrue;                      /* save */
    s->res_0_0_acczdszdreifyzd6zdconvzd13zdsimpflatzd49 = acczdszdreifyzd6zdconvzd13zdsimpflatzd49; /* save */
    
    s->has_0_0_acczdconvzd12zdsimpflatzd39    = itrue;                                /* save */
    s->res_0_0_acczdconvzd12zdsimpflatzd39    = acczdconvzd12zdsimpflatzd39;          /* save */
    
    s->has_0_0_acczdconvzd12zdsimpflatzd40    = itrue;                                /* save */
    s->res_0_0_acczdconvzd12zdsimpflatzd40    = acczdconvzd12zdsimpflatzd40;          /* save */
    
    s->has_0_0_acczdconvzd8zdsimpflatzd33     = itrue;                                /* save */
    s->res_0_0_acczdconvzd8zdsimpflatzd33     = acczdconvzd8zdsimpflatzd33;           /* save */
    
    s->has_0_0_acczdconvzd8zdsimpflatzd34     = itrue;                                /* save */
    s->res_0_0_acczdconvzd8zdsimpflatzd34     = acczdconvzd8zdsimpflatzd34;           /* save */
    
    azdconvzd64zdsimpflatzd255                = acczdazdconvzd64zdsimpflatzd74;       /* read */
    azdconvzd64zdsimpflatzd256                = acczdazdconvzd64zdsimpflatzd75;       /* read */
    azdconvzd64zdsimpflatzd258                = acczdazdconvzd64zdsimpflatzd77;       /* read */
    szdreifyzd6zdconvzd13zdsimpflatzd259      = acczdszdreifyzd6zdconvzd13zdsimpflatzd47; /* read */
    szdreifyzd6zdconvzd13zdsimpflatzd260      = acczdszdreifyzd6zdconvzd13zdsimpflatzd48; /* read */
    flatzd89zdsimpflatzd262                   = ierror_not_an_error;                  /* init */
    flatzd89zdsimpflatzd263                   = 0.0;                                  /* init */
    
    if (ierror_eq (szdreifyzd6zdconvzd13zdsimpflatzd259, ierror_not_an_error)) {
        flatzd89zdsimpflatzd262               = ierror_not_an_error;                  /* write */
        flatzd89zdsimpflatzd263               = szdreifyzd6zdconvzd13zdsimpflatzd260; /* write */
    } else {
        flatzd89zdsimpflatzd262               = szdreifyzd6zdconvzd13zdsimpflatzd259; /* write */
        flatzd89zdsimpflatzd263               = 0.0;                                  /* write */
    }
    
    flatzd89zdsimpflatzd264                   = flatzd89zdsimpflatzd262;              /* read */
    flatzd89zdsimpflatzd265                   = flatzd89zdsimpflatzd263;              /* read */
    flatzd90zdsimpflatzd266                   = ierror_not_an_error;                  /* init */
    flatzd90zdsimpflatzd267                   = 0.0;                                  /* init */
    
    if (ierror_eq (flatzd89zdsimpflatzd264, ierror_not_an_error)) {
        flatzd93zdsimpflatzd268               = ierror_not_an_error;                  /* init */
        flatzd93zdsimpflatzd269               = 0.0;                                  /* init */
        
        if (ierror_eq (azdconvzd64zdsimpflatzd255, ierror_not_an_error)) {
            idouble_t        convzd119        = idouble_sub (azdconvzd64zdsimpflatzd256, 1.0); /* let */
            idouble_t        simpflatzd749    = idouble_div (azdconvzd64zdsimpflatzd258, convzd119); /* let */
            flatzd93zdsimpflatzd268           = ierror_not_an_error;                  /* write */
            flatzd93zdsimpflatzd269           = simpflatzd749;                        /* write */
        } else {
            flatzd93zdsimpflatzd268           = azdconvzd64zdsimpflatzd255;           /* write */
            flatzd93zdsimpflatzd269           = 0.0;                                  /* write */
        }
        
        flatzd93zdsimpflatzd270               = flatzd93zdsimpflatzd268;              /* read */
        flatzd93zdsimpflatzd271               = flatzd93zdsimpflatzd269;              /* read */
        flatzd94zdsimpflatzd272               = ierror_not_an_error;                  /* init */
        flatzd94zdsimpflatzd273               = 0.0;                                  /* init */
        
        if (ierror_eq (flatzd93zdsimpflatzd270, ierror_not_an_error)) {
            flatzd94zdsimpflatzd272           = ierror_not_an_error;                  /* write */
            flatzd94zdsimpflatzd273           = idouble_sqrt (flatzd93zdsimpflatzd271); /* write */
        } else {
            flatzd94zdsimpflatzd272           = flatzd93zdsimpflatzd270;              /* write */
            flatzd94zdsimpflatzd273           = 0.0;                                  /* write */
        }
        
        flatzd94zdsimpflatzd274               = flatzd94zdsimpflatzd272;              /* read */
        flatzd94zdsimpflatzd275               = flatzd94zdsimpflatzd273;              /* read */
        flatzd95zdsimpflatzd276               = ierror_not_an_error;                  /* init */
        flatzd95zdsimpflatzd277               = 0.0;                                  /* init */
        
        if (ierror_eq (flatzd94zdsimpflatzd274, ierror_not_an_error)) {
            flatzd95zdsimpflatzd276           = ierror_not_an_error;                  /* write */
            flatzd95zdsimpflatzd277           = idouble_mul (flatzd89zdsimpflatzd265, flatzd94zdsimpflatzd275); /* write */
        } else {
            flatzd95zdsimpflatzd276           = flatzd94zdsimpflatzd274;              /* write */
            flatzd95zdsimpflatzd277           = 0.0;                                  /* write */
        }
        
        flatzd95zdsimpflatzd278               = flatzd95zdsimpflatzd276;              /* read */
        flatzd95zdsimpflatzd279               = flatzd95zdsimpflatzd277;              /* read */
        flatzd90zdsimpflatzd266               = flatzd95zdsimpflatzd278;              /* write */
        flatzd90zdsimpflatzd267               = flatzd95zdsimpflatzd279;              /* write */
    } else {
        flatzd90zdsimpflatzd266               = flatzd89zdsimpflatzd264;              /* write */
        flatzd90zdsimpflatzd267               = 0.0;                                  /* write */
    }
    
    flatzd90zdsimpflatzd280                   = flatzd90zdsimpflatzd266;              /* read */
    flatzd90zdsimpflatzd281                   = flatzd90zdsimpflatzd267;              /* read */
    s->replzdixzd0                            = flatzd90zdsimpflatzd280;              /* output */
    s->replzdixzd1                            = flatzd90zdsimpflatzd281;              /* output */
}

- C evaluation:
[homer, 3.1112698372208096]

- Core evaluation:
[homer, 3.1112698372208096]

> > -- Times
> - Flattened (simplified), not typechecked:
conv$3 = TIME
conv$4 = MAX_MAP_SIZE
init acc$conv$5$simpflat$2@{Time} = 1858-11-17T00:00:00Z@{Time};
init acc$s$reify$2$conv$6$simpflat$6@{Error} = ExceptFold1NoValue@{Error};
init acc$s$reify$2$conv$6$simpflat$7@{Time} = 1858-11-17T00:00:00Z@{Time};
load_resumable@{Error} acc$s$reify$2$conv$6$simpflat$6;
load_resumable@{Time} acc$s$reify$2$conv$6$simpflat$7;
load_resumable@{Time} acc$conv$5$simpflat$2;
for_facts (conv$2@{Time}, conv$1@{FactIdentifier}, conv$0$simpflat$24@{Error}, conv$0$simpflat$25@{Int}, conv$0$simpflat$26@{Time}) in new
{
  let anf$1 = Time_daysDifference# (1980-01-06T00:00:00Z@{Time}) conv$0$simpflat$26;
  let anf$2 = negate#@{Int} anf$1;
  write acc$conv$5$simpflat$2 = Time_minusDays# (2000-01-01T00:00:00Z@{Time}) anf$2;
  read conv$5$aval$1$simpflat$8 = acc$conv$5$simpflat$2 [Time];
  read s$reify$2$conv$6$aval$0$simpflat$12 = acc$s$reify$2$conv$6$simpflat$6 [Error];
  read s$reify$2$conv$6$aval$0$simpflat$13 = acc$s$reify$2$conv$6$simpflat$7 [Time];
  init flat$0$simpflat$14@{Error} = ExceptNotAnError@{Error};
  init flat$0$simpflat$15@{Time} = 1858-11-17T00:00:00Z@{Time};
  if (eq#@{Error} s$reify$2$conv$6$aval$0$simpflat$12 (ExceptNotAnError@{Error}))
  {
    init flat$4@{Time} = 1858-11-17T00:00:00Z@{Time};
    if (gt#@{Time} conv$5$aval$1$simpflat$8 s$reify$2$conv$6$aval$0$simpflat$13)
    {
      write flat$4 = conv$5$aval$1$simpflat$8;
    }
    else
    {
      write flat$4 = s$reify$2$conv$6$aval$0$simpflat$13;
    }
    read flat$4 = flat$4 [Time];
    write flat$0$simpflat$14 = ExceptNotAnError@{Error};
    write flat$0$simpflat$15 = flat$4;
  }
  else
  {
    init flat$3$simpflat$16@{Error} = ExceptNotAnError@{Error};
    init flat$3$simpflat$17@{Time} = 1858-11-17T00:00:00Z@{Time};
    if (eq#@{Error} (ExceptFold1NoValue@{Error}) s$reify$2$conv$6$aval$0$simpflat$12)
    {
      write flat$3$simpflat$16 = ExceptNotAnError@{Error};
      write flat$3$simpflat$17 = conv$5$aval$1$simpflat$8;
    }
    else
    {
      write flat$3$simpflat$16 = s$reify$2$conv$6$aval$0$simpflat$12;
      write flat$3$simpflat$17 = 1858-11-17T00:00:00Z@{Time};
    }
    read flat$3$simpflat$18 = flat$3$simpflat$16 [Error];
    read flat$3$simpflat$19 = flat$3$simpflat$17 [Time];
    write flat$0$simpflat$14 = flat$3$simpflat$18;
    write flat$0$simpflat$15 = flat$3$simpflat$19;
  }
  read flat$0$simpflat$20 = flat$0$simpflat$14 [Error];
  read flat$0$simpflat$21 = flat$0$simpflat$15 [Time];
  write acc$s$reify$2$conv$6$simpflat$6 = flat$0$simpflat$20;
  write acc$s$reify$2$conv$6$simpflat$7 = flat$0$simpflat$21;
}
save_resumable@{Error} acc$s$reify$2$conv$6$simpflat$6;
save_resumable@{Time} acc$s$reify$2$conv$6$simpflat$7;
save_resumable@{Time} acc$conv$5$simpflat$2;
read s$reify$2$conv$6$simpflat$22 = acc$s$reify$2$conv$6$simpflat$6 [Error];
read s$reify$2$conv$6$simpflat$23 = acc$s$reify$2$conv$6$simpflat$7 [Time];
output@{(Sum Error Time)} repl (s$reify$2$conv$6$simpflat$22@{Error}, s$reify$2$conv$6$simpflat$23@{Time});

- Flattened Avalanche (simplified), typechecked:
conv$3 = TIME
conv$4 = MAX_MAP_SIZE
init acc$conv$5$simpflat$2@{Time} = 1858-11-17T00:00:00Z@{Time};
init acc$s$reify$2$conv$6$simpflat$6@{Error} = ExceptFold1NoValue@{Error};
init acc$s$reify$2$conv$6$simpflat$7@{Time} = 1858-11-17T00:00:00Z@{Time};
load_resumable@{Error} acc$s$reify$2$conv$6$simpflat$6;
load_resumable@{Time} acc$s$reify$2$conv$6$simpflat$7;
load_resumable@{Time} acc$conv$5$simpflat$2;
for_facts (conv$2@{Time}, conv$1@{FactIdentifier}, conv$0$simpflat$24@{Error}, conv$0$simpflat$25@{Int}, conv$0$simpflat$26@{Time}) in new
{
  let anf$1 = Time_daysDifference# (1980-01-06T00:00:00Z@{Time}) conv$0$simpflat$26;
  let anf$2 = negate#@{Int} anf$1;
  write acc$conv$5$simpflat$2 = Time_minusDays# (2000-01-01T00:00:00Z@{Time}) anf$2;
  read conv$5$aval$1$simpflat$8 = acc$conv$5$simpflat$2 [Time];
  read s$reify$2$conv$6$aval$0$simpflat$12 = acc$s$reify$2$conv$6$simpflat$6 [Error];
  read s$reify$2$conv$6$aval$0$simpflat$13 = acc$s$reify$2$conv$6$simpflat$7 [Time];
  init flat$0$simpflat$14@{Error} = ExceptNotAnError@{Error};
  init flat$0$simpflat$15@{Time} = 1858-11-17T00:00:00Z@{Time};
  if (eq#@{Error} s$reify$2$conv$6$aval$0$simpflat$12 (ExceptNotAnError@{Error}))
  {
    init flat$4@{Time} = 1858-11-17T00:00:00Z@{Time};
    if (gt#@{Time} conv$5$aval$1$simpflat$8 s$reify$2$conv$6$aval$0$simpflat$13)
    {
      write flat$4 = conv$5$aval$1$simpflat$8;
    }
    else
    {
      write flat$4 = s$reify$2$conv$6$aval$0$simpflat$13;
    }
    read flat$4 = flat$4 [Time];
    write flat$0$simpflat$14 = ExceptNotAnError@{Error};
    write flat$0$simpflat$15 = flat$4;
  }
  else
  {
    init flat$3$simpflat$16@{Error} = ExceptNotAnError@{Error};
    init flat$3$simpflat$17@{Time} = 1858-11-17T00:00:00Z@{Time};
    if (eq#@{Error} (ExceptFold1NoValue@{Error}) s$reify$2$conv$6$aval$0$simpflat$12)
    {
      write flat$3$simpflat$16 = ExceptNotAnError@{Error};
      write flat$3$simpflat$17 = conv$5$aval$1$simpflat$8;
    }
    else
    {
      write flat$3$simpflat$16 = s$reify$2$conv$6$aval$0$simpflat$12;
      write flat$3$simpflat$17 = 1858-11-17T00:00:00Z@{Time};
    }
    read flat$3$simpflat$18 = flat$3$simpflat$16 [Error];
    read flat$3$simpflat$19 = flat$3$simpflat$17 [Time];
    write flat$0$simpflat$14 = flat$3$simpflat$18;
    write flat$0$simpflat$15 = flat$3$simpflat$19;
  }
  read flat$0$simpflat$20 = flat$0$simpflat$14 [Error];
  read flat$0$simpflat$21 = flat$0$simpflat$15 [Time];
  write acc$s$reify$2$conv$6$simpflat$6 = flat$0$simpflat$20;
  write acc$s$reify$2$conv$6$simpflat$7 = flat$0$simpflat$21;
}
save_resumable@{Error} acc$s$reify$2$conv$6$simpflat$6;
save_resumable@{Time} acc$s$reify$2$conv$6$simpflat$7;
save_resumable@{Time} acc$conv$5$simpflat$2;
read s$reify$2$conv$6$simpflat$22 = acc$s$reify$2$conv$6$simpflat$6 [Error];
read s$reify$2$conv$6$simpflat$23 = acc$s$reify$2$conv$6$simpflat$7 [Time];
output@{(Sum Error Time)} repl (s$reify$2$conv$6$simpflat$22@{Error}, s$reify$2$conv$6$simpflat$23@{Time});

- C:
#line 1 "state and input definition #0 - repl"

typedef struct {
    itime_t          convzd3;
    iint_t           new_count;
    ierror_t         *new_convzd0zdsimpflatzd24;
    iint_t           *new_convzd0zdsimpflatzd25;
    itime_t          *new_convzd0zdsimpflatzd26;
} input_repl_t;

typedef struct {
    /* runtime */
    anemone_mempool_t *mempool;
    iint_t           max_map_size;

    /* inputs */
    input_repl_t     input;

  /* compute for (0,0) */
    /* outputs */
    ierror_t         replzdixzd0;
    itime_t          replzdixzd1;

    /* resumables: values */
    ierror_t         res_0_0_acczdszdreifyzd2zdconvzd6zdsimpflatzd6;
    itime_t          res_0_0_acczdszdreifyzd2zdconvzd6zdsimpflatzd7;
    itime_t          res_0_0_acczdconvzd5zdsimpflatzd2;

    /* resumables: has flags */
    ibool_t          has_flags_start_0_0;
    ibool_t          has_0_0_acczdszdreifyzd2zdconvzd6zdsimpflatzd6;
    ibool_t          has_0_0_acczdszdreifyzd2zdconvzd6zdsimpflatzd7;
    ibool_t          has_0_0_acczdconvzd5zdsimpflatzd2;
    ibool_t          has_flags_end_0_0;


} iattribute_0_t;

iint_t size_of_state_iattribute_0 ()
{
    return sizeof (iattribute_0_t);
}

#line 1 "compute function #0 - repl icompute_attribute_0_compute_0"
void icompute_attribute_0_compute_0(iattribute_0_t *s)
{
    itime_t          flatzd4;
    itime_t          szdreifyzd2zdconvzd6zdsimpflatzd23;
    ierror_t         szdreifyzd2zdconvzd6zdsimpflatzd22;
    itime_t          convzd5zdavalzd1zdsimpflatzd8;
    ierror_t         acczdszdreifyzd2zdconvzd6zdsimpflatzd6;
    itime_t          acczdszdreifyzd2zdconvzd6zdsimpflatzd7;
    ierror_t         szdreifyzd2zdconvzd6zdavalzd0zdsimpflatzd12;
    itime_t          szdreifyzd2zdconvzd6zdavalzd0zdsimpflatzd13;
    itime_t          flatzd0zdsimpflatzd15;
    ierror_t         flatzd0zdsimpflatzd14;
    ierror_t         flatzd3zdsimpflatzd16;
    ierror_t         flatzd3zdsimpflatzd18;
    itime_t          flatzd3zdsimpflatzd19;
    itime_t          flatzd3zdsimpflatzd17;
    itime_t          acczdconvzd5zdsimpflatzd2;
    ierror_t         flatzd0zdsimpflatzd20;
    itime_t          flatzd0zdsimpflatzd21;

    anemone_mempool_t *mempool                = s->mempool;
    itime_t          convzd3                  = s->input.convzd3;
    iint_t           convzd4                  = s->max_map_size;

    acczdconvzd5zdsimpflatzd2                 = 0x7420b1100000000;                    /* init */
    acczdszdreifyzd2zdconvzd6zdsimpflatzd6    = ierror_fold1_no_value;                /* init */
    acczdszdreifyzd2zdconvzd6zdsimpflatzd7    = 0x7420b1100000000;                    /* init */
    
    if (s->has_0_0_acczdszdreifyzd2zdconvzd6zdsimpflatzd6) {
        acczdszdreifyzd2zdconvzd6zdsimpflatzd6 = s->res_0_0_acczdszdreifyzd2zdconvzd6zdsimpflatzd6; /* load */
    }
    
    if (s->has_0_0_acczdszdreifyzd2zdconvzd6zdsimpflatzd7) {
        acczdszdreifyzd2zdconvzd6zdsimpflatzd7 = s->res_0_0_acczdszdreifyzd2zdconvzd6zdsimpflatzd7; /* load */
    }
    
    if (s->has_0_0_acczdconvzd5zdsimpflatzd2) {
        acczdconvzd5zdsimpflatzd2             = s->res_0_0_acczdconvzd5zdsimpflatzd2; /* load */
    }
    
    const iint_t     new_count                = s->input.new_count;
    const ierror_t  *const new_convzd0zdsimpflatzd24 = s->input.new_convzd0zdsimpflatzd24;
    const iint_t    *const new_convzd0zdsimpflatzd25 = s->input.new_convzd0zdsimpflatzd25;
    const itime_t   *const new_convzd0zdsimpflatzd26 = s->input.new_convzd0zdsimpflatzd26;
    
    for (iint_t i = 0; i < new_count; i++) {
        ifactid_t        convzd1              = i;
        itime_t          convzd2              = new_convzd0zdsimpflatzd26[i];
        ierror_t         convzd0zdsimpflatzd24 = new_convzd0zdsimpflatzd24[i];
        iint_t           convzd0zdsimpflatzd25 = new_convzd0zdsimpflatzd25[i];
        itime_t          convzd0zdsimpflatzd26 = new_convzd0zdsimpflatzd26[i];
        iint_t           anfzd1               = itime_days_diff (0x7bc010600000000, convzd0zdsimpflatzd26); /* let */
        iint_t           anfzd2               = iint_neg (anfzd1);                    /* let */
        acczdconvzd5zdsimpflatzd2             = itime_minus_days (0x7d0010100000000, anfzd2); /* write */
        convzd5zdavalzd1zdsimpflatzd8         = acczdconvzd5zdsimpflatzd2;            /* read */
        szdreifyzd2zdconvzd6zdavalzd0zdsimpflatzd12 = acczdszdreifyzd2zdconvzd6zdsimpflatzd6; /* read */
        szdreifyzd2zdconvzd6zdavalzd0zdsimpflatzd13 = acczdszdreifyzd2zdconvzd6zdsimpflatzd7; /* read */
        flatzd0zdsimpflatzd14                 = ierror_not_an_error;                  /* init */
        flatzd0zdsimpflatzd15                 = 0x7420b1100000000;                    /* init */
        
        if (ierror_eq (szdreifyzd2zdconvzd6zdavalzd0zdsimpflatzd12, ierror_not_an_error)) {
            flatzd4                           = 0x7420b1100000000;                    /* init */
            
            if (itime_gt (convzd5zdavalzd1zdsimpflatzd8, szdreifyzd2zdconvzd6zdavalzd0zdsimpflatzd13)) {
                flatzd4                       = convzd5zdavalzd1zdsimpflatzd8;        /* write */
            } else {
                flatzd4                       = szdreifyzd2zdconvzd6zdavalzd0zdsimpflatzd13; /* write */
            }
            
            flatzd4                           = flatzd4;                              /* read */
            flatzd0zdsimpflatzd14             = ierror_not_an_error;                  /* write */
            flatzd0zdsimpflatzd15             = flatzd4;                              /* write */
        } else {
            flatzd3zdsimpflatzd16             = ierror_not_an_error;                  /* init */
            flatzd3zdsimpflatzd17             = 0x7420b1100000000;                    /* init */
            
            if (ierror_eq (ierror_fold1_no_value, szdreifyzd2zdconvzd6zdavalzd0zdsimpflatzd12)) {
                flatzd3zdsimpflatzd16         = ierror_not_an_error;                  /* write */
                flatzd3zdsimpflatzd17         = convzd5zdavalzd1zdsimpflatzd8;        /* write */
            } else {
                flatzd3zdsimpflatzd16         = szdreifyzd2zdconvzd6zdavalzd0zdsimpflatzd12; /* write */
                flatzd3zdsimpflatzd17         = 0x7420b1100000000;                    /* write */
            }
            
            flatzd3zdsimpflatzd18             = flatzd3zdsimpflatzd16;                /* read */
            flatzd3zdsimpflatzd19             = flatzd3zdsimpflatzd17;                /* read */
            flatzd0zdsimpflatzd14             = flatzd3zdsimpflatzd18;                /* write */
            flatzd0zdsimpflatzd15             = flatzd3zdsimpflatzd19;                /* write */
        }
        
        flatzd0zdsimpflatzd20                 = flatzd0zdsimpflatzd14;                /* read */
        flatzd0zdsimpflatzd21                 = flatzd0zdsimpflatzd15;                /* read */
        acczdszdreifyzd2zdconvzd6zdsimpflatzd6 = flatzd0zdsimpflatzd20;               /* write */
        acczdszdreifyzd2zdconvzd6zdsimpflatzd7 = flatzd0zdsimpflatzd21;               /* write */
    }
    
    s->has_0_0_acczdszdreifyzd2zdconvzd6zdsimpflatzd6 = itrue;                        /* save */
    s->res_0_0_acczdszdreifyzd2zdconvzd6zdsimpflatzd6 = acczdszdreifyzd2zdconvzd6zdsimpflatzd6; /* save */
    
    s->has_0_0_acczdszdreifyzd2zdconvzd6zdsimpflatzd7 = itrue;                        /* save */
    s->res_0_0_acczdszdreifyzd2zdconvzd6zdsimpflatzd7 = acczdszdreifyzd2zdconvzd6zdsimpflatzd7; /* save */
    
    s->has_0_0_acczdconvzd5zdsimpflatzd2      = itrue;                                /* save */
    s->res_0_0_acczdconvzd5zdsimpflatzd2      = acczdconvzd5zdsimpflatzd2;            /* save */
    
    szdreifyzd2zdconvzd6zdsimpflatzd22        = acczdszdreifyzd2zdconvzd6zdsimpflatzd6; /* read */
    szdreifyzd2zdconvzd6zdsimpflatzd23        = acczdszdreifyzd2zdconvzd6zdsimpflatzd7; /* read */
    s->replzdixzd0                            = szdreifyzd2zdconvzd6zdsimpflatzd22;   /* output */
    s->replzdixzd1                            = szdreifyzd2zdconvzd6zdsimpflatzd23;   /* output */
}

- C evaluation:
[homer, 2029-12-27
,marge, 2009-12-12]

- Core evaluation:
[homer, 2029-12-27
,marge, 2009-12-12]

> > -- Math
> ok, c is now off
ok, flatten (simplified) is now off
> > - C evaluation:
[homer, NaN]

- Core evaluation:
[homer, NaN]

> > - C evaluation:
[homer, Infinity]

- Core evaluation:
[homer, Infinity]

> 