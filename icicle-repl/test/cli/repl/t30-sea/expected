welcome to iREPL
ok, loaded 38 functions from data/libs/prelude.icicle
ok, loaded test/cli/repl/data.psv, 13 rows
> -- Show everything
> ok, flatten (simplified) is now on
ok, c is now on
> > -- Enable C evaluation
> ok, c evaluation now on
                   _________-----_____
        _____------           __      ----_
 ___----             ___------              \
    ----________        ----                 \
                -----__    |             _____)
                     __-                /     \
         _______-----    ___--          \    /)\
   ------_______      ---____            \__/  /
                -----__    \ --    _          /\
                       --__--__     \_____/   \_/\
                               ----|   /          |
                                   |  |___________|
                                   |  | ((_(_)| )_)
                                   |  \_((_(_)|/(_)
                                   \             (
                                    \_____________)
> > -- An interesting expression with structs and strings
> - Flattened (simplified), not typechecked:
conv/3 = TIME
conv/4 = MAX_MAP_SIZE
init acc/conv/8/simpflat/33@{Error} = ExceptNotAnError@{Error};
init acc/conv/8/simpflat/34@{Double} = 0.0@{Double};
init acc/conv/12/simpflat/39@{Error} = ExceptNotAnError@{Error};
init acc/conv/12/simpflat/40@{Double} = 0.0@{Double};
init acc/s/reify/6/conv/13/simpflat/47@{Error} = ExceptFold1NoValue@{Error};
init acc/s/reify/6/conv/13/simpflat/48@{Double} = 0.0@{Double};
init acc/s/reify/6/conv/13/simpflat/49@{Double} = 0.0@{Double};
init acc/conv/58/simpflat/50@{Error} = ExceptNotAnError@{Error};
init acc/conv/58/simpflat/51@{Int} = 0@{Int};
init acc/conv/59/simpflat/56@{Error} = ExceptNotAnError@{Error};
init acc/conv/59/simpflat/57@{Int} = 0@{Int};
init acc/conv/63/simpflat/64@{Error} = ExceptNotAnError@{Error};
init acc/conv/63/simpflat/65@{Double} = 0.0@{Double};
init acc/a/conv/64/simpflat/74@{Error} = ExceptNotAnError@{Error};
init acc/a/conv/64/simpflat/75@{Double} = 0.0@{Double};
init acc/a/conv/64/simpflat/76@{Double} = 0.0@{Double};
init acc/a/conv/64/simpflat/77@{Double} = 0.0@{Double};
load_resumable@{Error} acc/a/conv/64/simpflat/74;
load_resumable@{Double} acc/a/conv/64/simpflat/75;
load_resumable@{Double} acc/a/conv/64/simpflat/76;
load_resumable@{Double} acc/a/conv/64/simpflat/77;
load_resumable@{Error} acc/conv/63/simpflat/64;
load_resumable@{Double} acc/conv/63/simpflat/65;
load_resumable@{Error} acc/conv/59/simpflat/56;
load_resumable@{Int} acc/conv/59/simpflat/57;
load_resumable@{Error} acc/conv/58/simpflat/50;
load_resumable@{Int} acc/conv/58/simpflat/51;
load_resumable@{Error} acc/s/reify/6/conv/13/simpflat/47;
load_resumable@{Double} acc/s/reify/6/conv/13/simpflat/48;
load_resumable@{Double} acc/s/reify/6/conv/13/simpflat/49;
load_resumable@{Error} acc/conv/12/simpflat/39;
load_resumable@{Double} acc/conv/12/simpflat/40;
load_resumable@{Error} acc/conv/8/simpflat/33;
load_resumable@{Double} acc/conv/8/simpflat/34;
for_facts (conv/2@{Time}, conv/1@{FactIdentifier}, conv/0/simpflat/282@{Error}, conv/0/simpflat/283@{String}, conv/0/simpflat/284@{Int}, conv/0/simpflat/285@{Time}) in new
{
  init flat/0/simpflat/78@{Error} = ExceptNotAnError@{Error};
  init flat/0/simpflat/79@{Int} = 0@{Int};
  if (eq#@{Error} conv/0/simpflat/282 (ExceptNotAnError@{Error}))
  {
    write flat/0/simpflat/78 = ExceptNotAnError@{Error};
    write flat/0/simpflat/79 = conv/0/simpflat/284;
  }
  else
  {
    write flat/0/simpflat/78 = conv/0/simpflat/282;
    write flat/0/simpflat/79 = 0@{Int};
  }
  read flat/0/simpflat/80 = flat/0/simpflat/78 [Error];
  read flat/0/simpflat/81 = flat/0/simpflat/79 [Int];
  init flat/1/simpflat/82@{Error} = ExceptNotAnError@{Error};
  init flat/1/simpflat/83@{Double} = 0.0@{Double};
  if (eq#@{Error} flat/0/simpflat/80 (ExceptNotAnError@{Error}))
  {
    write flat/1/simpflat/82 = ExceptNotAnError@{Error};
    write flat/1/simpflat/83 = doubleOfInt# flat/0/simpflat/81;
  }
  else
  {
    write flat/1/simpflat/82 = flat/0/simpflat/80;
    write flat/1/simpflat/83 = 0.0@{Double};
  }
  read flat/1/simpflat/84 = flat/1/simpflat/82 [Error];
  read flat/1/simpflat/85 = flat/1/simpflat/83 [Double];
  write acc/conv/8/simpflat/33 = flat/1/simpflat/84;
  write acc/conv/8/simpflat/34 = flat/1/simpflat/85;
  read conv/8/aval/0/simpflat/86 = acc/conv/8/simpflat/33 [Error];
  read conv/8/aval/0/simpflat/87 = acc/conv/8/simpflat/34 [Double];
  init flat/2/simpflat/92@{Error} = ExceptNotAnError@{Error};
  init flat/2/simpflat/93@{Double} = 0.0@{Double};
  if (eq#@{Error} conv/8/aval/0/simpflat/86 (ExceptNotAnError@{Error}))
  {
    write flat/2/simpflat/92 = ExceptNotAnError@{Error};
    write flat/2/simpflat/93 = conv/8/aval/0/simpflat/87;
  }
  else
  {
    write flat/2/simpflat/92 = conv/8/aval/0/simpflat/86;
    write flat/2/simpflat/93 = 0.0@{Double};
  }
  read flat/2/simpflat/94 = flat/2/simpflat/92 [Error];
  read flat/2/simpflat/95 = flat/2/simpflat/93 [Double];
  write acc/conv/12/simpflat/39 = flat/2/simpflat/94;
  write acc/conv/12/simpflat/40 = flat/2/simpflat/95;
  read conv/12/aval/2/simpflat/96 = acc/conv/12/simpflat/39 [Error];
  read conv/12/aval/2/simpflat/97 = acc/conv/12/simpflat/40 [Double];
  read s/reify/6/conv/13/aval/1/simpflat/104 = acc/s/reify/6/conv/13/simpflat/47 [Error];
  read s/reify/6/conv/13/aval/1/simpflat/105 = acc/s/reify/6/conv/13/simpflat/48 [Double];
  read s/reify/6/conv/13/aval/1/simpflat/106 = acc/s/reify/6/conv/13/simpflat/49 [Double];
  init flat/9/simpflat/107@{Error} = ExceptNotAnError@{Error};
  init flat/9/simpflat/108@{Double} = 0.0@{Double};
  init flat/9/simpflat/109@{Double} = 0.0@{Double};
  if (eq#@{Error} s/reify/6/conv/13/aval/1/simpflat/104 (ExceptNotAnError@{Error}))
  {
    init flat/16/simpflat/110@{Error} = ExceptNotAnError@{Error};
    init flat/16/simpflat/111@{Double} = 0.0@{Double};
    init flat/16/simpflat/112@{Double} = 0.0@{Double};
    if (eq#@{Error} s/reify/6/conv/13/aval/1/simpflat/104 (ExceptNotAnError@{Error}))
    {
      init flat/19/simpflat/113@{Error} = ExceptNotAnError@{Error};
      init flat/19/simpflat/114@{Double} = 0.0@{Double};
      if (eq#@{Error} conv/12/aval/2/simpflat/96 (ExceptNotAnError@{Error}))
      {
        write flat/19/simpflat/113 = ExceptNotAnError@{Error};
        write flat/19/simpflat/114 = sub#@{Double} conv/12/aval/2/simpflat/97 s/reify/6/conv/13/aval/1/simpflat/105;
      }
      else
      {
        write flat/19/simpflat/113 = conv/12/aval/2/simpflat/96;
        write flat/19/simpflat/114 = 0.0@{Double};
      }
      read flat/19/simpflat/115 = flat/19/simpflat/113 [Error];
      read flat/19/simpflat/116 = flat/19/simpflat/114 [Double];
      init flat/20/simpflat/117@{Error} = ExceptNotAnError@{Error};
      init flat/20/simpflat/118@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/19/simpflat/115 (ExceptNotAnError@{Error}))
      {
        write flat/20/simpflat/117 = ExceptNotAnError@{Error};
        let simpflat/354 = add#@{Double} s/reify/6/conv/13/aval/1/simpflat/106 (1.0@{Double});
        write flat/20/simpflat/118 = div# flat/19/simpflat/116 simpflat/354;
      }
      else
      {
        write flat/20/simpflat/117 = flat/19/simpflat/115;
        write flat/20/simpflat/118 = 0.0@{Double};
      }
      read flat/20/simpflat/119 = flat/20/simpflat/117 [Error];
      read flat/20/simpflat/120 = flat/20/simpflat/118 [Double];
      init flat/21/simpflat/121@{Error} = ExceptNotAnError@{Error};
      init flat/21/simpflat/122@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/20/simpflat/119 (ExceptNotAnError@{Error}))
      {
        write flat/21/simpflat/121 = ExceptNotAnError@{Error};
        write flat/21/simpflat/122 = add#@{Double} s/reify/6/conv/13/aval/1/simpflat/105 flat/20/simpflat/120;
      }
      else
      {
        write flat/21/simpflat/121 = flat/20/simpflat/119;
        write flat/21/simpflat/122 = 0.0@{Double};
      }
      read flat/21/simpflat/123 = flat/21/simpflat/121 [Error];
      read flat/21/simpflat/124 = flat/21/simpflat/122 [Double];
      init flat/22/simpflat/125@{Error} = ExceptNotAnError@{Error};
      init flat/22/simpflat/126@{Double} = 0.0@{Double};
      init flat/22/simpflat/127@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/21/simpflat/123 (ExceptNotAnError@{Error}))
      {
        write flat/22/simpflat/125 = ExceptNotAnError@{Error};
        write flat/22/simpflat/126 = flat/21/simpflat/124;
        write flat/22/simpflat/127 = add#@{Double} s/reify/6/conv/13/aval/1/simpflat/106 (1.0@{Double});
      }
      else
      {
        write flat/22/simpflat/125 = flat/21/simpflat/123;
        write flat/22/simpflat/126 = 0.0@{Double};
        write flat/22/simpflat/127 = 0.0@{Double};
      }
      read flat/22/simpflat/128 = flat/22/simpflat/125 [Error];
      read flat/22/simpflat/129 = flat/22/simpflat/126 [Double];
      read flat/22/simpflat/130 = flat/22/simpflat/127 [Double];
      write flat/16/simpflat/110 = flat/22/simpflat/128;
      write flat/16/simpflat/111 = flat/22/simpflat/129;
      write flat/16/simpflat/112 = flat/22/simpflat/130;
    }
    else
    {
      write flat/16/simpflat/110 = s/reify/6/conv/13/aval/1/simpflat/104;
      write flat/16/simpflat/111 = 0.0@{Double};
      write flat/16/simpflat/112 = 0.0@{Double};
    }
    read flat/16/simpflat/131 = flat/16/simpflat/110 [Error];
    read flat/16/simpflat/132 = flat/16/simpflat/111 [Double];
    read flat/16/simpflat/133 = flat/16/simpflat/112 [Double];
    write flat/9/simpflat/107 = flat/16/simpflat/131;
    write flat/9/simpflat/108 = flat/16/simpflat/132;
    write flat/9/simpflat/109 = flat/16/simpflat/133;
  }
  else
  {
    init flat/12/simpflat/134@{Error} = ExceptNotAnError@{Error};
    init flat/12/simpflat/135@{Double} = 0.0@{Double};
    init flat/12/simpflat/136@{Double} = 0.0@{Double};
    if (eq#@{Error} (ExceptFold1NoValue@{Error}) s/reify/6/conv/13/aval/1/simpflat/104)
    {
      init flat/13/simpflat/137@{Error} = ExceptNotAnError@{Error};
      init flat/13/simpflat/138@{Double} = 0.0@{Double};
      init flat/13/simpflat/139@{Double} = 0.0@{Double};
      if (eq#@{Error} conv/12/aval/2/simpflat/96 (ExceptNotAnError@{Error}))
      {
        write flat/13/simpflat/137 = ExceptNotAnError@{Error};
        write flat/13/simpflat/138 = conv/12/aval/2/simpflat/97;
        write flat/13/simpflat/139 = 1.0@{Double};
      }
      else
      {
        write flat/13/simpflat/137 = conv/12/aval/2/simpflat/96;
        write flat/13/simpflat/138 = 0.0@{Double};
        write flat/13/simpflat/139 = 0.0@{Double};
      }
      read flat/13/simpflat/140 = flat/13/simpflat/137 [Error];
      read flat/13/simpflat/141 = flat/13/simpflat/138 [Double];
      read flat/13/simpflat/142 = flat/13/simpflat/139 [Double];
      write flat/12/simpflat/134 = flat/13/simpflat/140;
      write flat/12/simpflat/135 = flat/13/simpflat/141;
      write flat/12/simpflat/136 = flat/13/simpflat/142;
    }
    else
    {
      write flat/12/simpflat/134 = s/reify/6/conv/13/aval/1/simpflat/104;
      write flat/12/simpflat/135 = 0.0@{Double};
      write flat/12/simpflat/136 = 0.0@{Double};
    }
    read flat/12/simpflat/143 = flat/12/simpflat/134 [Error];
    read flat/12/simpflat/144 = flat/12/simpflat/135 [Double];
    read flat/12/simpflat/145 = flat/12/simpflat/136 [Double];
    write flat/9/simpflat/107 = flat/12/simpflat/143;
    write flat/9/simpflat/108 = flat/12/simpflat/144;
    write flat/9/simpflat/109 = flat/12/simpflat/145;
  }
  read flat/9/simpflat/146 = flat/9/simpflat/107 [Error];
  read flat/9/simpflat/147 = flat/9/simpflat/108 [Double];
  read flat/9/simpflat/148 = flat/9/simpflat/109 [Double];
  write acc/s/reify/6/conv/13/simpflat/47 = flat/9/simpflat/146;
  write acc/s/reify/6/conv/13/simpflat/48 = flat/9/simpflat/147;
  write acc/s/reify/6/conv/13/simpflat/49 = flat/9/simpflat/148;
  init flat/31/simpflat/149@{Error} = ExceptNotAnError@{Error};
  init flat/31/simpflat/150@{String} = ""@{String};
  if (eq#@{Error} conv/0/simpflat/282 (ExceptNotAnError@{Error}))
  {
    write flat/31/simpflat/149 = ExceptNotAnError@{Error};
    write flat/31/simpflat/150 = conv/0/simpflat/283;
  }
  else
  {
    write flat/31/simpflat/149 = conv/0/simpflat/282;
    write flat/31/simpflat/150 = ""@{String};
  }
  read flat/31/simpflat/151 = flat/31/simpflat/149 [Error];
  read flat/31/simpflat/152 = flat/31/simpflat/150 [String];
  init flat/32/simpflat/153@{Error} = ExceptNotAnError@{Error};
  init flat/32/simpflat/154@{Bool} = False@{Bool};
  if (eq#@{Error} flat/31/simpflat/151 (ExceptNotAnError@{Error}))
  {
    write flat/32/simpflat/153 = ExceptNotAnError@{Error};
    write flat/32/simpflat/154 = eq#@{String} flat/31/simpflat/152 ("torso"@{String});
  }
  else
  {
    write flat/32/simpflat/153 = flat/31/simpflat/151;
    write flat/32/simpflat/154 = False@{Bool};
  }
  read flat/32/simpflat/155 = flat/32/simpflat/153 [Error];
  read flat/32/simpflat/156 = flat/32/simpflat/154 [Bool];
  init flat/33@{Bool} = False@{Bool};
  if (eq#@{Error} flat/32/simpflat/155 (ExceptNotAnError@{Error}))
  {
    write flat/33 = flat/32/simpflat/156;
  }
  else
  {
    write flat/33 = True@{Bool};
  }
  read flat/33 = flat/33 [Bool];
  if (flat/33)
  {
    init flat/34/simpflat/157@{Error} = ExceptNotAnError@{Error};
    init flat/34/simpflat/158@{Int} = 0@{Int};
    if (eq#@{Error} conv/0/simpflat/282 (ExceptNotAnError@{Error}))
    {
      write flat/34/simpflat/157 = ExceptNotAnError@{Error};
      write flat/34/simpflat/158 = conv/0/simpflat/284;
    }
    else
    {
      write flat/34/simpflat/157 = conv/0/simpflat/282;
      write flat/34/simpflat/158 = 0@{Int};
    }
    read flat/34/simpflat/159 = flat/34/simpflat/157 [Error];
    read flat/34/simpflat/160 = flat/34/simpflat/158 [Int];
    write acc/conv/58/simpflat/50 = flat/34/simpflat/159;
    write acc/conv/58/simpflat/51 = flat/34/simpflat/160;
    read conv/58/aval/3/simpflat/161 = acc/conv/58/simpflat/50 [Error];
    read conv/58/aval/3/simpflat/162 = acc/conv/58/simpflat/51 [Int];
    write acc/conv/59/simpflat/56 = conv/58/aval/3/simpflat/161;
    write acc/conv/59/simpflat/57 = conv/58/aval/3/simpflat/162;
    read conv/59/aval/4/simpflat/167 = acc/conv/59/simpflat/56 [Error];
    read conv/59/aval/4/simpflat/168 = acc/conv/59/simpflat/57 [Int];
    init flat/35/simpflat/175@{Error} = ExceptNotAnError@{Error};
    init flat/35/simpflat/176@{Double} = 0.0@{Double};
    if (eq#@{Error} conv/59/aval/4/simpflat/167 (ExceptNotAnError@{Error}))
    {
      write flat/35/simpflat/175 = ExceptNotAnError@{Error};
      write flat/35/simpflat/176 = doubleOfInt# conv/59/aval/4/simpflat/168;
    }
    else
    {
      write flat/35/simpflat/175 = conv/59/aval/4/simpflat/167;
      write flat/35/simpflat/176 = 0.0@{Double};
    }
    read flat/35/simpflat/177 = flat/35/simpflat/175 [Error];
    read flat/35/simpflat/178 = flat/35/simpflat/176 [Double];
    write acc/conv/63/simpflat/64 = flat/35/simpflat/177;
    write acc/conv/63/simpflat/65 = flat/35/simpflat/178;
    read conv/63/aval/6/simpflat/179 = acc/conv/63/simpflat/64 [Error];
    read conv/63/aval/6/simpflat/180 = acc/conv/63/simpflat/65 [Double];
    read a/conv/64/aval/5/simpflat/189 = acc/a/conv/64/simpflat/74 [Error];
    read a/conv/64/aval/5/simpflat/190 = acc/a/conv/64/simpflat/75 [Double];
    read a/conv/64/aval/5/simpflat/191 = acc/a/conv/64/simpflat/76 [Double];
    read a/conv/64/aval/5/simpflat/192 = acc/a/conv/64/simpflat/77 [Double];
    init flat/36/simpflat/193@{Error} = ExceptNotAnError@{Error};
    init flat/36/simpflat/194@{Double} = 0.0@{Double};
    init flat/36/simpflat/195@{Double} = 0.0@{Double};
    init flat/36/simpflat/196@{Double} = 0.0@{Double};
    if (eq#@{Error} a/conv/64/aval/5/simpflat/189 (ExceptNotAnError@{Error}))
    {
      let nn/conv/71 = add#@{Double} a/conv/64/aval/5/simpflat/190 (1.0@{Double});
      init flat/39/simpflat/197@{Error} = ExceptNotAnError@{Error};
      init flat/39/simpflat/198@{Double} = 0.0@{Double};
      if (eq#@{Error} conv/63/aval/6/simpflat/179 (ExceptNotAnError@{Error}))
      {
        write flat/39/simpflat/197 = ExceptNotAnError@{Error};
        write flat/39/simpflat/198 = sub#@{Double} conv/63/aval/6/simpflat/180 a/conv/64/aval/5/simpflat/191;
      }
      else
      {
        write flat/39/simpflat/197 = conv/63/aval/6/simpflat/179;
        write flat/39/simpflat/198 = 0.0@{Double};
      }
      read flat/39/simpflat/199 = flat/39/simpflat/197 [Error];
      read flat/39/simpflat/200 = flat/39/simpflat/198 [Double];
      init flat/40/simpflat/201@{Error} = ExceptNotAnError@{Error};
      init flat/40/simpflat/202@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/39/simpflat/199 (ExceptNotAnError@{Error}))
      {
        write flat/40/simpflat/201 = ExceptNotAnError@{Error};
        write flat/40/simpflat/202 = div# flat/39/simpflat/200 nn/conv/71;
      }
      else
      {
        write flat/40/simpflat/201 = flat/39/simpflat/199;
        write flat/40/simpflat/202 = 0.0@{Double};
      }
      read flat/40/simpflat/203 = flat/40/simpflat/201 [Error];
      read flat/40/simpflat/204 = flat/40/simpflat/202 [Double];
      init flat/41/simpflat/205@{Error} = ExceptNotAnError@{Error};
      init flat/41/simpflat/206@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/40/simpflat/203 (ExceptNotAnError@{Error}))
      {
        write flat/41/simpflat/205 = ExceptNotAnError@{Error};
        write flat/41/simpflat/206 = add#@{Double} a/conv/64/aval/5/simpflat/191 flat/40/simpflat/204;
      }
      else
      {
        write flat/41/simpflat/205 = flat/40/simpflat/203;
        write flat/41/simpflat/206 = 0.0@{Double};
      }
      read flat/41/simpflat/207 = flat/41/simpflat/205 [Error];
      read flat/41/simpflat/208 = flat/41/simpflat/206 [Double];
      init flat/42/simpflat/209@{Error} = ExceptNotAnError@{Error};
      init flat/42/simpflat/210@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/39/simpflat/199 (ExceptNotAnError@{Error}))
      {
        init flat/57/simpflat/211@{Error} = ExceptNotAnError@{Error};
        init flat/57/simpflat/212@{Double} = 0.0@{Double};
        if (eq#@{Error} conv/63/aval/6/simpflat/179 (ExceptNotAnError@{Error}))
        {
          init flat/63/simpflat/213@{Error} = ExceptNotAnError@{Error};
          init flat/63/simpflat/214@{Double} = 0.0@{Double};
          if (eq#@{Error} flat/41/simpflat/207 (ExceptNotAnError@{Error}))
          {
            write flat/63/simpflat/213 = ExceptNotAnError@{Error};
            write flat/63/simpflat/214 = sub#@{Double} conv/63/aval/6/simpflat/180 flat/41/simpflat/208;
          }
          else
          {
            write flat/63/simpflat/213 = flat/41/simpflat/207;
            write flat/63/simpflat/214 = 0.0@{Double};
          }
          read flat/63/simpflat/215 = flat/63/simpflat/213 [Error];
          read flat/63/simpflat/216 = flat/63/simpflat/214 [Double];
          write flat/57/simpflat/211 = flat/63/simpflat/215;
          write flat/57/simpflat/212 = flat/63/simpflat/216;
        }
        else
        {
          write flat/57/simpflat/211 = conv/63/aval/6/simpflat/179;
          write flat/57/simpflat/212 = 0.0@{Double};
        }
        read flat/57/simpflat/217 = flat/57/simpflat/211 [Error];
        read flat/57/simpflat/218 = flat/57/simpflat/212 [Double];
        init flat/58/simpflat/219@{Error} = ExceptNotAnError@{Error};
        init flat/58/simpflat/220@{Double} = 0.0@{Double};
        if (eq#@{Error} flat/57/simpflat/217 (ExceptNotAnError@{Error}))
        {
          write flat/58/simpflat/219 = ExceptNotAnError@{Error};
          write flat/58/simpflat/220 = mul#@{Double} flat/39/simpflat/200 flat/57/simpflat/218;
        }
        else
        {
          write flat/58/simpflat/219 = flat/57/simpflat/217;
          write flat/58/simpflat/220 = 0.0@{Double};
        }
        read flat/58/simpflat/221 = flat/58/simpflat/219 [Error];
        read flat/58/simpflat/222 = flat/58/simpflat/220 [Double];
        write flat/42/simpflat/209 = flat/58/simpflat/221;
        write flat/42/simpflat/210 = flat/58/simpflat/222;
      }
      else
      {
        write flat/42/simpflat/209 = flat/39/simpflat/199;
        write flat/42/simpflat/210 = 0.0@{Double};
      }
      read flat/42/simpflat/223 = flat/42/simpflat/209 [Error];
      read flat/42/simpflat/224 = flat/42/simpflat/210 [Double];
      init flat/43/simpflat/225@{Error} = ExceptNotAnError@{Error};
      init flat/43/simpflat/226@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/42/simpflat/223 (ExceptNotAnError@{Error}))
      {
        write flat/43/simpflat/225 = ExceptNotAnError@{Error};
        write flat/43/simpflat/226 = add#@{Double} a/conv/64/aval/5/simpflat/192 flat/42/simpflat/224;
      }
      else
      {
        write flat/43/simpflat/225 = flat/42/simpflat/223;
        write flat/43/simpflat/226 = 0.0@{Double};
      }
      read flat/43/simpflat/227 = flat/43/simpflat/225 [Error];
      read flat/43/simpflat/228 = flat/43/simpflat/226 [Double];
      init flat/44/simpflat/229@{Error} = ExceptNotAnError@{Error};
      init flat/44/simpflat/230@{Double} = 0.0@{Double};
      init flat/44/simpflat/231@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/41/simpflat/207 (ExceptNotAnError@{Error}))
      {
        write flat/44/simpflat/229 = ExceptNotAnError@{Error};
        write flat/44/simpflat/230 = add#@{Double} a/conv/64/aval/5/simpflat/190 (1.0@{Double});
        write flat/44/simpflat/231 = flat/41/simpflat/208;
      }
      else
      {
        write flat/44/simpflat/229 = flat/41/simpflat/207;
        write flat/44/simpflat/230 = 0.0@{Double};
        write flat/44/simpflat/231 = 0.0@{Double};
      }
      read flat/44/simpflat/232 = flat/44/simpflat/229 [Error];
      read flat/44/simpflat/233 = flat/44/simpflat/230 [Double];
      read flat/44/simpflat/234 = flat/44/simpflat/231 [Double];
      init flat/45/simpflat/235@{Error} = ExceptNotAnError@{Error};
      init flat/45/simpflat/236@{Double} = 0.0@{Double};
      init flat/45/simpflat/237@{Double} = 0.0@{Double};
      init flat/45/simpflat/238@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/44/simpflat/232 (ExceptNotAnError@{Error}))
      {
        init flat/48/simpflat/239@{Error} = ExceptNotAnError@{Error};
        init flat/48/simpflat/240@{Double} = 0.0@{Double};
        init flat/48/simpflat/241@{Double} = 0.0@{Double};
        init flat/48/simpflat/242@{Double} = 0.0@{Double};
        if (eq#@{Error} flat/43/simpflat/227 (ExceptNotAnError@{Error}))
        {
          write flat/48/simpflat/239 = ExceptNotAnError@{Error};
          write flat/48/simpflat/240 = flat/44/simpflat/233;
          write flat/48/simpflat/241 = flat/44/simpflat/234;
          write flat/48/simpflat/242 = flat/43/simpflat/228;
        }
        else
        {
          write flat/48/simpflat/239 = flat/43/simpflat/227;
          write flat/48/simpflat/240 = 0.0@{Double};
          write flat/48/simpflat/241 = 0.0@{Double};
          write flat/48/simpflat/242 = 0.0@{Double};
        }
        read flat/48/simpflat/243 = flat/48/simpflat/239 [Error];
        read flat/48/simpflat/244 = flat/48/simpflat/240 [Double];
        read flat/48/simpflat/245 = flat/48/simpflat/241 [Double];
        read flat/48/simpflat/246 = flat/48/simpflat/242 [Double];
        write flat/45/simpflat/235 = flat/48/simpflat/243;
        write flat/45/simpflat/236 = flat/48/simpflat/244;
        write flat/45/simpflat/237 = flat/48/simpflat/245;
        write flat/45/simpflat/238 = flat/48/simpflat/246;
      }
      else
      {
        write flat/45/simpflat/235 = flat/44/simpflat/232;
        write flat/45/simpflat/236 = 0.0@{Double};
        write flat/45/simpflat/237 = 0.0@{Double};
        write flat/45/simpflat/238 = 0.0@{Double};
      }
      read flat/45/simpflat/247 = flat/45/simpflat/235 [Error];
      read flat/45/simpflat/248 = flat/45/simpflat/236 [Double];
      read flat/45/simpflat/249 = flat/45/simpflat/237 [Double];
      read flat/45/simpflat/250 = flat/45/simpflat/238 [Double];
      write flat/36/simpflat/193 = flat/45/simpflat/247;
      write flat/36/simpflat/194 = flat/45/simpflat/248;
      write flat/36/simpflat/195 = flat/45/simpflat/249;
      write flat/36/simpflat/196 = flat/45/simpflat/250;
    }
    else
    {
      write flat/36/simpflat/193 = a/conv/64/aval/5/simpflat/189;
      write flat/36/simpflat/194 = 0.0@{Double};
      write flat/36/simpflat/195 = 0.0@{Double};
      write flat/36/simpflat/196 = 0.0@{Double};
    }
    read flat/36/simpflat/251 = flat/36/simpflat/193 [Error];
    read flat/36/simpflat/252 = flat/36/simpflat/194 [Double];
    read flat/36/simpflat/253 = flat/36/simpflat/195 [Double];
    read flat/36/simpflat/254 = flat/36/simpflat/196 [Double];
    write acc/a/conv/64/simpflat/74 = flat/36/simpflat/251;
    write acc/a/conv/64/simpflat/75 = flat/36/simpflat/252;
    write acc/a/conv/64/simpflat/76 = flat/36/simpflat/253;
    write acc/a/conv/64/simpflat/77 = flat/36/simpflat/254;
  }
}
save_resumable@{Error} acc/a/conv/64/simpflat/74;
save_resumable@{Double} acc/a/conv/64/simpflat/75;
save_resumable@{Double} acc/a/conv/64/simpflat/76;
save_resumable@{Double} acc/a/conv/64/simpflat/77;
save_resumable@{Error} acc/conv/63/simpflat/64;
save_resumable@{Double} acc/conv/63/simpflat/65;
save_resumable@{Error} acc/conv/59/simpflat/56;
save_resumable@{Int} acc/conv/59/simpflat/57;
save_resumable@{Error} acc/conv/58/simpflat/50;
save_resumable@{Int} acc/conv/58/simpflat/51;
save_resumable@{Error} acc/s/reify/6/conv/13/simpflat/47;
save_resumable@{Double} acc/s/reify/6/conv/13/simpflat/48;
save_resumable@{Double} acc/s/reify/6/conv/13/simpflat/49;
save_resumable@{Error} acc/conv/12/simpflat/39;
save_resumable@{Double} acc/conv/12/simpflat/40;
save_resumable@{Error} acc/conv/8/simpflat/33;
save_resumable@{Double} acc/conv/8/simpflat/34;
read a/conv/64/simpflat/255 = acc/a/conv/64/simpflat/74 [Error];
read a/conv/64/simpflat/256 = acc/a/conv/64/simpflat/75 [Double];
read a/conv/64/simpflat/258 = acc/a/conv/64/simpflat/77 [Double];
read s/reify/6/conv/13/simpflat/259 = acc/s/reify/6/conv/13/simpflat/47 [Error];
read s/reify/6/conv/13/simpflat/260 = acc/s/reify/6/conv/13/simpflat/48 [Double];
init flat/89/simpflat/262@{Error} = ExceptNotAnError@{Error};
init flat/89/simpflat/263@{Double} = 0.0@{Double};
if (eq#@{Error} s/reify/6/conv/13/simpflat/259 (ExceptNotAnError@{Error}))
{
  write flat/89/simpflat/262 = ExceptNotAnError@{Error};
  write flat/89/simpflat/263 = s/reify/6/conv/13/simpflat/260;
}
else
{
  write flat/89/simpflat/262 = s/reify/6/conv/13/simpflat/259;
  write flat/89/simpflat/263 = 0.0@{Double};
}
read flat/89/simpflat/264 = flat/89/simpflat/262 [Error];
read flat/89/simpflat/265 = flat/89/simpflat/263 [Double];
init flat/90/simpflat/266@{Error} = ExceptNotAnError@{Error};
init flat/90/simpflat/267@{Double} = 0.0@{Double};
if (eq#@{Error} flat/89/simpflat/264 (ExceptNotAnError@{Error}))
{
  init flat/93/simpflat/268@{Error} = ExceptNotAnError@{Error};
  init flat/93/simpflat/269@{Double} = 0.0@{Double};
  if (eq#@{Error} a/conv/64/simpflat/255 (ExceptNotAnError@{Error}))
  {
    let conv/119 = sub#@{Double} a/conv/64/simpflat/256 (1.0@{Double});
    let simpflat/749 = div# a/conv/64/simpflat/258 conv/119;
    write flat/93/simpflat/268 = ExceptNotAnError@{Error};
    write flat/93/simpflat/269 = simpflat/749;
  }
  else
  {
    write flat/93/simpflat/268 = a/conv/64/simpflat/255;
    write flat/93/simpflat/269 = 0.0@{Double};
  }
  read flat/93/simpflat/270 = flat/93/simpflat/268 [Error];
  read flat/93/simpflat/271 = flat/93/simpflat/269 [Double];
  init flat/94/simpflat/272@{Error} = ExceptNotAnError@{Error};
  init flat/94/simpflat/273@{Double} = 0.0@{Double};
  if (eq#@{Error} flat/93/simpflat/270 (ExceptNotAnError@{Error}))
  {
    write flat/94/simpflat/272 = ExceptNotAnError@{Error};
    write flat/94/simpflat/273 = sqrt# flat/93/simpflat/271;
  }
  else
  {
    write flat/94/simpflat/272 = flat/93/simpflat/270;
    write flat/94/simpflat/273 = 0.0@{Double};
  }
  read flat/94/simpflat/274 = flat/94/simpflat/272 [Error];
  read flat/94/simpflat/275 = flat/94/simpflat/273 [Double];
  init flat/95/simpflat/276@{Error} = ExceptNotAnError@{Error};
  init flat/95/simpflat/277@{Double} = 0.0@{Double};
  if (eq#@{Error} flat/94/simpflat/274 (ExceptNotAnError@{Error}))
  {
    write flat/95/simpflat/276 = ExceptNotAnError@{Error};
    write flat/95/simpflat/277 = mul#@{Double} flat/89/simpflat/265 flat/94/simpflat/275;
  }
  else
  {
    write flat/95/simpflat/276 = flat/94/simpflat/274;
    write flat/95/simpflat/277 = 0.0@{Double};
  }
  read flat/95/simpflat/278 = flat/95/simpflat/276 [Error];
  read flat/95/simpflat/279 = flat/95/simpflat/277 [Double];
  write flat/90/simpflat/266 = flat/95/simpflat/278;
  write flat/90/simpflat/267 = flat/95/simpflat/279;
}
else
{
  write flat/90/simpflat/266 = flat/89/simpflat/264;
  write flat/90/simpflat/267 = 0.0@{Double};
}
read flat/90/simpflat/280 = flat/90/simpflat/266 [Error];
read flat/90/simpflat/281 = flat/90/simpflat/267 [Double];
output@{(Sum Error Double)} repl (flat/90/simpflat/280@{Error}, flat/90/simpflat/281@{Double});

- Flattened Avalanche (simplified), typechecked:
conv/3 = TIME
conv/4 = MAX_MAP_SIZE
init acc/conv/8/simpflat/33@{Error} = ExceptNotAnError@{Error};
init acc/conv/8/simpflat/34@{Double} = 0.0@{Double};
init acc/conv/12/simpflat/39@{Error} = ExceptNotAnError@{Error};
init acc/conv/12/simpflat/40@{Double} = 0.0@{Double};
init acc/s/reify/6/conv/13/simpflat/47@{Error} = ExceptFold1NoValue@{Error};
init acc/s/reify/6/conv/13/simpflat/48@{Double} = 0.0@{Double};
init acc/s/reify/6/conv/13/simpflat/49@{Double} = 0.0@{Double};
init acc/conv/58/simpflat/50@{Error} = ExceptNotAnError@{Error};
init acc/conv/58/simpflat/51@{Int} = 0@{Int};
init acc/conv/59/simpflat/56@{Error} = ExceptNotAnError@{Error};
init acc/conv/59/simpflat/57@{Int} = 0@{Int};
init acc/conv/63/simpflat/64@{Error} = ExceptNotAnError@{Error};
init acc/conv/63/simpflat/65@{Double} = 0.0@{Double};
init acc/a/conv/64/simpflat/74@{Error} = ExceptNotAnError@{Error};
init acc/a/conv/64/simpflat/75@{Double} = 0.0@{Double};
init acc/a/conv/64/simpflat/76@{Double} = 0.0@{Double};
init acc/a/conv/64/simpflat/77@{Double} = 0.0@{Double};
load_resumable@{Error} acc/a/conv/64/simpflat/74;
load_resumable@{Double} acc/a/conv/64/simpflat/75;
load_resumable@{Double} acc/a/conv/64/simpflat/76;
load_resumable@{Double} acc/a/conv/64/simpflat/77;
load_resumable@{Error} acc/conv/63/simpflat/64;
load_resumable@{Double} acc/conv/63/simpflat/65;
load_resumable@{Error} acc/conv/59/simpflat/56;
load_resumable@{Int} acc/conv/59/simpflat/57;
load_resumable@{Error} acc/conv/58/simpflat/50;
load_resumable@{Int} acc/conv/58/simpflat/51;
load_resumable@{Error} acc/s/reify/6/conv/13/simpflat/47;
load_resumable@{Double} acc/s/reify/6/conv/13/simpflat/48;
load_resumable@{Double} acc/s/reify/6/conv/13/simpflat/49;
load_resumable@{Error} acc/conv/12/simpflat/39;
load_resumable@{Double} acc/conv/12/simpflat/40;
load_resumable@{Error} acc/conv/8/simpflat/33;
load_resumable@{Double} acc/conv/8/simpflat/34;
for_facts (conv/2@{Time}, conv/1@{FactIdentifier}, conv/0/simpflat/282@{Error}, conv/0/simpflat/283@{String}, conv/0/simpflat/284@{Int}, conv/0/simpflat/285@{Time}) in new
{
  init flat/0/simpflat/78@{Error} = ExceptNotAnError@{Error};
  init flat/0/simpflat/79@{Int} = 0@{Int};
  if (eq#@{Error} conv/0/simpflat/282 (ExceptNotAnError@{Error}))
  {
    write flat/0/simpflat/78 = ExceptNotAnError@{Error};
    write flat/0/simpflat/79 = conv/0/simpflat/284;
  }
  else
  {
    write flat/0/simpflat/78 = conv/0/simpflat/282;
    write flat/0/simpflat/79 = 0@{Int};
  }
  read flat/0/simpflat/80 = flat/0/simpflat/78 [Error];
  read flat/0/simpflat/81 = flat/0/simpflat/79 [Int];
  init flat/1/simpflat/82@{Error} = ExceptNotAnError@{Error};
  init flat/1/simpflat/83@{Double} = 0.0@{Double};
  if (eq#@{Error} flat/0/simpflat/80 (ExceptNotAnError@{Error}))
  {
    write flat/1/simpflat/82 = ExceptNotAnError@{Error};
    write flat/1/simpflat/83 = doubleOfInt# flat/0/simpflat/81;
  }
  else
  {
    write flat/1/simpflat/82 = flat/0/simpflat/80;
    write flat/1/simpflat/83 = 0.0@{Double};
  }
  read flat/1/simpflat/84 = flat/1/simpflat/82 [Error];
  read flat/1/simpflat/85 = flat/1/simpflat/83 [Double];
  write acc/conv/8/simpflat/33 = flat/1/simpflat/84;
  write acc/conv/8/simpflat/34 = flat/1/simpflat/85;
  read conv/8/aval/0/simpflat/86 = acc/conv/8/simpflat/33 [Error];
  read conv/8/aval/0/simpflat/87 = acc/conv/8/simpflat/34 [Double];
  init flat/2/simpflat/92@{Error} = ExceptNotAnError@{Error};
  init flat/2/simpflat/93@{Double} = 0.0@{Double};
  if (eq#@{Error} conv/8/aval/0/simpflat/86 (ExceptNotAnError@{Error}))
  {
    write flat/2/simpflat/92 = ExceptNotAnError@{Error};
    write flat/2/simpflat/93 = conv/8/aval/0/simpflat/87;
  }
  else
  {
    write flat/2/simpflat/92 = conv/8/aval/0/simpflat/86;
    write flat/2/simpflat/93 = 0.0@{Double};
  }
  read flat/2/simpflat/94 = flat/2/simpflat/92 [Error];
  read flat/2/simpflat/95 = flat/2/simpflat/93 [Double];
  write acc/conv/12/simpflat/39 = flat/2/simpflat/94;
  write acc/conv/12/simpflat/40 = flat/2/simpflat/95;
  read conv/12/aval/2/simpflat/96 = acc/conv/12/simpflat/39 [Error];
  read conv/12/aval/2/simpflat/97 = acc/conv/12/simpflat/40 [Double];
  read s/reify/6/conv/13/aval/1/simpflat/104 = acc/s/reify/6/conv/13/simpflat/47 [Error];
  read s/reify/6/conv/13/aval/1/simpflat/105 = acc/s/reify/6/conv/13/simpflat/48 [Double];
  read s/reify/6/conv/13/aval/1/simpflat/106 = acc/s/reify/6/conv/13/simpflat/49 [Double];
  init flat/9/simpflat/107@{Error} = ExceptNotAnError@{Error};
  init flat/9/simpflat/108@{Double} = 0.0@{Double};
  init flat/9/simpflat/109@{Double} = 0.0@{Double};
  if (eq#@{Error} s/reify/6/conv/13/aval/1/simpflat/104 (ExceptNotAnError@{Error}))
  {
    init flat/16/simpflat/110@{Error} = ExceptNotAnError@{Error};
    init flat/16/simpflat/111@{Double} = 0.0@{Double};
    init flat/16/simpflat/112@{Double} = 0.0@{Double};
    if (eq#@{Error} s/reify/6/conv/13/aval/1/simpflat/104 (ExceptNotAnError@{Error}))
    {
      init flat/19/simpflat/113@{Error} = ExceptNotAnError@{Error};
      init flat/19/simpflat/114@{Double} = 0.0@{Double};
      if (eq#@{Error} conv/12/aval/2/simpflat/96 (ExceptNotAnError@{Error}))
      {
        write flat/19/simpflat/113 = ExceptNotAnError@{Error};
        write flat/19/simpflat/114 = sub#@{Double} conv/12/aval/2/simpflat/97 s/reify/6/conv/13/aval/1/simpflat/105;
      }
      else
      {
        write flat/19/simpflat/113 = conv/12/aval/2/simpflat/96;
        write flat/19/simpflat/114 = 0.0@{Double};
      }
      read flat/19/simpflat/115 = flat/19/simpflat/113 [Error];
      read flat/19/simpflat/116 = flat/19/simpflat/114 [Double];
      init flat/20/simpflat/117@{Error} = ExceptNotAnError@{Error};
      init flat/20/simpflat/118@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/19/simpflat/115 (ExceptNotAnError@{Error}))
      {
        write flat/20/simpflat/117 = ExceptNotAnError@{Error};
        let simpflat/354 = add#@{Double} s/reify/6/conv/13/aval/1/simpflat/106 (1.0@{Double});
        write flat/20/simpflat/118 = div# flat/19/simpflat/116 simpflat/354;
      }
      else
      {
        write flat/20/simpflat/117 = flat/19/simpflat/115;
        write flat/20/simpflat/118 = 0.0@{Double};
      }
      read flat/20/simpflat/119 = flat/20/simpflat/117 [Error];
      read flat/20/simpflat/120 = flat/20/simpflat/118 [Double];
      init flat/21/simpflat/121@{Error} = ExceptNotAnError@{Error};
      init flat/21/simpflat/122@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/20/simpflat/119 (ExceptNotAnError@{Error}))
      {
        write flat/21/simpflat/121 = ExceptNotAnError@{Error};
        write flat/21/simpflat/122 = add#@{Double} s/reify/6/conv/13/aval/1/simpflat/105 flat/20/simpflat/120;
      }
      else
      {
        write flat/21/simpflat/121 = flat/20/simpflat/119;
        write flat/21/simpflat/122 = 0.0@{Double};
      }
      read flat/21/simpflat/123 = flat/21/simpflat/121 [Error];
      read flat/21/simpflat/124 = flat/21/simpflat/122 [Double];
      init flat/22/simpflat/125@{Error} = ExceptNotAnError@{Error};
      init flat/22/simpflat/126@{Double} = 0.0@{Double};
      init flat/22/simpflat/127@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/21/simpflat/123 (ExceptNotAnError@{Error}))
      {
        write flat/22/simpflat/125 = ExceptNotAnError@{Error};
        write flat/22/simpflat/126 = flat/21/simpflat/124;
        write flat/22/simpflat/127 = add#@{Double} s/reify/6/conv/13/aval/1/simpflat/106 (1.0@{Double});
      }
      else
      {
        write flat/22/simpflat/125 = flat/21/simpflat/123;
        write flat/22/simpflat/126 = 0.0@{Double};
        write flat/22/simpflat/127 = 0.0@{Double};
      }
      read flat/22/simpflat/128 = flat/22/simpflat/125 [Error];
      read flat/22/simpflat/129 = flat/22/simpflat/126 [Double];
      read flat/22/simpflat/130 = flat/22/simpflat/127 [Double];
      write flat/16/simpflat/110 = flat/22/simpflat/128;
      write flat/16/simpflat/111 = flat/22/simpflat/129;
      write flat/16/simpflat/112 = flat/22/simpflat/130;
    }
    else
    {
      write flat/16/simpflat/110 = s/reify/6/conv/13/aval/1/simpflat/104;
      write flat/16/simpflat/111 = 0.0@{Double};
      write flat/16/simpflat/112 = 0.0@{Double};
    }
    read flat/16/simpflat/131 = flat/16/simpflat/110 [Error];
    read flat/16/simpflat/132 = flat/16/simpflat/111 [Double];
    read flat/16/simpflat/133 = flat/16/simpflat/112 [Double];
    write flat/9/simpflat/107 = flat/16/simpflat/131;
    write flat/9/simpflat/108 = flat/16/simpflat/132;
    write flat/9/simpflat/109 = flat/16/simpflat/133;
  }
  else
  {
    init flat/12/simpflat/134@{Error} = ExceptNotAnError@{Error};
    init flat/12/simpflat/135@{Double} = 0.0@{Double};
    init flat/12/simpflat/136@{Double} = 0.0@{Double};
    if (eq#@{Error} (ExceptFold1NoValue@{Error}) s/reify/6/conv/13/aval/1/simpflat/104)
    {
      init flat/13/simpflat/137@{Error} = ExceptNotAnError@{Error};
      init flat/13/simpflat/138@{Double} = 0.0@{Double};
      init flat/13/simpflat/139@{Double} = 0.0@{Double};
      if (eq#@{Error} conv/12/aval/2/simpflat/96 (ExceptNotAnError@{Error}))
      {
        write flat/13/simpflat/137 = ExceptNotAnError@{Error};
        write flat/13/simpflat/138 = conv/12/aval/2/simpflat/97;
        write flat/13/simpflat/139 = 1.0@{Double};
      }
      else
      {
        write flat/13/simpflat/137 = conv/12/aval/2/simpflat/96;
        write flat/13/simpflat/138 = 0.0@{Double};
        write flat/13/simpflat/139 = 0.0@{Double};
      }
      read flat/13/simpflat/140 = flat/13/simpflat/137 [Error];
      read flat/13/simpflat/141 = flat/13/simpflat/138 [Double];
      read flat/13/simpflat/142 = flat/13/simpflat/139 [Double];
      write flat/12/simpflat/134 = flat/13/simpflat/140;
      write flat/12/simpflat/135 = flat/13/simpflat/141;
      write flat/12/simpflat/136 = flat/13/simpflat/142;
    }
    else
    {
      write flat/12/simpflat/134 = s/reify/6/conv/13/aval/1/simpflat/104;
      write flat/12/simpflat/135 = 0.0@{Double};
      write flat/12/simpflat/136 = 0.0@{Double};
    }
    read flat/12/simpflat/143 = flat/12/simpflat/134 [Error];
    read flat/12/simpflat/144 = flat/12/simpflat/135 [Double];
    read flat/12/simpflat/145 = flat/12/simpflat/136 [Double];
    write flat/9/simpflat/107 = flat/12/simpflat/143;
    write flat/9/simpflat/108 = flat/12/simpflat/144;
    write flat/9/simpflat/109 = flat/12/simpflat/145;
  }
  read flat/9/simpflat/146 = flat/9/simpflat/107 [Error];
  read flat/9/simpflat/147 = flat/9/simpflat/108 [Double];
  read flat/9/simpflat/148 = flat/9/simpflat/109 [Double];
  write acc/s/reify/6/conv/13/simpflat/47 = flat/9/simpflat/146;
  write acc/s/reify/6/conv/13/simpflat/48 = flat/9/simpflat/147;
  write acc/s/reify/6/conv/13/simpflat/49 = flat/9/simpflat/148;
  init flat/31/simpflat/149@{Error} = ExceptNotAnError@{Error};
  init flat/31/simpflat/150@{String} = ""@{String};
  if (eq#@{Error} conv/0/simpflat/282 (ExceptNotAnError@{Error}))
  {
    write flat/31/simpflat/149 = ExceptNotAnError@{Error};
    write flat/31/simpflat/150 = conv/0/simpflat/283;
  }
  else
  {
    write flat/31/simpflat/149 = conv/0/simpflat/282;
    write flat/31/simpflat/150 = ""@{String};
  }
  read flat/31/simpflat/151 = flat/31/simpflat/149 [Error];
  read flat/31/simpflat/152 = flat/31/simpflat/150 [String];
  init flat/32/simpflat/153@{Error} = ExceptNotAnError@{Error};
  init flat/32/simpflat/154@{Bool} = False@{Bool};
  if (eq#@{Error} flat/31/simpflat/151 (ExceptNotAnError@{Error}))
  {
    write flat/32/simpflat/153 = ExceptNotAnError@{Error};
    write flat/32/simpflat/154 = eq#@{String} flat/31/simpflat/152 ("torso"@{String});
  }
  else
  {
    write flat/32/simpflat/153 = flat/31/simpflat/151;
    write flat/32/simpflat/154 = False@{Bool};
  }
  read flat/32/simpflat/155 = flat/32/simpflat/153 [Error];
  read flat/32/simpflat/156 = flat/32/simpflat/154 [Bool];
  init flat/33@{Bool} = False@{Bool};
  if (eq#@{Error} flat/32/simpflat/155 (ExceptNotAnError@{Error}))
  {
    write flat/33 = flat/32/simpflat/156;
  }
  else
  {
    write flat/33 = True@{Bool};
  }
  read flat/33 = flat/33 [Bool];
  if (flat/33)
  {
    init flat/34/simpflat/157@{Error} = ExceptNotAnError@{Error};
    init flat/34/simpflat/158@{Int} = 0@{Int};
    if (eq#@{Error} conv/0/simpflat/282 (ExceptNotAnError@{Error}))
    {
      write flat/34/simpflat/157 = ExceptNotAnError@{Error};
      write flat/34/simpflat/158 = conv/0/simpflat/284;
    }
    else
    {
      write flat/34/simpflat/157 = conv/0/simpflat/282;
      write flat/34/simpflat/158 = 0@{Int};
    }
    read flat/34/simpflat/159 = flat/34/simpflat/157 [Error];
    read flat/34/simpflat/160 = flat/34/simpflat/158 [Int];
    write acc/conv/58/simpflat/50 = flat/34/simpflat/159;
    write acc/conv/58/simpflat/51 = flat/34/simpflat/160;
    read conv/58/aval/3/simpflat/161 = acc/conv/58/simpflat/50 [Error];
    read conv/58/aval/3/simpflat/162 = acc/conv/58/simpflat/51 [Int];
    write acc/conv/59/simpflat/56 = conv/58/aval/3/simpflat/161;
    write acc/conv/59/simpflat/57 = conv/58/aval/3/simpflat/162;
    read conv/59/aval/4/simpflat/167 = acc/conv/59/simpflat/56 [Error];
    read conv/59/aval/4/simpflat/168 = acc/conv/59/simpflat/57 [Int];
    init flat/35/simpflat/175@{Error} = ExceptNotAnError@{Error};
    init flat/35/simpflat/176@{Double} = 0.0@{Double};
    if (eq#@{Error} conv/59/aval/4/simpflat/167 (ExceptNotAnError@{Error}))
    {
      write flat/35/simpflat/175 = ExceptNotAnError@{Error};
      write flat/35/simpflat/176 = doubleOfInt# conv/59/aval/4/simpflat/168;
    }
    else
    {
      write flat/35/simpflat/175 = conv/59/aval/4/simpflat/167;
      write flat/35/simpflat/176 = 0.0@{Double};
    }
    read flat/35/simpflat/177 = flat/35/simpflat/175 [Error];
    read flat/35/simpflat/178 = flat/35/simpflat/176 [Double];
    write acc/conv/63/simpflat/64 = flat/35/simpflat/177;
    write acc/conv/63/simpflat/65 = flat/35/simpflat/178;
    read conv/63/aval/6/simpflat/179 = acc/conv/63/simpflat/64 [Error];
    read conv/63/aval/6/simpflat/180 = acc/conv/63/simpflat/65 [Double];
    read a/conv/64/aval/5/simpflat/189 = acc/a/conv/64/simpflat/74 [Error];
    read a/conv/64/aval/5/simpflat/190 = acc/a/conv/64/simpflat/75 [Double];
    read a/conv/64/aval/5/simpflat/191 = acc/a/conv/64/simpflat/76 [Double];
    read a/conv/64/aval/5/simpflat/192 = acc/a/conv/64/simpflat/77 [Double];
    init flat/36/simpflat/193@{Error} = ExceptNotAnError@{Error};
    init flat/36/simpflat/194@{Double} = 0.0@{Double};
    init flat/36/simpflat/195@{Double} = 0.0@{Double};
    init flat/36/simpflat/196@{Double} = 0.0@{Double};
    if (eq#@{Error} a/conv/64/aval/5/simpflat/189 (ExceptNotAnError@{Error}))
    {
      let nn/conv/71 = add#@{Double} a/conv/64/aval/5/simpflat/190 (1.0@{Double});
      init flat/39/simpflat/197@{Error} = ExceptNotAnError@{Error};
      init flat/39/simpflat/198@{Double} = 0.0@{Double};
      if (eq#@{Error} conv/63/aval/6/simpflat/179 (ExceptNotAnError@{Error}))
      {
        write flat/39/simpflat/197 = ExceptNotAnError@{Error};
        write flat/39/simpflat/198 = sub#@{Double} conv/63/aval/6/simpflat/180 a/conv/64/aval/5/simpflat/191;
      }
      else
      {
        write flat/39/simpflat/197 = conv/63/aval/6/simpflat/179;
        write flat/39/simpflat/198 = 0.0@{Double};
      }
      read flat/39/simpflat/199 = flat/39/simpflat/197 [Error];
      read flat/39/simpflat/200 = flat/39/simpflat/198 [Double];
      init flat/40/simpflat/201@{Error} = ExceptNotAnError@{Error};
      init flat/40/simpflat/202@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/39/simpflat/199 (ExceptNotAnError@{Error}))
      {
        write flat/40/simpflat/201 = ExceptNotAnError@{Error};
        write flat/40/simpflat/202 = div# flat/39/simpflat/200 nn/conv/71;
      }
      else
      {
        write flat/40/simpflat/201 = flat/39/simpflat/199;
        write flat/40/simpflat/202 = 0.0@{Double};
      }
      read flat/40/simpflat/203 = flat/40/simpflat/201 [Error];
      read flat/40/simpflat/204 = flat/40/simpflat/202 [Double];
      init flat/41/simpflat/205@{Error} = ExceptNotAnError@{Error};
      init flat/41/simpflat/206@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/40/simpflat/203 (ExceptNotAnError@{Error}))
      {
        write flat/41/simpflat/205 = ExceptNotAnError@{Error};
        write flat/41/simpflat/206 = add#@{Double} a/conv/64/aval/5/simpflat/191 flat/40/simpflat/204;
      }
      else
      {
        write flat/41/simpflat/205 = flat/40/simpflat/203;
        write flat/41/simpflat/206 = 0.0@{Double};
      }
      read flat/41/simpflat/207 = flat/41/simpflat/205 [Error];
      read flat/41/simpflat/208 = flat/41/simpflat/206 [Double];
      init flat/42/simpflat/209@{Error} = ExceptNotAnError@{Error};
      init flat/42/simpflat/210@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/39/simpflat/199 (ExceptNotAnError@{Error}))
      {
        init flat/57/simpflat/211@{Error} = ExceptNotAnError@{Error};
        init flat/57/simpflat/212@{Double} = 0.0@{Double};
        if (eq#@{Error} conv/63/aval/6/simpflat/179 (ExceptNotAnError@{Error}))
        {
          init flat/63/simpflat/213@{Error} = ExceptNotAnError@{Error};
          init flat/63/simpflat/214@{Double} = 0.0@{Double};
          if (eq#@{Error} flat/41/simpflat/207 (ExceptNotAnError@{Error}))
          {
            write flat/63/simpflat/213 = ExceptNotAnError@{Error};
            write flat/63/simpflat/214 = sub#@{Double} conv/63/aval/6/simpflat/180 flat/41/simpflat/208;
          }
          else
          {
            write flat/63/simpflat/213 = flat/41/simpflat/207;
            write flat/63/simpflat/214 = 0.0@{Double};
          }
          read flat/63/simpflat/215 = flat/63/simpflat/213 [Error];
          read flat/63/simpflat/216 = flat/63/simpflat/214 [Double];
          write flat/57/simpflat/211 = flat/63/simpflat/215;
          write flat/57/simpflat/212 = flat/63/simpflat/216;
        }
        else
        {
          write flat/57/simpflat/211 = conv/63/aval/6/simpflat/179;
          write flat/57/simpflat/212 = 0.0@{Double};
        }
        read flat/57/simpflat/217 = flat/57/simpflat/211 [Error];
        read flat/57/simpflat/218 = flat/57/simpflat/212 [Double];
        init flat/58/simpflat/219@{Error} = ExceptNotAnError@{Error};
        init flat/58/simpflat/220@{Double} = 0.0@{Double};
        if (eq#@{Error} flat/57/simpflat/217 (ExceptNotAnError@{Error}))
        {
          write flat/58/simpflat/219 = ExceptNotAnError@{Error};
          write flat/58/simpflat/220 = mul#@{Double} flat/39/simpflat/200 flat/57/simpflat/218;
        }
        else
        {
          write flat/58/simpflat/219 = flat/57/simpflat/217;
          write flat/58/simpflat/220 = 0.0@{Double};
        }
        read flat/58/simpflat/221 = flat/58/simpflat/219 [Error];
        read flat/58/simpflat/222 = flat/58/simpflat/220 [Double];
        write flat/42/simpflat/209 = flat/58/simpflat/221;
        write flat/42/simpflat/210 = flat/58/simpflat/222;
      }
      else
      {
        write flat/42/simpflat/209 = flat/39/simpflat/199;
        write flat/42/simpflat/210 = 0.0@{Double};
      }
      read flat/42/simpflat/223 = flat/42/simpflat/209 [Error];
      read flat/42/simpflat/224 = flat/42/simpflat/210 [Double];
      init flat/43/simpflat/225@{Error} = ExceptNotAnError@{Error};
      init flat/43/simpflat/226@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/42/simpflat/223 (ExceptNotAnError@{Error}))
      {
        write flat/43/simpflat/225 = ExceptNotAnError@{Error};
        write flat/43/simpflat/226 = add#@{Double} a/conv/64/aval/5/simpflat/192 flat/42/simpflat/224;
      }
      else
      {
        write flat/43/simpflat/225 = flat/42/simpflat/223;
        write flat/43/simpflat/226 = 0.0@{Double};
      }
      read flat/43/simpflat/227 = flat/43/simpflat/225 [Error];
      read flat/43/simpflat/228 = flat/43/simpflat/226 [Double];
      init flat/44/simpflat/229@{Error} = ExceptNotAnError@{Error};
      init flat/44/simpflat/230@{Double} = 0.0@{Double};
      init flat/44/simpflat/231@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/41/simpflat/207 (ExceptNotAnError@{Error}))
      {
        write flat/44/simpflat/229 = ExceptNotAnError@{Error};
        write flat/44/simpflat/230 = add#@{Double} a/conv/64/aval/5/simpflat/190 (1.0@{Double});
        write flat/44/simpflat/231 = flat/41/simpflat/208;
      }
      else
      {
        write flat/44/simpflat/229 = flat/41/simpflat/207;
        write flat/44/simpflat/230 = 0.0@{Double};
        write flat/44/simpflat/231 = 0.0@{Double};
      }
      read flat/44/simpflat/232 = flat/44/simpflat/229 [Error];
      read flat/44/simpflat/233 = flat/44/simpflat/230 [Double];
      read flat/44/simpflat/234 = flat/44/simpflat/231 [Double];
      init flat/45/simpflat/235@{Error} = ExceptNotAnError@{Error};
      init flat/45/simpflat/236@{Double} = 0.0@{Double};
      init flat/45/simpflat/237@{Double} = 0.0@{Double};
      init flat/45/simpflat/238@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/44/simpflat/232 (ExceptNotAnError@{Error}))
      {
        init flat/48/simpflat/239@{Error} = ExceptNotAnError@{Error};
        init flat/48/simpflat/240@{Double} = 0.0@{Double};
        init flat/48/simpflat/241@{Double} = 0.0@{Double};
        init flat/48/simpflat/242@{Double} = 0.0@{Double};
        if (eq#@{Error} flat/43/simpflat/227 (ExceptNotAnError@{Error}))
        {
          write flat/48/simpflat/239 = ExceptNotAnError@{Error};
          write flat/48/simpflat/240 = flat/44/simpflat/233;
          write flat/48/simpflat/241 = flat/44/simpflat/234;
          write flat/48/simpflat/242 = flat/43/simpflat/228;
        }
        else
        {
          write flat/48/simpflat/239 = flat/43/simpflat/227;
          write flat/48/simpflat/240 = 0.0@{Double};
          write flat/48/simpflat/241 = 0.0@{Double};
          write flat/48/simpflat/242 = 0.0@{Double};
        }
        read flat/48/simpflat/243 = flat/48/simpflat/239 [Error];
        read flat/48/simpflat/244 = flat/48/simpflat/240 [Double];
        read flat/48/simpflat/245 = flat/48/simpflat/241 [Double];
        read flat/48/simpflat/246 = flat/48/simpflat/242 [Double];
        write flat/45/simpflat/235 = flat/48/simpflat/243;
        write flat/45/simpflat/236 = flat/48/simpflat/244;
        write flat/45/simpflat/237 = flat/48/simpflat/245;
        write flat/45/simpflat/238 = flat/48/simpflat/246;
      }
      else
      {
        write flat/45/simpflat/235 = flat/44/simpflat/232;
        write flat/45/simpflat/236 = 0.0@{Double};
        write flat/45/simpflat/237 = 0.0@{Double};
        write flat/45/simpflat/238 = 0.0@{Double};
      }
      read flat/45/simpflat/247 = flat/45/simpflat/235 [Error];
      read flat/45/simpflat/248 = flat/45/simpflat/236 [Double];
      read flat/45/simpflat/249 = flat/45/simpflat/237 [Double];
      read flat/45/simpflat/250 = flat/45/simpflat/238 [Double];
      write flat/36/simpflat/193 = flat/45/simpflat/247;
      write flat/36/simpflat/194 = flat/45/simpflat/248;
      write flat/36/simpflat/195 = flat/45/simpflat/249;
      write flat/36/simpflat/196 = flat/45/simpflat/250;
    }
    else
    {
      write flat/36/simpflat/193 = a/conv/64/aval/5/simpflat/189;
      write flat/36/simpflat/194 = 0.0@{Double};
      write flat/36/simpflat/195 = 0.0@{Double};
      write flat/36/simpflat/196 = 0.0@{Double};
    }
    read flat/36/simpflat/251 = flat/36/simpflat/193 [Error];
    read flat/36/simpflat/252 = flat/36/simpflat/194 [Double];
    read flat/36/simpflat/253 = flat/36/simpflat/195 [Double];
    read flat/36/simpflat/254 = flat/36/simpflat/196 [Double];
    write acc/a/conv/64/simpflat/74 = flat/36/simpflat/251;
    write acc/a/conv/64/simpflat/75 = flat/36/simpflat/252;
    write acc/a/conv/64/simpflat/76 = flat/36/simpflat/253;
    write acc/a/conv/64/simpflat/77 = flat/36/simpflat/254;
  }
}
save_resumable@{Error} acc/a/conv/64/simpflat/74;
save_resumable@{Double} acc/a/conv/64/simpflat/75;
save_resumable@{Double} acc/a/conv/64/simpflat/76;
save_resumable@{Double} acc/a/conv/64/simpflat/77;
save_resumable@{Error} acc/conv/63/simpflat/64;
save_resumable@{Double} acc/conv/63/simpflat/65;
save_resumable@{Error} acc/conv/59/simpflat/56;
save_resumable@{Int} acc/conv/59/simpflat/57;
save_resumable@{Error} acc/conv/58/simpflat/50;
save_resumable@{Int} acc/conv/58/simpflat/51;
save_resumable@{Error} acc/s/reify/6/conv/13/simpflat/47;
save_resumable@{Double} acc/s/reify/6/conv/13/simpflat/48;
save_resumable@{Double} acc/s/reify/6/conv/13/simpflat/49;
save_resumable@{Error} acc/conv/12/simpflat/39;
save_resumable@{Double} acc/conv/12/simpflat/40;
save_resumable@{Error} acc/conv/8/simpflat/33;
save_resumable@{Double} acc/conv/8/simpflat/34;
read a/conv/64/simpflat/255 = acc/a/conv/64/simpflat/74 [Error];
read a/conv/64/simpflat/256 = acc/a/conv/64/simpflat/75 [Double];
read a/conv/64/simpflat/258 = acc/a/conv/64/simpflat/77 [Double];
read s/reify/6/conv/13/simpflat/259 = acc/s/reify/6/conv/13/simpflat/47 [Error];
read s/reify/6/conv/13/simpflat/260 = acc/s/reify/6/conv/13/simpflat/48 [Double];
init flat/89/simpflat/262@{Error} = ExceptNotAnError@{Error};
init flat/89/simpflat/263@{Double} = 0.0@{Double};
if (eq#@{Error} s/reify/6/conv/13/simpflat/259 (ExceptNotAnError@{Error}))
{
  write flat/89/simpflat/262 = ExceptNotAnError@{Error};
  write flat/89/simpflat/263 = s/reify/6/conv/13/simpflat/260;
}
else
{
  write flat/89/simpflat/262 = s/reify/6/conv/13/simpflat/259;
  write flat/89/simpflat/263 = 0.0@{Double};
}
read flat/89/simpflat/264 = flat/89/simpflat/262 [Error];
read flat/89/simpflat/265 = flat/89/simpflat/263 [Double];
init flat/90/simpflat/266@{Error} = ExceptNotAnError@{Error};
init flat/90/simpflat/267@{Double} = 0.0@{Double};
if (eq#@{Error} flat/89/simpflat/264 (ExceptNotAnError@{Error}))
{
  init flat/93/simpflat/268@{Error} = ExceptNotAnError@{Error};
  init flat/93/simpflat/269@{Double} = 0.0@{Double};
  if (eq#@{Error} a/conv/64/simpflat/255 (ExceptNotAnError@{Error}))
  {
    let conv/119 = sub#@{Double} a/conv/64/simpflat/256 (1.0@{Double});
    let simpflat/749 = div# a/conv/64/simpflat/258 conv/119;
    write flat/93/simpflat/268 = ExceptNotAnError@{Error};
    write flat/93/simpflat/269 = simpflat/749;
  }
  else
  {
    write flat/93/simpflat/268 = a/conv/64/simpflat/255;
    write flat/93/simpflat/269 = 0.0@{Double};
  }
  read flat/93/simpflat/270 = flat/93/simpflat/268 [Error];
  read flat/93/simpflat/271 = flat/93/simpflat/269 [Double];
  init flat/94/simpflat/272@{Error} = ExceptNotAnError@{Error};
  init flat/94/simpflat/273@{Double} = 0.0@{Double};
  if (eq#@{Error} flat/93/simpflat/270 (ExceptNotAnError@{Error}))
  {
    write flat/94/simpflat/272 = ExceptNotAnError@{Error};
    write flat/94/simpflat/273 = sqrt# flat/93/simpflat/271;
  }
  else
  {
    write flat/94/simpflat/272 = flat/93/simpflat/270;
    write flat/94/simpflat/273 = 0.0@{Double};
  }
  read flat/94/simpflat/274 = flat/94/simpflat/272 [Error];
  read flat/94/simpflat/275 = flat/94/simpflat/273 [Double];
  init flat/95/simpflat/276@{Error} = ExceptNotAnError@{Error};
  init flat/95/simpflat/277@{Double} = 0.0@{Double};
  if (eq#@{Error} flat/94/simpflat/274 (ExceptNotAnError@{Error}))
  {
    write flat/95/simpflat/276 = ExceptNotAnError@{Error};
    write flat/95/simpflat/277 = mul#@{Double} flat/89/simpflat/265 flat/94/simpflat/275;
  }
  else
  {
    write flat/95/simpflat/276 = flat/94/simpflat/274;
    write flat/95/simpflat/277 = 0.0@{Double};
  }
  read flat/95/simpflat/278 = flat/95/simpflat/276 [Error];
  read flat/95/simpflat/279 = flat/95/simpflat/277 [Double];
  write flat/90/simpflat/266 = flat/95/simpflat/278;
  write flat/90/simpflat/267 = flat/95/simpflat/279;
}
else
{
  write flat/90/simpflat/266 = flat/89/simpflat/264;
  write flat/90/simpflat/267 = 0.0@{Double};
}
read flat/90/simpflat/280 = flat/90/simpflat/266 [Error];
read flat/90/simpflat/281 = flat/90/simpflat/267 [Double];
output@{(Sum Error Double)} repl (flat/90/simpflat/280@{Error}, flat/90/simpflat/281@{Double});

- C:
#line 1 "state and input definition #0 - repl"

typedef struct {
    itime_t          convzs3;
    iint_t           new_count;
    ierror_t         *new_convzs0zssimpflatzs282;
    istring_t        *new_convzs0zssimpflatzs283;
    iint_t           *new_convzs0zssimpflatzs284;
    itime_t          *new_convzs0zssimpflatzs285;
} input_repl_t;

typedef struct {
    /* runtime */
    anemone_mempool_t *mempool;
    iint_t           max_map_size;

    /* inputs */
    input_repl_t     input;

  /* compute for (0,0) */
    /* outputs */
    ierror_t         replzsixzs0;
    idouble_t        replzsixzs1;

    /* resumables: values */
    idouble_t        res_0_0_acczsconvzs8zssimpflatzs34;
    ierror_t         res_0_0_acczsconvzs8zssimpflatzs33;
    ierror_t         res_0_0_acczsconvzs12zssimpflatzs39;
    idouble_t        res_0_0_acczsconvzs12zssimpflatzs40;
    idouble_t        res_0_0_acczsazsconvzs64zssimpflatzs76;
    idouble_t        res_0_0_acczsazsconvzs64zssimpflatzs77;
    ierror_t         res_0_0_acczsazsconvzs64zssimpflatzs74;
    idouble_t        res_0_0_acczsazsconvzs64zssimpflatzs75;
    ierror_t         res_0_0_acczsszsreifyzs6zsconvzs13zssimpflatzs47;
    idouble_t        res_0_0_acczsszsreifyzs6zsconvzs13zssimpflatzs49;
    idouble_t        res_0_0_acczsszsreifyzs6zsconvzs13zssimpflatzs48;
    ierror_t         res_0_0_acczsconvzs58zssimpflatzs50;
    iint_t           res_0_0_acczsconvzs58zssimpflatzs51;
    ierror_t         res_0_0_acczsconvzs59zssimpflatzs56;
    iint_t           res_0_0_acczsconvzs59zssimpflatzs57;
    ierror_t         res_0_0_acczsconvzs63zssimpflatzs64;
    idouble_t        res_0_0_acczsconvzs63zssimpflatzs65;

    /* resumables: has flags */
    ibool_t          has_flags_start_0_0;
    ibool_t          has_0_0_acczsconvzs8zssimpflatzs34;
    ibool_t          has_0_0_acczsconvzs8zssimpflatzs33;
    ibool_t          has_0_0_acczsconvzs12zssimpflatzs39;
    ibool_t          has_0_0_acczsconvzs12zssimpflatzs40;
    ibool_t          has_0_0_acczsazsconvzs64zssimpflatzs76;
    ibool_t          has_0_0_acczsazsconvzs64zssimpflatzs77;
    ibool_t          has_0_0_acczsazsconvzs64zssimpflatzs74;
    ibool_t          has_0_0_acczsazsconvzs64zssimpflatzs75;
    ibool_t          has_0_0_acczsszsreifyzs6zsconvzs13zssimpflatzs47;
    ibool_t          has_0_0_acczsszsreifyzs6zsconvzs13zssimpflatzs49;
    ibool_t          has_0_0_acczsszsreifyzs6zsconvzs13zssimpflatzs48;
    ibool_t          has_0_0_acczsconvzs58zssimpflatzs50;
    ibool_t          has_0_0_acczsconvzs58zssimpflatzs51;
    ibool_t          has_0_0_acczsconvzs59zssimpflatzs56;
    ibool_t          has_0_0_acczsconvzs59zssimpflatzs57;
    ibool_t          has_0_0_acczsconvzs63zssimpflatzs64;
    ibool_t          has_0_0_acczsconvzs63zssimpflatzs65;
    ibool_t          has_flags_end_0_0;


} iattribute_0_t;

iint_t size_of_state_iattribute_0 ()
{
    return sizeof (iattribute_0_t);
}

#line 1 "compute function #0 - repl icompute_attribute_0_compute_0"
void icompute_attribute_0_compute_0(iattribute_0_t *s)
{
    ierror_t         convzs12zsavalzs2zssimpflatzs96;
    idouble_t        convzs12zsavalzs2zssimpflatzs97;
    idouble_t        flatzs22zssimpflatzs130;
    idouble_t        acczsconvzs8zssimpflatzs34;
    ierror_t         acczsconvzs8zssimpflatzs33;
    iint_t           flatzs34zssimpflatzs160;
    idouble_t        flatzs35zssimpflatzs176;
    ierror_t         flatzs35zssimpflatzs177;
    ierror_t         flatzs35zssimpflatzs175;
    idouble_t        flatzs35zssimpflatzs178;
    ierror_t         flatzs20zssimpflatzs119;
    idouble_t        flatzs20zssimpflatzs118;
    ierror_t         flatzs20zssimpflatzs117;
    ierror_t         flatzs31zssimpflatzs149;
    idouble_t        flatzs95zssimpflatzs279;
    ierror_t         flatzs95zssimpflatzs278;
    ierror_t         flatzs95zssimpflatzs276;
    idouble_t        flatzs95zssimpflatzs277;
    ierror_t         flatzs93zssimpflatzs270;
    idouble_t        flatzs93zssimpflatzs271;
    ierror_t         flatzs94zssimpflatzs274;
    idouble_t        flatzs94zssimpflatzs273;
    ierror_t         flatzs94zssimpflatzs272;
    idouble_t        flatzs94zssimpflatzs275;
    idouble_t        flatzs93zssimpflatzs269;
    ierror_t         flatzs93zssimpflatzs268;
    ierror_t         flatzs90zssimpflatzs266;
    idouble_t        flatzs90zssimpflatzs267;
    ierror_t         flatzs0zssimpflatzs78;
    iint_t           flatzs0zssimpflatzs79;
    ierror_t         flatzs2zssimpflatzs92;
    idouble_t        flatzs2zssimpflatzs93;
    ierror_t         flatzs2zssimpflatzs94;
    idouble_t        flatzs2zssimpflatzs95;
    ierror_t         flatzs32zssimpflatzs155;
    ibool_t          flatzs32zssimpflatzs156;
    ibool_t          flatzs32zssimpflatzs154;
    ierror_t         flatzs32zssimpflatzs153;
    istring_t        flatzs31zssimpflatzs150;
    ierror_t         flatzs31zssimpflatzs151;
    istring_t        flatzs31zssimpflatzs152;
    ierror_t         flatzs34zssimpflatzs159;
    iint_t           flatzs34zssimpflatzs158;
    ierror_t         flatzs34zssimpflatzs157;
    iint_t           flatzs0zssimpflatzs81;
    ierror_t         flatzs0zssimpflatzs80;
    idouble_t        flatzs1zssimpflatzs85;
    ierror_t         flatzs1zssimpflatzs84;
    idouble_t        flatzs1zssimpflatzs83;
    ierror_t         flatzs1zssimpflatzs82;
    ierror_t         convzs8zsavalzs0zssimpflatzs86;
    idouble_t        convzs8zsavalzs0zssimpflatzs87;
    ierror_t         acczsconvzs12zssimpflatzs39;
    idouble_t        acczsconvzs12zssimpflatzs40;
    idouble_t        acczsazsconvzs64zssimpflatzs76;
    idouble_t        acczsazsconvzs64zssimpflatzs77;
    ierror_t         acczsazsconvzs64zssimpflatzs74;
    idouble_t        acczsazsconvzs64zssimpflatzs75;
    ierror_t         flatzs21zssimpflatzs121;
    idouble_t        flatzs21zssimpflatzs122;
    idouble_t        flatzs21zssimpflatzs124;
    ierror_t         flatzs21zssimpflatzs123;
    idouble_t        flatzs20zssimpflatzs120;
    ierror_t         flatzs22zssimpflatzs128;
    idouble_t        flatzs22zssimpflatzs129;
    ierror_t         flatzs22zssimpflatzs125;
    idouble_t        flatzs22zssimpflatzs126;
    idouble_t        flatzs22zssimpflatzs127;
    idouble_t        flatzs90zssimpflatzs281;
    ierror_t         flatzs90zssimpflatzs280;
    idouble_t        flatzs9zssimpflatzs109;
    ierror_t         flatzs9zssimpflatzs107;
    idouble_t        flatzs9zssimpflatzs108;
    idouble_t        flatzs36zssimpflatzs196;
    idouble_t        flatzs36zssimpflatzs194;
    idouble_t        flatzs36zssimpflatzs195;
    ierror_t         flatzs36zssimpflatzs193;
    ierror_t         flatzs39zssimpflatzs197;
    idouble_t        flatzs39zssimpflatzs198;
    ierror_t         flatzs39zssimpflatzs199;
    idouble_t        flatzs36zssimpflatzs254;
    idouble_t        flatzs36zssimpflatzs253;
    idouble_t        flatzs36zssimpflatzs252;
    ierror_t         flatzs36zssimpflatzs251;
    idouble_t        flatzs12zssimpflatzs144;
    idouble_t        flatzs12zssimpflatzs145;
    ierror_t         flatzs12zssimpflatzs143;
    idouble_t        flatzs13zssimpflatzs141;
    ierror_t         flatzs13zssimpflatzs140;
    idouble_t        flatzs13zssimpflatzs142;
    ierror_t         flatzs13zssimpflatzs137;
    idouble_t        flatzs13zssimpflatzs138;
    idouble_t        flatzs13zssimpflatzs139;
    ierror_t         flatzs12zssimpflatzs134;
    idouble_t        flatzs12zssimpflatzs136;
    idouble_t        flatzs12zssimpflatzs135;
    ierror_t         flatzs16zssimpflatzs131;
    idouble_t        flatzs16zssimpflatzs133;
    idouble_t        flatzs16zssimpflatzs132;
    idouble_t        flatzs39zssimpflatzs200;
    idouble_t        flatzs16zssimpflatzs111;
    idouble_t        flatzs16zssimpflatzs112;
    ierror_t         flatzs16zssimpflatzs110;
    ierror_t         flatzs19zssimpflatzs113;
    idouble_t        flatzs19zssimpflatzs114;
    ierror_t         flatzs19zssimpflatzs115;
    idouble_t        flatzs19zssimpflatzs116;
    ierror_t         flatzs9zssimpflatzs146;
    idouble_t        flatzs9zssimpflatzs147;
    idouble_t        flatzs9zssimpflatzs148;
    ierror_t         flatzs40zssimpflatzs203;
    idouble_t        flatzs40zssimpflatzs202;
    idouble_t        flatzs40zssimpflatzs204;
    ierror_t         flatzs40zssimpflatzs201;
    ierror_t         flatzs42zssimpflatzs209;
    idouble_t        flatzs41zssimpflatzs206;
    ierror_t         flatzs41zssimpflatzs207;
    ierror_t         flatzs41zssimpflatzs205;
    idouble_t        flatzs41zssimpflatzs208;
    idouble_t        flatzs42zssimpflatzs210;
    ierror_t         acczsszsreifyzs6zsconvzs13zssimpflatzs47;
    idouble_t        acczsszsreifyzs6zsconvzs13zssimpflatzs49;
    idouble_t        acczsszsreifyzs6zsconvzs13zssimpflatzs48;
    ierror_t         convzs63zsavalzs6zssimpflatzs179;
    idouble_t        flatzs42zssimpflatzs224;
    ierror_t         flatzs42zssimpflatzs223;
    ierror_t         flatzs44zssimpflatzs229;
    ierror_t         flatzs43zssimpflatzs225;
    ierror_t         flatzs43zssimpflatzs227;
    idouble_t        flatzs43zssimpflatzs226;
    idouble_t        flatzs43zssimpflatzs228;
    idouble_t        flatzs45zssimpflatzs238;
    ierror_t         flatzs45zssimpflatzs235;
    idouble_t        flatzs45zssimpflatzs236;
    idouble_t        flatzs45zssimpflatzs237;
    ierror_t         flatzs44zssimpflatzs232;
    idouble_t        flatzs44zssimpflatzs233;
    idouble_t        flatzs44zssimpflatzs230;
    idouble_t        flatzs44zssimpflatzs231;
    idouble_t        flatzs44zssimpflatzs234;
    ierror_t         flatzs48zssimpflatzs239;
    ierror_t         flatzs57zssimpflatzs217;
    idouble_t        flatzs57zssimpflatzs212;
    ierror_t         flatzs57zssimpflatzs211;
    idouble_t        flatzs57zssimpflatzs218;
    ierror_t         flatzs58zssimpflatzs219;
    ierror_t         acczsconvzs58zssimpflatzs50;
    iint_t           acczsconvzs58zssimpflatzs51;
    ierror_t         acczsconvzs59zssimpflatzs56;
    iint_t           acczsconvzs59zssimpflatzs57;
    idouble_t        azsconvzs64zssimpflatzs258;
    idouble_t        azsconvzs64zssimpflatzs256;
    ierror_t         azsconvzs64zssimpflatzs255;
    idouble_t        flatzs48zssimpflatzs244;
    idouble_t        flatzs48zssimpflatzs246;
    idouble_t        flatzs48zssimpflatzs240;
    ierror_t         flatzs48zssimpflatzs243;
    idouble_t        flatzs48zssimpflatzs242;
    idouble_t        flatzs48zssimpflatzs245;
    idouble_t        flatzs48zssimpflatzs241;
    idouble_t        flatzs45zssimpflatzs248;
    idouble_t        flatzs45zssimpflatzs249;
    ierror_t         flatzs45zssimpflatzs247;
    idouble_t        flatzs58zssimpflatzs220;
    ierror_t         flatzs58zssimpflatzs221;
    idouble_t        flatzs58zssimpflatzs222;
    idouble_t        flatzs45zssimpflatzs250;
    ierror_t         flatzs63zssimpflatzs213;
    ierror_t         flatzs63zssimpflatzs215;
    idouble_t        flatzs63zssimpflatzs216;
    idouble_t        flatzs63zssimpflatzs214;
    idouble_t        azsconvzs64zsavalzs5zssimpflatzs192;
    idouble_t        azsconvzs64zsavalzs5zssimpflatzs191;
    idouble_t        azsconvzs64zsavalzs5zssimpflatzs190;
    ierror_t         acczsconvzs63zssimpflatzs64;
    idouble_t        acczsconvzs63zssimpflatzs65;
    idouble_t        szsreifyzs6zsconvzs13zssimpflatzs260;
    idouble_t        convzs63zsavalzs6zssimpflatzs180;
    ierror_t         azsconvzs64zsavalzs5zssimpflatzs189;
    ierror_t         szsreifyzs6zsconvzs13zssimpflatzs259;
    idouble_t        szsreifyzs6zsconvzs13zsavalzs1zssimpflatzs106;
    ierror_t         szsreifyzs6zsconvzs13zsavalzs1zssimpflatzs104;
    idouble_t        szsreifyzs6zsconvzs13zsavalzs1zssimpflatzs105;
    iint_t           convzs58zsavalzs3zssimpflatzs162;
    ierror_t         convzs58zsavalzs3zssimpflatzs161;
    ierror_t         convzs59zsavalzs4zssimpflatzs167;
    iint_t           convzs59zsavalzs4zssimpflatzs168;
    idouble_t        flatzs89zssimpflatzs263;
    ierror_t         flatzs89zssimpflatzs262;
    idouble_t        flatzs89zssimpflatzs265;
    ierror_t         flatzs89zssimpflatzs264;
    ibool_t          flatzs33;

    anemone_mempool_t *mempool                = s->mempool;
    itime_t          convzs3                  = s->input.convzs3;
    iint_t           convzs4                  = s->max_map_size;

    acczsconvzs8zssimpflatzs33                = ierror_not_an_error;                  /* init */
    acczsconvzs8zssimpflatzs34                = 0.0;                                  /* init */
    acczsconvzs12zssimpflatzs39               = ierror_not_an_error;                  /* init */
    acczsconvzs12zssimpflatzs40               = 0.0;                                  /* init */
    acczsszsreifyzs6zsconvzs13zssimpflatzs47  = ierror_fold1_no_value;                /* init */
    acczsszsreifyzs6zsconvzs13zssimpflatzs48  = 0.0;                                  /* init */
    acczsszsreifyzs6zsconvzs13zssimpflatzs49  = 0.0;                                  /* init */
    acczsconvzs58zssimpflatzs50               = ierror_not_an_error;                  /* init */
    acczsconvzs58zssimpflatzs51               = 0;                                    /* init */
    acczsconvzs59zssimpflatzs56               = ierror_not_an_error;                  /* init */
    acczsconvzs59zssimpflatzs57               = 0;                                    /* init */
    acczsconvzs63zssimpflatzs64               = ierror_not_an_error;                  /* init */
    acczsconvzs63zssimpflatzs65               = 0.0;                                  /* init */
    acczsazsconvzs64zssimpflatzs74            = ierror_not_an_error;                  /* init */
    acczsazsconvzs64zssimpflatzs75            = 0.0;                                  /* init */
    acczsazsconvzs64zssimpflatzs76            = 0.0;                                  /* init */
    acczsazsconvzs64zssimpflatzs77            = 0.0;                                  /* init */
    
    if (s->has_0_0_acczsazsconvzs64zssimpflatzs74) {
        acczsazsconvzs64zssimpflatzs74        = s->res_0_0_acczsazsconvzs64zssimpflatzs74; /* load */
    }
    
    if (s->has_0_0_acczsazsconvzs64zssimpflatzs75) {
        acczsazsconvzs64zssimpflatzs75        = s->res_0_0_acczsazsconvzs64zssimpflatzs75; /* load */
    }
    
    if (s->has_0_0_acczsazsconvzs64zssimpflatzs76) {
        acczsazsconvzs64zssimpflatzs76        = s->res_0_0_acczsazsconvzs64zssimpflatzs76; /* load */
    }
    
    if (s->has_0_0_acczsazsconvzs64zssimpflatzs77) {
        acczsazsconvzs64zssimpflatzs77        = s->res_0_0_acczsazsconvzs64zssimpflatzs77; /* load */
    }
    
    if (s->has_0_0_acczsconvzs63zssimpflatzs64) {
        acczsconvzs63zssimpflatzs64           = s->res_0_0_acczsconvzs63zssimpflatzs64; /* load */
    }
    
    if (s->has_0_0_acczsconvzs63zssimpflatzs65) {
        acczsconvzs63zssimpflatzs65           = s->res_0_0_acczsconvzs63zssimpflatzs65; /* load */
    }
    
    if (s->has_0_0_acczsconvzs59zssimpflatzs56) {
        acczsconvzs59zssimpflatzs56           = s->res_0_0_acczsconvzs59zssimpflatzs56; /* load */
    }
    
    if (s->has_0_0_acczsconvzs59zssimpflatzs57) {
        acczsconvzs59zssimpflatzs57           = s->res_0_0_acczsconvzs59zssimpflatzs57; /* load */
    }
    
    if (s->has_0_0_acczsconvzs58zssimpflatzs50) {
        acczsconvzs58zssimpflatzs50           = s->res_0_0_acczsconvzs58zssimpflatzs50; /* load */
    }
    
    if (s->has_0_0_acczsconvzs58zssimpflatzs51) {
        acczsconvzs58zssimpflatzs51           = s->res_0_0_acczsconvzs58zssimpflatzs51; /* load */
    }
    
    if (s->has_0_0_acczsszsreifyzs6zsconvzs13zssimpflatzs47) {
        acczsszsreifyzs6zsconvzs13zssimpflatzs47 = s->res_0_0_acczsszsreifyzs6zsconvzs13zssimpflatzs47; /* load */
    }
    
    if (s->has_0_0_acczsszsreifyzs6zsconvzs13zssimpflatzs48) {
        acczsszsreifyzs6zsconvzs13zssimpflatzs48 = s->res_0_0_acczsszsreifyzs6zsconvzs13zssimpflatzs48; /* load */
    }
    
    if (s->has_0_0_acczsszsreifyzs6zsconvzs13zssimpflatzs49) {
        acczsszsreifyzs6zsconvzs13zssimpflatzs49 = s->res_0_0_acczsszsreifyzs6zsconvzs13zssimpflatzs49; /* load */
    }
    
    if (s->has_0_0_acczsconvzs12zssimpflatzs39) {
        acczsconvzs12zssimpflatzs39           = s->res_0_0_acczsconvzs12zssimpflatzs39; /* load */
    }
    
    if (s->has_0_0_acczsconvzs12zssimpflatzs40) {
        acczsconvzs12zssimpflatzs40           = s->res_0_0_acczsconvzs12zssimpflatzs40; /* load */
    }
    
    if (s->has_0_0_acczsconvzs8zssimpflatzs33) {
        acczsconvzs8zssimpflatzs33            = s->res_0_0_acczsconvzs8zssimpflatzs33; /* load */
    }
    
    if (s->has_0_0_acczsconvzs8zssimpflatzs34) {
        acczsconvzs8zssimpflatzs34            = s->res_0_0_acczsconvzs8zssimpflatzs34; /* load */
    }
    
    const iint_t     new_count                = s->input.new_count;
    const ierror_t  *const new_convzs0zssimpflatzs282 = s->input.new_convzs0zssimpflatzs282;
    const istring_t *const new_convzs0zssimpflatzs283 = s->input.new_convzs0zssimpflatzs283;
    const iint_t    *const new_convzs0zssimpflatzs284 = s->input.new_convzs0zssimpflatzs284;
    const itime_t   *const new_convzs0zssimpflatzs285 = s->input.new_convzs0zssimpflatzs285;
    
    for (iint_t i = 0; i < new_count; i++) {
        ifactid_t        convzs1              = i;
        itime_t          convzs2              = new_convzs0zssimpflatzs285[i];
        ierror_t         convzs0zssimpflatzs282 = new_convzs0zssimpflatzs282[i];
        istring_t        convzs0zssimpflatzs283 = new_convzs0zssimpflatzs283[i];
        iint_t           convzs0zssimpflatzs284 = new_convzs0zssimpflatzs284[i];
        itime_t          convzs0zssimpflatzs285 = new_convzs0zssimpflatzs285[i];
        flatzs0zssimpflatzs78                 = ierror_not_an_error;                  /* init */
        flatzs0zssimpflatzs79                 = 0;                                    /* init */
        
        if (ierror_eq (convzs0zssimpflatzs282, ierror_not_an_error)) {
            flatzs0zssimpflatzs78             = ierror_not_an_error;                  /* write */
            flatzs0zssimpflatzs79             = convzs0zssimpflatzs284;               /* write */
        } else {
            flatzs0zssimpflatzs78             = convzs0zssimpflatzs282;               /* write */
            flatzs0zssimpflatzs79             = 0;                                    /* write */
        }
        
        flatzs0zssimpflatzs80                 = flatzs0zssimpflatzs78;                /* read */
        flatzs0zssimpflatzs81                 = flatzs0zssimpflatzs79;                /* read */
        flatzs1zssimpflatzs82                 = ierror_not_an_error;                  /* init */
        flatzs1zssimpflatzs83                 = 0.0;                                  /* init */
        
        if (ierror_eq (flatzs0zssimpflatzs80, ierror_not_an_error)) {
            flatzs1zssimpflatzs82             = ierror_not_an_error;                  /* write */
            flatzs1zssimpflatzs83             = iint_extend (flatzs0zssimpflatzs81);  /* write */
        } else {
            flatzs1zssimpflatzs82             = flatzs0zssimpflatzs80;                /* write */
            flatzs1zssimpflatzs83             = 0.0;                                  /* write */
        }
        
        flatzs1zssimpflatzs84                 = flatzs1zssimpflatzs82;                /* read */
        flatzs1zssimpflatzs85                 = flatzs1zssimpflatzs83;                /* read */
        acczsconvzs8zssimpflatzs33            = flatzs1zssimpflatzs84;                /* write */
        acczsconvzs8zssimpflatzs34            = flatzs1zssimpflatzs85;                /* write */
        convzs8zsavalzs0zssimpflatzs86        = acczsconvzs8zssimpflatzs33;           /* read */
        convzs8zsavalzs0zssimpflatzs87        = acczsconvzs8zssimpflatzs34;           /* read */
        flatzs2zssimpflatzs92                 = ierror_not_an_error;                  /* init */
        flatzs2zssimpflatzs93                 = 0.0;                                  /* init */
        
        if (ierror_eq (convzs8zsavalzs0zssimpflatzs86, ierror_not_an_error)) {
            flatzs2zssimpflatzs92             = ierror_not_an_error;                  /* write */
            flatzs2zssimpflatzs93             = convzs8zsavalzs0zssimpflatzs87;       /* write */
        } else {
            flatzs2zssimpflatzs92             = convzs8zsavalzs0zssimpflatzs86;       /* write */
            flatzs2zssimpflatzs93             = 0.0;                                  /* write */
        }
        
        flatzs2zssimpflatzs94                 = flatzs2zssimpflatzs92;                /* read */
        flatzs2zssimpflatzs95                 = flatzs2zssimpflatzs93;                /* read */
        acczsconvzs12zssimpflatzs39           = flatzs2zssimpflatzs94;                /* write */
        acczsconvzs12zssimpflatzs40           = flatzs2zssimpflatzs95;                /* write */
        convzs12zsavalzs2zssimpflatzs96       = acczsconvzs12zssimpflatzs39;          /* read */
        convzs12zsavalzs2zssimpflatzs97       = acczsconvzs12zssimpflatzs40;          /* read */
        szsreifyzs6zsconvzs13zsavalzs1zssimpflatzs104 = acczsszsreifyzs6zsconvzs13zssimpflatzs47; /* read */
        szsreifyzs6zsconvzs13zsavalzs1zssimpflatzs105 = acczsszsreifyzs6zsconvzs13zssimpflatzs48; /* read */
        szsreifyzs6zsconvzs13zsavalzs1zssimpflatzs106 = acczsszsreifyzs6zsconvzs13zssimpflatzs49; /* read */
        flatzs9zssimpflatzs107                = ierror_not_an_error;                  /* init */
        flatzs9zssimpflatzs108                = 0.0;                                  /* init */
        flatzs9zssimpflatzs109                = 0.0;                                  /* init */
        
        if (ierror_eq (szsreifyzs6zsconvzs13zsavalzs1zssimpflatzs104, ierror_not_an_error)) {
            flatzs16zssimpflatzs110           = ierror_not_an_error;                  /* init */
            flatzs16zssimpflatzs111           = 0.0;                                  /* init */
            flatzs16zssimpflatzs112           = 0.0;                                  /* init */
            
            if (ierror_eq (szsreifyzs6zsconvzs13zsavalzs1zssimpflatzs104, ierror_not_an_error)) {
                flatzs19zssimpflatzs113       = ierror_not_an_error;                  /* init */
                flatzs19zssimpflatzs114       = 0.0;                                  /* init */
                
                if (ierror_eq (convzs12zsavalzs2zssimpflatzs96, ierror_not_an_error)) {
                    flatzs19zssimpflatzs113   = ierror_not_an_error;                  /* write */
                    flatzs19zssimpflatzs114   = idouble_sub (convzs12zsavalzs2zssimpflatzs97, szsreifyzs6zsconvzs13zsavalzs1zssimpflatzs105); /* write */
                } else {
                    flatzs19zssimpflatzs113   = convzs12zsavalzs2zssimpflatzs96;      /* write */
                    flatzs19zssimpflatzs114   = 0.0;                                  /* write */
                }
                
                flatzs19zssimpflatzs115       = flatzs19zssimpflatzs113;              /* read */
                flatzs19zssimpflatzs116       = flatzs19zssimpflatzs114;              /* read */
                flatzs20zssimpflatzs117       = ierror_not_an_error;                  /* init */
                flatzs20zssimpflatzs118       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzs19zssimpflatzs115, ierror_not_an_error)) {
                    flatzs20zssimpflatzs117   = ierror_not_an_error;                  /* write */
                    idouble_t        simpflatzs354 = idouble_add (szsreifyzs6zsconvzs13zsavalzs1zssimpflatzs106, 1.0); /* let */
                    flatzs20zssimpflatzs118   = idouble_div (flatzs19zssimpflatzs116, simpflatzs354); /* write */
                } else {
                    flatzs20zssimpflatzs117   = flatzs19zssimpflatzs115;              /* write */
                    flatzs20zssimpflatzs118   = 0.0;                                  /* write */
                }
                
                flatzs20zssimpflatzs119       = flatzs20zssimpflatzs117;              /* read */
                flatzs20zssimpflatzs120       = flatzs20zssimpflatzs118;              /* read */
                flatzs21zssimpflatzs121       = ierror_not_an_error;                  /* init */
                flatzs21zssimpflatzs122       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzs20zssimpflatzs119, ierror_not_an_error)) {
                    flatzs21zssimpflatzs121   = ierror_not_an_error;                  /* write */
                    flatzs21zssimpflatzs122   = idouble_add (szsreifyzs6zsconvzs13zsavalzs1zssimpflatzs105, flatzs20zssimpflatzs120); /* write */
                } else {
                    flatzs21zssimpflatzs121   = flatzs20zssimpflatzs119;              /* write */
                    flatzs21zssimpflatzs122   = 0.0;                                  /* write */
                }
                
                flatzs21zssimpflatzs123       = flatzs21zssimpflatzs121;              /* read */
                flatzs21zssimpflatzs124       = flatzs21zssimpflatzs122;              /* read */
                flatzs22zssimpflatzs125       = ierror_not_an_error;                  /* init */
                flatzs22zssimpflatzs126       = 0.0;                                  /* init */
                flatzs22zssimpflatzs127       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzs21zssimpflatzs123, ierror_not_an_error)) {
                    flatzs22zssimpflatzs125   = ierror_not_an_error;                  /* write */
                    flatzs22zssimpflatzs126   = flatzs21zssimpflatzs124;              /* write */
                    flatzs22zssimpflatzs127   = idouble_add (szsreifyzs6zsconvzs13zsavalzs1zssimpflatzs106, 1.0); /* write */
                } else {
                    flatzs22zssimpflatzs125   = flatzs21zssimpflatzs123;              /* write */
                    flatzs22zssimpflatzs126   = 0.0;                                  /* write */
                    flatzs22zssimpflatzs127   = 0.0;                                  /* write */
                }
                
                flatzs22zssimpflatzs128       = flatzs22zssimpflatzs125;              /* read */
                flatzs22zssimpflatzs129       = flatzs22zssimpflatzs126;              /* read */
                flatzs22zssimpflatzs130       = flatzs22zssimpflatzs127;              /* read */
                flatzs16zssimpflatzs110       = flatzs22zssimpflatzs128;              /* write */
                flatzs16zssimpflatzs111       = flatzs22zssimpflatzs129;              /* write */
                flatzs16zssimpflatzs112       = flatzs22zssimpflatzs130;              /* write */
            } else {
                flatzs16zssimpflatzs110       = szsreifyzs6zsconvzs13zsavalzs1zssimpflatzs104; /* write */
                flatzs16zssimpflatzs111       = 0.0;                                  /* write */
                flatzs16zssimpflatzs112       = 0.0;                                  /* write */
            }
            
            flatzs16zssimpflatzs131           = flatzs16zssimpflatzs110;              /* read */
            flatzs16zssimpflatzs132           = flatzs16zssimpflatzs111;              /* read */
            flatzs16zssimpflatzs133           = flatzs16zssimpflatzs112;              /* read */
            flatzs9zssimpflatzs107            = flatzs16zssimpflatzs131;              /* write */
            flatzs9zssimpflatzs108            = flatzs16zssimpflatzs132;              /* write */
            flatzs9zssimpflatzs109            = flatzs16zssimpflatzs133;              /* write */
        } else {
            flatzs12zssimpflatzs134           = ierror_not_an_error;                  /* init */
            flatzs12zssimpflatzs135           = 0.0;                                  /* init */
            flatzs12zssimpflatzs136           = 0.0;                                  /* init */
            
            if (ierror_eq (ierror_fold1_no_value, szsreifyzs6zsconvzs13zsavalzs1zssimpflatzs104)) {
                flatzs13zssimpflatzs137       = ierror_not_an_error;                  /* init */
                flatzs13zssimpflatzs138       = 0.0;                                  /* init */
                flatzs13zssimpflatzs139       = 0.0;                                  /* init */
                
                if (ierror_eq (convzs12zsavalzs2zssimpflatzs96, ierror_not_an_error)) {
                    flatzs13zssimpflatzs137   = ierror_not_an_error;                  /* write */
                    flatzs13zssimpflatzs138   = convzs12zsavalzs2zssimpflatzs97;      /* write */
                    flatzs13zssimpflatzs139   = 1.0;                                  /* write */
                } else {
                    flatzs13zssimpflatzs137   = convzs12zsavalzs2zssimpflatzs96;      /* write */
                    flatzs13zssimpflatzs138   = 0.0;                                  /* write */
                    flatzs13zssimpflatzs139   = 0.0;                                  /* write */
                }
                
                flatzs13zssimpflatzs140       = flatzs13zssimpflatzs137;              /* read */
                flatzs13zssimpflatzs141       = flatzs13zssimpflatzs138;              /* read */
                flatzs13zssimpflatzs142       = flatzs13zssimpflatzs139;              /* read */
                flatzs12zssimpflatzs134       = flatzs13zssimpflatzs140;              /* write */
                flatzs12zssimpflatzs135       = flatzs13zssimpflatzs141;              /* write */
                flatzs12zssimpflatzs136       = flatzs13zssimpflatzs142;              /* write */
            } else {
                flatzs12zssimpflatzs134       = szsreifyzs6zsconvzs13zsavalzs1zssimpflatzs104; /* write */
                flatzs12zssimpflatzs135       = 0.0;                                  /* write */
                flatzs12zssimpflatzs136       = 0.0;                                  /* write */
            }
            
            flatzs12zssimpflatzs143           = flatzs12zssimpflatzs134;              /* read */
            flatzs12zssimpflatzs144           = flatzs12zssimpflatzs135;              /* read */
            flatzs12zssimpflatzs145           = flatzs12zssimpflatzs136;              /* read */
            flatzs9zssimpflatzs107            = flatzs12zssimpflatzs143;              /* write */
            flatzs9zssimpflatzs108            = flatzs12zssimpflatzs144;              /* write */
            flatzs9zssimpflatzs109            = flatzs12zssimpflatzs145;              /* write */
        }
        
        flatzs9zssimpflatzs146                = flatzs9zssimpflatzs107;               /* read */
        flatzs9zssimpflatzs147                = flatzs9zssimpflatzs108;               /* read */
        flatzs9zssimpflatzs148                = flatzs9zssimpflatzs109;               /* read */
        acczsszsreifyzs6zsconvzs13zssimpflatzs47 = flatzs9zssimpflatzs146;            /* write */
        acczsszsreifyzs6zsconvzs13zssimpflatzs48 = flatzs9zssimpflatzs147;            /* write */
        acczsszsreifyzs6zsconvzs13zssimpflatzs49 = flatzs9zssimpflatzs148;            /* write */
        flatzs31zssimpflatzs149               = ierror_not_an_error;                  /* init */
        flatzs31zssimpflatzs150               = "";                                   /* init */
        
        if (ierror_eq (convzs0zssimpflatzs282, ierror_not_an_error)) {
            flatzs31zssimpflatzs149           = ierror_not_an_error;                  /* write */
            flatzs31zssimpflatzs150           = convzs0zssimpflatzs283;               /* write */
        } else {
            flatzs31zssimpflatzs149           = convzs0zssimpflatzs282;               /* write */
            flatzs31zssimpflatzs150           = "";                                   /* write */
        }
        
        flatzs31zssimpflatzs151               = flatzs31zssimpflatzs149;              /* read */
        flatzs31zssimpflatzs152               = flatzs31zssimpflatzs150;              /* read */
        flatzs32zssimpflatzs153               = ierror_not_an_error;                  /* init */
        flatzs32zssimpflatzs154               = ifalse;                               /* init */
        
        if (ierror_eq (flatzs31zssimpflatzs151, ierror_not_an_error)) {
            flatzs32zssimpflatzs153           = ierror_not_an_error;                  /* write */
            flatzs32zssimpflatzs154           = istring_eq (flatzs31zssimpflatzs152, "torso"); /* write */
        } else {
            flatzs32zssimpflatzs153           = flatzs31zssimpflatzs151;              /* write */
            flatzs32zssimpflatzs154           = ifalse;                               /* write */
        }
        
        flatzs32zssimpflatzs155               = flatzs32zssimpflatzs153;              /* read */
        flatzs32zssimpflatzs156               = flatzs32zssimpflatzs154;              /* read */
        flatzs33                              = ifalse;                               /* init */
        
        if (ierror_eq (flatzs32zssimpflatzs155, ierror_not_an_error)) {
            flatzs33                          = flatzs32zssimpflatzs156;              /* write */
        } else {
            flatzs33                          = itrue;                                /* write */
        }
        
        flatzs33                              = flatzs33;                             /* read */
        
        if (flatzs33) {
            flatzs34zssimpflatzs157           = ierror_not_an_error;                  /* init */
            flatzs34zssimpflatzs158           = 0;                                    /* init */
            
            if (ierror_eq (convzs0zssimpflatzs282, ierror_not_an_error)) {
                flatzs34zssimpflatzs157       = ierror_not_an_error;                  /* write */
                flatzs34zssimpflatzs158       = convzs0zssimpflatzs284;               /* write */
            } else {
                flatzs34zssimpflatzs157       = convzs0zssimpflatzs282;               /* write */
                flatzs34zssimpflatzs158       = 0;                                    /* write */
            }
            
            flatzs34zssimpflatzs159           = flatzs34zssimpflatzs157;              /* read */
            flatzs34zssimpflatzs160           = flatzs34zssimpflatzs158;              /* read */
            acczsconvzs58zssimpflatzs50       = flatzs34zssimpflatzs159;              /* write */
            acczsconvzs58zssimpflatzs51       = flatzs34zssimpflatzs160;              /* write */
            convzs58zsavalzs3zssimpflatzs161  = acczsconvzs58zssimpflatzs50;          /* read */
            convzs58zsavalzs3zssimpflatzs162  = acczsconvzs58zssimpflatzs51;          /* read */
            acczsconvzs59zssimpflatzs56       = convzs58zsavalzs3zssimpflatzs161;     /* write */
            acczsconvzs59zssimpflatzs57       = convzs58zsavalzs3zssimpflatzs162;     /* write */
            convzs59zsavalzs4zssimpflatzs167  = acczsconvzs59zssimpflatzs56;          /* read */
            convzs59zsavalzs4zssimpflatzs168  = acczsconvzs59zssimpflatzs57;          /* read */
            flatzs35zssimpflatzs175           = ierror_not_an_error;                  /* init */
            flatzs35zssimpflatzs176           = 0.0;                                  /* init */
            
            if (ierror_eq (convzs59zsavalzs4zssimpflatzs167, ierror_not_an_error)) {
                flatzs35zssimpflatzs175       = ierror_not_an_error;                  /* write */
                flatzs35zssimpflatzs176       = iint_extend (convzs59zsavalzs4zssimpflatzs168); /* write */
            } else {
                flatzs35zssimpflatzs175       = convzs59zsavalzs4zssimpflatzs167;     /* write */
                flatzs35zssimpflatzs176       = 0.0;                                  /* write */
            }
            
            flatzs35zssimpflatzs177           = flatzs35zssimpflatzs175;              /* read */
            flatzs35zssimpflatzs178           = flatzs35zssimpflatzs176;              /* read */
            acczsconvzs63zssimpflatzs64       = flatzs35zssimpflatzs177;              /* write */
            acczsconvzs63zssimpflatzs65       = flatzs35zssimpflatzs178;              /* write */
            convzs63zsavalzs6zssimpflatzs179  = acczsconvzs63zssimpflatzs64;          /* read */
            convzs63zsavalzs6zssimpflatzs180  = acczsconvzs63zssimpflatzs65;          /* read */
            azsconvzs64zsavalzs5zssimpflatzs189 = acczsazsconvzs64zssimpflatzs74;     /* read */
            azsconvzs64zsavalzs5zssimpflatzs190 = acczsazsconvzs64zssimpflatzs75;     /* read */
            azsconvzs64zsavalzs5zssimpflatzs191 = acczsazsconvzs64zssimpflatzs76;     /* read */
            azsconvzs64zsavalzs5zssimpflatzs192 = acczsazsconvzs64zssimpflatzs77;     /* read */
            flatzs36zssimpflatzs193           = ierror_not_an_error;                  /* init */
            flatzs36zssimpflatzs194           = 0.0;                                  /* init */
            flatzs36zssimpflatzs195           = 0.0;                                  /* init */
            flatzs36zssimpflatzs196           = 0.0;                                  /* init */
            
            if (ierror_eq (azsconvzs64zsavalzs5zssimpflatzs189, ierror_not_an_error)) {
                idouble_t        nnzsconvzs71 = idouble_add (azsconvzs64zsavalzs5zssimpflatzs190, 1.0); /* let */
                flatzs39zssimpflatzs197       = ierror_not_an_error;                  /* init */
                flatzs39zssimpflatzs198       = 0.0;                                  /* init */
                
                if (ierror_eq (convzs63zsavalzs6zssimpflatzs179, ierror_not_an_error)) {
                    flatzs39zssimpflatzs197   = ierror_not_an_error;                  /* write */
                    flatzs39zssimpflatzs198   = idouble_sub (convzs63zsavalzs6zssimpflatzs180, azsconvzs64zsavalzs5zssimpflatzs191); /* write */
                } else {
                    flatzs39zssimpflatzs197   = convzs63zsavalzs6zssimpflatzs179;     /* write */
                    flatzs39zssimpflatzs198   = 0.0;                                  /* write */
                }
                
                flatzs39zssimpflatzs199       = flatzs39zssimpflatzs197;              /* read */
                flatzs39zssimpflatzs200       = flatzs39zssimpflatzs198;              /* read */
                flatzs40zssimpflatzs201       = ierror_not_an_error;                  /* init */
                flatzs40zssimpflatzs202       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzs39zssimpflatzs199, ierror_not_an_error)) {
                    flatzs40zssimpflatzs201   = ierror_not_an_error;                  /* write */
                    flatzs40zssimpflatzs202   = idouble_div (flatzs39zssimpflatzs200, nnzsconvzs71); /* write */
                } else {
                    flatzs40zssimpflatzs201   = flatzs39zssimpflatzs199;              /* write */
                    flatzs40zssimpflatzs202   = 0.0;                                  /* write */
                }
                
                flatzs40zssimpflatzs203       = flatzs40zssimpflatzs201;              /* read */
                flatzs40zssimpflatzs204       = flatzs40zssimpflatzs202;              /* read */
                flatzs41zssimpflatzs205       = ierror_not_an_error;                  /* init */
                flatzs41zssimpflatzs206       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzs40zssimpflatzs203, ierror_not_an_error)) {
                    flatzs41zssimpflatzs205   = ierror_not_an_error;                  /* write */
                    flatzs41zssimpflatzs206   = idouble_add (azsconvzs64zsavalzs5zssimpflatzs191, flatzs40zssimpflatzs204); /* write */
                } else {
                    flatzs41zssimpflatzs205   = flatzs40zssimpflatzs203;              /* write */
                    flatzs41zssimpflatzs206   = 0.0;                                  /* write */
                }
                
                flatzs41zssimpflatzs207       = flatzs41zssimpflatzs205;              /* read */
                flatzs41zssimpflatzs208       = flatzs41zssimpflatzs206;              /* read */
                flatzs42zssimpflatzs209       = ierror_not_an_error;                  /* init */
                flatzs42zssimpflatzs210       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzs39zssimpflatzs199, ierror_not_an_error)) {
                    flatzs57zssimpflatzs211   = ierror_not_an_error;                  /* init */
                    flatzs57zssimpflatzs212   = 0.0;                                  /* init */
                    
                    if (ierror_eq (convzs63zsavalzs6zssimpflatzs179, ierror_not_an_error)) {
                        flatzs63zssimpflatzs213 = ierror_not_an_error;                /* init */
                        flatzs63zssimpflatzs214 = 0.0;                                /* init */
                        
                        if (ierror_eq (flatzs41zssimpflatzs207, ierror_not_an_error)) {
                            flatzs63zssimpflatzs213 = ierror_not_an_error;            /* write */
                            flatzs63zssimpflatzs214 = idouble_sub (convzs63zsavalzs6zssimpflatzs180, flatzs41zssimpflatzs208); /* write */
                        } else {
                            flatzs63zssimpflatzs213 = flatzs41zssimpflatzs207;        /* write */
                            flatzs63zssimpflatzs214 = 0.0;                            /* write */
                        }
                        
                        flatzs63zssimpflatzs215 = flatzs63zssimpflatzs213;            /* read */
                        flatzs63zssimpflatzs216 = flatzs63zssimpflatzs214;            /* read */
                        flatzs57zssimpflatzs211 = flatzs63zssimpflatzs215;            /* write */
                        flatzs57zssimpflatzs212 = flatzs63zssimpflatzs216;            /* write */
                    } else {
                        flatzs57zssimpflatzs211 = convzs63zsavalzs6zssimpflatzs179;   /* write */
                        flatzs57zssimpflatzs212 = 0.0;                                /* write */
                    }
                    
                    flatzs57zssimpflatzs217   = flatzs57zssimpflatzs211;              /* read */
                    flatzs57zssimpflatzs218   = flatzs57zssimpflatzs212;              /* read */
                    flatzs58zssimpflatzs219   = ierror_not_an_error;                  /* init */
                    flatzs58zssimpflatzs220   = 0.0;                                  /* init */
                    
                    if (ierror_eq (flatzs57zssimpflatzs217, ierror_not_an_error)) {
                        flatzs58zssimpflatzs219 = ierror_not_an_error;                /* write */
                        flatzs58zssimpflatzs220 = idouble_mul (flatzs39zssimpflatzs200, flatzs57zssimpflatzs218); /* write */
                    } else {
                        flatzs58zssimpflatzs219 = flatzs57zssimpflatzs217;            /* write */
                        flatzs58zssimpflatzs220 = 0.0;                                /* write */
                    }
                    
                    flatzs58zssimpflatzs221   = flatzs58zssimpflatzs219;              /* read */
                    flatzs58zssimpflatzs222   = flatzs58zssimpflatzs220;              /* read */
                    flatzs42zssimpflatzs209   = flatzs58zssimpflatzs221;              /* write */
                    flatzs42zssimpflatzs210   = flatzs58zssimpflatzs222;              /* write */
                } else {
                    flatzs42zssimpflatzs209   = flatzs39zssimpflatzs199;              /* write */
                    flatzs42zssimpflatzs210   = 0.0;                                  /* write */
                }
                
                flatzs42zssimpflatzs223       = flatzs42zssimpflatzs209;              /* read */
                flatzs42zssimpflatzs224       = flatzs42zssimpflatzs210;              /* read */
                flatzs43zssimpflatzs225       = ierror_not_an_error;                  /* init */
                flatzs43zssimpflatzs226       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzs42zssimpflatzs223, ierror_not_an_error)) {
                    flatzs43zssimpflatzs225   = ierror_not_an_error;                  /* write */
                    flatzs43zssimpflatzs226   = idouble_add (azsconvzs64zsavalzs5zssimpflatzs192, flatzs42zssimpflatzs224); /* write */
                } else {
                    flatzs43zssimpflatzs225   = flatzs42zssimpflatzs223;              /* write */
                    flatzs43zssimpflatzs226   = 0.0;                                  /* write */
                }
                
                flatzs43zssimpflatzs227       = flatzs43zssimpflatzs225;              /* read */
                flatzs43zssimpflatzs228       = flatzs43zssimpflatzs226;              /* read */
                flatzs44zssimpflatzs229       = ierror_not_an_error;                  /* init */
                flatzs44zssimpflatzs230       = 0.0;                                  /* init */
                flatzs44zssimpflatzs231       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzs41zssimpflatzs207, ierror_not_an_error)) {
                    flatzs44zssimpflatzs229   = ierror_not_an_error;                  /* write */
                    flatzs44zssimpflatzs230   = idouble_add (azsconvzs64zsavalzs5zssimpflatzs190, 1.0); /* write */
                    flatzs44zssimpflatzs231   = flatzs41zssimpflatzs208;              /* write */
                } else {
                    flatzs44zssimpflatzs229   = flatzs41zssimpflatzs207;              /* write */
                    flatzs44zssimpflatzs230   = 0.0;                                  /* write */
                    flatzs44zssimpflatzs231   = 0.0;                                  /* write */
                }
                
                flatzs44zssimpflatzs232       = flatzs44zssimpflatzs229;              /* read */
                flatzs44zssimpflatzs233       = flatzs44zssimpflatzs230;              /* read */
                flatzs44zssimpflatzs234       = flatzs44zssimpflatzs231;              /* read */
                flatzs45zssimpflatzs235       = ierror_not_an_error;                  /* init */
                flatzs45zssimpflatzs236       = 0.0;                                  /* init */
                flatzs45zssimpflatzs237       = 0.0;                                  /* init */
                flatzs45zssimpflatzs238       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzs44zssimpflatzs232, ierror_not_an_error)) {
                    flatzs48zssimpflatzs239   = ierror_not_an_error;                  /* init */
                    flatzs48zssimpflatzs240   = 0.0;                                  /* init */
                    flatzs48zssimpflatzs241   = 0.0;                                  /* init */
                    flatzs48zssimpflatzs242   = 0.0;                                  /* init */
                    
                    if (ierror_eq (flatzs43zssimpflatzs227, ierror_not_an_error)) {
                        flatzs48zssimpflatzs239 = ierror_not_an_error;                /* write */
                        flatzs48zssimpflatzs240 = flatzs44zssimpflatzs233;            /* write */
                        flatzs48zssimpflatzs241 = flatzs44zssimpflatzs234;            /* write */
                        flatzs48zssimpflatzs242 = flatzs43zssimpflatzs228;            /* write */
                    } else {
                        flatzs48zssimpflatzs239 = flatzs43zssimpflatzs227;            /* write */
                        flatzs48zssimpflatzs240 = 0.0;                                /* write */
                        flatzs48zssimpflatzs241 = 0.0;                                /* write */
                        flatzs48zssimpflatzs242 = 0.0;                                /* write */
                    }
                    
                    flatzs48zssimpflatzs243   = flatzs48zssimpflatzs239;              /* read */
                    flatzs48zssimpflatzs244   = flatzs48zssimpflatzs240;              /* read */
                    flatzs48zssimpflatzs245   = flatzs48zssimpflatzs241;              /* read */
                    flatzs48zssimpflatzs246   = flatzs48zssimpflatzs242;              /* read */
                    flatzs45zssimpflatzs235   = flatzs48zssimpflatzs243;              /* write */
                    flatzs45zssimpflatzs236   = flatzs48zssimpflatzs244;              /* write */
                    flatzs45zssimpflatzs237   = flatzs48zssimpflatzs245;              /* write */
                    flatzs45zssimpflatzs238   = flatzs48zssimpflatzs246;              /* write */
                } else {
                    flatzs45zssimpflatzs235   = flatzs44zssimpflatzs232;              /* write */
                    flatzs45zssimpflatzs236   = 0.0;                                  /* write */
                    flatzs45zssimpflatzs237   = 0.0;                                  /* write */
                    flatzs45zssimpflatzs238   = 0.0;                                  /* write */
                }
                
                flatzs45zssimpflatzs247       = flatzs45zssimpflatzs235;              /* read */
                flatzs45zssimpflatzs248       = flatzs45zssimpflatzs236;              /* read */
                flatzs45zssimpflatzs249       = flatzs45zssimpflatzs237;              /* read */
                flatzs45zssimpflatzs250       = flatzs45zssimpflatzs238;              /* read */
                flatzs36zssimpflatzs193       = flatzs45zssimpflatzs247;              /* write */
                flatzs36zssimpflatzs194       = flatzs45zssimpflatzs248;              /* write */
                flatzs36zssimpflatzs195       = flatzs45zssimpflatzs249;              /* write */
                flatzs36zssimpflatzs196       = flatzs45zssimpflatzs250;              /* write */
            } else {
                flatzs36zssimpflatzs193       = azsconvzs64zsavalzs5zssimpflatzs189;  /* write */
                flatzs36zssimpflatzs194       = 0.0;                                  /* write */
                flatzs36zssimpflatzs195       = 0.0;                                  /* write */
                flatzs36zssimpflatzs196       = 0.0;                                  /* write */
            }
            
            flatzs36zssimpflatzs251           = flatzs36zssimpflatzs193;              /* read */
            flatzs36zssimpflatzs252           = flatzs36zssimpflatzs194;              /* read */
            flatzs36zssimpflatzs253           = flatzs36zssimpflatzs195;              /* read */
            flatzs36zssimpflatzs254           = flatzs36zssimpflatzs196;              /* read */
            acczsazsconvzs64zssimpflatzs74    = flatzs36zssimpflatzs251;              /* write */
            acczsazsconvzs64zssimpflatzs75    = flatzs36zssimpflatzs252;              /* write */
            acczsazsconvzs64zssimpflatzs76    = flatzs36zssimpflatzs253;              /* write */
            acczsazsconvzs64zssimpflatzs77    = flatzs36zssimpflatzs254;              /* write */
        }
        
    }
    
    s->has_0_0_acczsazsconvzs64zssimpflatzs74 = itrue;                                /* save */
    s->res_0_0_acczsazsconvzs64zssimpflatzs74 = acczsazsconvzs64zssimpflatzs74;       /* save */
    
    s->has_0_0_acczsazsconvzs64zssimpflatzs75 = itrue;                                /* save */
    s->res_0_0_acczsazsconvzs64zssimpflatzs75 = acczsazsconvzs64zssimpflatzs75;       /* save */
    
    s->has_0_0_acczsazsconvzs64zssimpflatzs76 = itrue;                                /* save */
    s->res_0_0_acczsazsconvzs64zssimpflatzs76 = acczsazsconvzs64zssimpflatzs76;       /* save */
    
    s->has_0_0_acczsazsconvzs64zssimpflatzs77 = itrue;                                /* save */
    s->res_0_0_acczsazsconvzs64zssimpflatzs77 = acczsazsconvzs64zssimpflatzs77;       /* save */
    
    s->has_0_0_acczsconvzs63zssimpflatzs64    = itrue;                                /* save */
    s->res_0_0_acczsconvzs63zssimpflatzs64    = acczsconvzs63zssimpflatzs64;          /* save */
    
    s->has_0_0_acczsconvzs63zssimpflatzs65    = itrue;                                /* save */
    s->res_0_0_acczsconvzs63zssimpflatzs65    = acczsconvzs63zssimpflatzs65;          /* save */
    
    s->has_0_0_acczsconvzs59zssimpflatzs56    = itrue;                                /* save */
    s->res_0_0_acczsconvzs59zssimpflatzs56    = acczsconvzs59zssimpflatzs56;          /* save */
    
    s->has_0_0_acczsconvzs59zssimpflatzs57    = itrue;                                /* save */
    s->res_0_0_acczsconvzs59zssimpflatzs57    = acczsconvzs59zssimpflatzs57;          /* save */
    
    s->has_0_0_acczsconvzs58zssimpflatzs50    = itrue;                                /* save */
    s->res_0_0_acczsconvzs58zssimpflatzs50    = acczsconvzs58zssimpflatzs50;          /* save */
    
    s->has_0_0_acczsconvzs58zssimpflatzs51    = itrue;                                /* save */
    s->res_0_0_acczsconvzs58zssimpflatzs51    = acczsconvzs58zssimpflatzs51;          /* save */
    
    s->has_0_0_acczsszsreifyzs6zsconvzs13zssimpflatzs47 = itrue;                      /* save */
    s->res_0_0_acczsszsreifyzs6zsconvzs13zssimpflatzs47 = acczsszsreifyzs6zsconvzs13zssimpflatzs47; /* save */
    
    s->has_0_0_acczsszsreifyzs6zsconvzs13zssimpflatzs48 = itrue;                      /* save */
    s->res_0_0_acczsszsreifyzs6zsconvzs13zssimpflatzs48 = acczsszsreifyzs6zsconvzs13zssimpflatzs48; /* save */
    
    s->has_0_0_acczsszsreifyzs6zsconvzs13zssimpflatzs49 = itrue;                      /* save */
    s->res_0_0_acczsszsreifyzs6zsconvzs13zssimpflatzs49 = acczsszsreifyzs6zsconvzs13zssimpflatzs49; /* save */
    
    s->has_0_0_acczsconvzs12zssimpflatzs39    = itrue;                                /* save */
    s->res_0_0_acczsconvzs12zssimpflatzs39    = acczsconvzs12zssimpflatzs39;          /* save */
    
    s->has_0_0_acczsconvzs12zssimpflatzs40    = itrue;                                /* save */
    s->res_0_0_acczsconvzs12zssimpflatzs40    = acczsconvzs12zssimpflatzs40;          /* save */
    
    s->has_0_0_acczsconvzs8zssimpflatzs33     = itrue;                                /* save */
    s->res_0_0_acczsconvzs8zssimpflatzs33     = acczsconvzs8zssimpflatzs33;           /* save */
    
    s->has_0_0_acczsconvzs8zssimpflatzs34     = itrue;                                /* save */
    s->res_0_0_acczsconvzs8zssimpflatzs34     = acczsconvzs8zssimpflatzs34;           /* save */
    
    azsconvzs64zssimpflatzs255                = acczsazsconvzs64zssimpflatzs74;       /* read */
    azsconvzs64zssimpflatzs256                = acczsazsconvzs64zssimpflatzs75;       /* read */
    azsconvzs64zssimpflatzs258                = acczsazsconvzs64zssimpflatzs77;       /* read */
    szsreifyzs6zsconvzs13zssimpflatzs259      = acczsszsreifyzs6zsconvzs13zssimpflatzs47; /* read */
    szsreifyzs6zsconvzs13zssimpflatzs260      = acczsszsreifyzs6zsconvzs13zssimpflatzs48; /* read */
    flatzs89zssimpflatzs262                   = ierror_not_an_error;                  /* init */
    flatzs89zssimpflatzs263                   = 0.0;                                  /* init */
    
    if (ierror_eq (szsreifyzs6zsconvzs13zssimpflatzs259, ierror_not_an_error)) {
        flatzs89zssimpflatzs262               = ierror_not_an_error;                  /* write */
        flatzs89zssimpflatzs263               = szsreifyzs6zsconvzs13zssimpflatzs260; /* write */
    } else {
        flatzs89zssimpflatzs262               = szsreifyzs6zsconvzs13zssimpflatzs259; /* write */
        flatzs89zssimpflatzs263               = 0.0;                                  /* write */
    }
    
    flatzs89zssimpflatzs264                   = flatzs89zssimpflatzs262;              /* read */
    flatzs89zssimpflatzs265                   = flatzs89zssimpflatzs263;              /* read */
    flatzs90zssimpflatzs266                   = ierror_not_an_error;                  /* init */
    flatzs90zssimpflatzs267                   = 0.0;                                  /* init */
    
    if (ierror_eq (flatzs89zssimpflatzs264, ierror_not_an_error)) {
        flatzs93zssimpflatzs268               = ierror_not_an_error;                  /* init */
        flatzs93zssimpflatzs269               = 0.0;                                  /* init */
        
        if (ierror_eq (azsconvzs64zssimpflatzs255, ierror_not_an_error)) {
            idouble_t        convzs119        = idouble_sub (azsconvzs64zssimpflatzs256, 1.0); /* let */
            idouble_t        simpflatzs749    = idouble_div (azsconvzs64zssimpflatzs258, convzs119); /* let */
            flatzs93zssimpflatzs268           = ierror_not_an_error;                  /* write */
            flatzs93zssimpflatzs269           = simpflatzs749;                        /* write */
        } else {
            flatzs93zssimpflatzs268           = azsconvzs64zssimpflatzs255;           /* write */
            flatzs93zssimpflatzs269           = 0.0;                                  /* write */
        }
        
        flatzs93zssimpflatzs270               = flatzs93zssimpflatzs268;              /* read */
        flatzs93zssimpflatzs271               = flatzs93zssimpflatzs269;              /* read */
        flatzs94zssimpflatzs272               = ierror_not_an_error;                  /* init */
        flatzs94zssimpflatzs273               = 0.0;                                  /* init */
        
        if (ierror_eq (flatzs93zssimpflatzs270, ierror_not_an_error)) {
            flatzs94zssimpflatzs272           = ierror_not_an_error;                  /* write */
            flatzs94zssimpflatzs273           = idouble_sqrt (flatzs93zssimpflatzs271); /* write */
        } else {
            flatzs94zssimpflatzs272           = flatzs93zssimpflatzs270;              /* write */
            flatzs94zssimpflatzs273           = 0.0;                                  /* write */
        }
        
        flatzs94zssimpflatzs274               = flatzs94zssimpflatzs272;              /* read */
        flatzs94zssimpflatzs275               = flatzs94zssimpflatzs273;              /* read */
        flatzs95zssimpflatzs276               = ierror_not_an_error;                  /* init */
        flatzs95zssimpflatzs277               = 0.0;                                  /* init */
        
        if (ierror_eq (flatzs94zssimpflatzs274, ierror_not_an_error)) {
            flatzs95zssimpflatzs276           = ierror_not_an_error;                  /* write */
            flatzs95zssimpflatzs277           = idouble_mul (flatzs89zssimpflatzs265, flatzs94zssimpflatzs275); /* write */
        } else {
            flatzs95zssimpflatzs276           = flatzs94zssimpflatzs274;              /* write */
            flatzs95zssimpflatzs277           = 0.0;                                  /* write */
        }
        
        flatzs95zssimpflatzs278               = flatzs95zssimpflatzs276;              /* read */
        flatzs95zssimpflatzs279               = flatzs95zssimpflatzs277;              /* read */
        flatzs90zssimpflatzs266               = flatzs95zssimpflatzs278;              /* write */
        flatzs90zssimpflatzs267               = flatzs95zssimpflatzs279;              /* write */
    } else {
        flatzs90zssimpflatzs266               = flatzs89zssimpflatzs264;              /* write */
        flatzs90zssimpflatzs267               = 0.0;                                  /* write */
    }
    
    flatzs90zssimpflatzs280                   = flatzs90zssimpflatzs266;              /* read */
    flatzs90zssimpflatzs281                   = flatzs90zssimpflatzs267;              /* read */
    s->replzsixzs0                            = flatzs90zssimpflatzs280;              /* output */
    s->replzsixzs1                            = flatzs90zssimpflatzs281;              /* output */
}

- C evaluation:
[homer, 3.1112698372208096]

- Core evaluation:
[homer, 3.1112698372208096]

> > -- Times
> - Flattened (simplified), not typechecked:
conv/3 = TIME
conv/4 = MAX_MAP_SIZE
init acc/conv/5/simpflat/2@{Time} = 1858-11-17T00:00:00Z@{Time};
init acc/s/reify/2/conv/6/simpflat/6@{Error} = ExceptFold1NoValue@{Error};
init acc/s/reify/2/conv/6/simpflat/7@{Time} = 1858-11-17T00:00:00Z@{Time};
load_resumable@{Error} acc/s/reify/2/conv/6/simpflat/6;
load_resumable@{Time} acc/s/reify/2/conv/6/simpflat/7;
load_resumable@{Time} acc/conv/5/simpflat/2;
for_facts (conv/2@{Time}, conv/1@{FactIdentifier}, conv/0/simpflat/24@{Error}, conv/0/simpflat/25@{Int}, conv/0/simpflat/26@{Time}) in new
{
  let anf/1 = Time_daysDifference# (1980-01-06T00:00:00Z@{Time}) conv/0/simpflat/26;
  let anf/2 = negate#@{Int} anf/1;
  write acc/conv/5/simpflat/2 = Time_minusDays# (2000-01-01T00:00:00Z@{Time}) anf/2;
  read conv/5/aval/1/simpflat/8 = acc/conv/5/simpflat/2 [Time];
  read s/reify/2/conv/6/aval/0/simpflat/12 = acc/s/reify/2/conv/6/simpflat/6 [Error];
  read s/reify/2/conv/6/aval/0/simpflat/13 = acc/s/reify/2/conv/6/simpflat/7 [Time];
  init flat/0/simpflat/14@{Error} = ExceptNotAnError@{Error};
  init flat/0/simpflat/15@{Time} = 1858-11-17T00:00:00Z@{Time};
  if (eq#@{Error} s/reify/2/conv/6/aval/0/simpflat/12 (ExceptNotAnError@{Error}))
  {
    init flat/4@{Time} = 1858-11-17T00:00:00Z@{Time};
    if (gt#@{Time} conv/5/aval/1/simpflat/8 s/reify/2/conv/6/aval/0/simpflat/13)
    {
      write flat/4 = conv/5/aval/1/simpflat/8;
    }
    else
    {
      write flat/4 = s/reify/2/conv/6/aval/0/simpflat/13;
    }
    read flat/4 = flat/4 [Time];
    write flat/0/simpflat/14 = ExceptNotAnError@{Error};
    write flat/0/simpflat/15 = flat/4;
  }
  else
  {
    init flat/3/simpflat/16@{Error} = ExceptNotAnError@{Error};
    init flat/3/simpflat/17@{Time} = 1858-11-17T00:00:00Z@{Time};
    if (eq#@{Error} (ExceptFold1NoValue@{Error}) s/reify/2/conv/6/aval/0/simpflat/12)
    {
      write flat/3/simpflat/16 = ExceptNotAnError@{Error};
      write flat/3/simpflat/17 = conv/5/aval/1/simpflat/8;
    }
    else
    {
      write flat/3/simpflat/16 = s/reify/2/conv/6/aval/0/simpflat/12;
      write flat/3/simpflat/17 = 1858-11-17T00:00:00Z@{Time};
    }
    read flat/3/simpflat/18 = flat/3/simpflat/16 [Error];
    read flat/3/simpflat/19 = flat/3/simpflat/17 [Time];
    write flat/0/simpflat/14 = flat/3/simpflat/18;
    write flat/0/simpflat/15 = flat/3/simpflat/19;
  }
  read flat/0/simpflat/20 = flat/0/simpflat/14 [Error];
  read flat/0/simpflat/21 = flat/0/simpflat/15 [Time];
  write acc/s/reify/2/conv/6/simpflat/6 = flat/0/simpflat/20;
  write acc/s/reify/2/conv/6/simpflat/7 = flat/0/simpflat/21;
}
save_resumable@{Error} acc/s/reify/2/conv/6/simpflat/6;
save_resumable@{Time} acc/s/reify/2/conv/6/simpflat/7;
save_resumable@{Time} acc/conv/5/simpflat/2;
read s/reify/2/conv/6/simpflat/22 = acc/s/reify/2/conv/6/simpflat/6 [Error];
read s/reify/2/conv/6/simpflat/23 = acc/s/reify/2/conv/6/simpflat/7 [Time];
output@{(Sum Error Time)} repl (s/reify/2/conv/6/simpflat/22@{Error}, s/reify/2/conv/6/simpflat/23@{Time});

- Flattened Avalanche (simplified), typechecked:
conv/3 = TIME
conv/4 = MAX_MAP_SIZE
init acc/conv/5/simpflat/2@{Time} = 1858-11-17T00:00:00Z@{Time};
init acc/s/reify/2/conv/6/simpflat/6@{Error} = ExceptFold1NoValue@{Error};
init acc/s/reify/2/conv/6/simpflat/7@{Time} = 1858-11-17T00:00:00Z@{Time};
load_resumable@{Error} acc/s/reify/2/conv/6/simpflat/6;
load_resumable@{Time} acc/s/reify/2/conv/6/simpflat/7;
load_resumable@{Time} acc/conv/5/simpflat/2;
for_facts (conv/2@{Time}, conv/1@{FactIdentifier}, conv/0/simpflat/24@{Error}, conv/0/simpflat/25@{Int}, conv/0/simpflat/26@{Time}) in new
{
  let anf/1 = Time_daysDifference# (1980-01-06T00:00:00Z@{Time}) conv/0/simpflat/26;
  let anf/2 = negate#@{Int} anf/1;
  write acc/conv/5/simpflat/2 = Time_minusDays# (2000-01-01T00:00:00Z@{Time}) anf/2;
  read conv/5/aval/1/simpflat/8 = acc/conv/5/simpflat/2 [Time];
  read s/reify/2/conv/6/aval/0/simpflat/12 = acc/s/reify/2/conv/6/simpflat/6 [Error];
  read s/reify/2/conv/6/aval/0/simpflat/13 = acc/s/reify/2/conv/6/simpflat/7 [Time];
  init flat/0/simpflat/14@{Error} = ExceptNotAnError@{Error};
  init flat/0/simpflat/15@{Time} = 1858-11-17T00:00:00Z@{Time};
  if (eq#@{Error} s/reify/2/conv/6/aval/0/simpflat/12 (ExceptNotAnError@{Error}))
  {
    init flat/4@{Time} = 1858-11-17T00:00:00Z@{Time};
    if (gt#@{Time} conv/5/aval/1/simpflat/8 s/reify/2/conv/6/aval/0/simpflat/13)
    {
      write flat/4 = conv/5/aval/1/simpflat/8;
    }
    else
    {
      write flat/4 = s/reify/2/conv/6/aval/0/simpflat/13;
    }
    read flat/4 = flat/4 [Time];
    write flat/0/simpflat/14 = ExceptNotAnError@{Error};
    write flat/0/simpflat/15 = flat/4;
  }
  else
  {
    init flat/3/simpflat/16@{Error} = ExceptNotAnError@{Error};
    init flat/3/simpflat/17@{Time} = 1858-11-17T00:00:00Z@{Time};
    if (eq#@{Error} (ExceptFold1NoValue@{Error}) s/reify/2/conv/6/aval/0/simpflat/12)
    {
      write flat/3/simpflat/16 = ExceptNotAnError@{Error};
      write flat/3/simpflat/17 = conv/5/aval/1/simpflat/8;
    }
    else
    {
      write flat/3/simpflat/16 = s/reify/2/conv/6/aval/0/simpflat/12;
      write flat/3/simpflat/17 = 1858-11-17T00:00:00Z@{Time};
    }
    read flat/3/simpflat/18 = flat/3/simpflat/16 [Error];
    read flat/3/simpflat/19 = flat/3/simpflat/17 [Time];
    write flat/0/simpflat/14 = flat/3/simpflat/18;
    write flat/0/simpflat/15 = flat/3/simpflat/19;
  }
  read flat/0/simpflat/20 = flat/0/simpflat/14 [Error];
  read flat/0/simpflat/21 = flat/0/simpflat/15 [Time];
  write acc/s/reify/2/conv/6/simpflat/6 = flat/0/simpflat/20;
  write acc/s/reify/2/conv/6/simpflat/7 = flat/0/simpflat/21;
}
save_resumable@{Error} acc/s/reify/2/conv/6/simpflat/6;
save_resumable@{Time} acc/s/reify/2/conv/6/simpflat/7;
save_resumable@{Time} acc/conv/5/simpflat/2;
read s/reify/2/conv/6/simpflat/22 = acc/s/reify/2/conv/6/simpflat/6 [Error];
read s/reify/2/conv/6/simpflat/23 = acc/s/reify/2/conv/6/simpflat/7 [Time];
output@{(Sum Error Time)} repl (s/reify/2/conv/6/simpflat/22@{Error}, s/reify/2/conv/6/simpflat/23@{Time});

- C:
#line 1 "state and input definition #0 - repl"

typedef struct {
    itime_t          convzs3;
    iint_t           new_count;
    ierror_t         *new_convzs0zssimpflatzs24;
    iint_t           *new_convzs0zssimpflatzs25;
    itime_t          *new_convzs0zssimpflatzs26;
} input_repl_t;

typedef struct {
    /* runtime */
    anemone_mempool_t *mempool;
    iint_t           max_map_size;

    /* inputs */
    input_repl_t     input;

  /* compute for (0,0) */
    /* outputs */
    ierror_t         replzsixzs0;
    itime_t          replzsixzs1;

    /* resumables: values */
    ierror_t         res_0_0_acczsszsreifyzs2zsconvzs6zssimpflatzs6;
    itime_t          res_0_0_acczsszsreifyzs2zsconvzs6zssimpflatzs7;
    itime_t          res_0_0_acczsconvzs5zssimpflatzs2;

    /* resumables: has flags */
    ibool_t          has_flags_start_0_0;
    ibool_t          has_0_0_acczsszsreifyzs2zsconvzs6zssimpflatzs6;
    ibool_t          has_0_0_acczsszsreifyzs2zsconvzs6zssimpflatzs7;
    ibool_t          has_0_0_acczsconvzs5zssimpflatzs2;
    ibool_t          has_flags_end_0_0;


} iattribute_0_t;

iint_t size_of_state_iattribute_0 ()
{
    return sizeof (iattribute_0_t);
}

#line 1 "compute function #0 - repl icompute_attribute_0_compute_0"
void icompute_attribute_0_compute_0(iattribute_0_t *s)
{
    itime_t          flatzs4;
    itime_t          szsreifyzs2zsconvzs6zssimpflatzs23;
    ierror_t         szsreifyzs2zsconvzs6zssimpflatzs22;
    itime_t          convzs5zsavalzs1zssimpflatzs8;
    ierror_t         acczsszsreifyzs2zsconvzs6zssimpflatzs6;
    itime_t          acczsszsreifyzs2zsconvzs6zssimpflatzs7;
    ierror_t         szsreifyzs2zsconvzs6zsavalzs0zssimpflatzs12;
    itime_t          szsreifyzs2zsconvzs6zsavalzs0zssimpflatzs13;
    itime_t          flatzs0zssimpflatzs15;
    ierror_t         flatzs0zssimpflatzs14;
    ierror_t         flatzs3zssimpflatzs16;
    ierror_t         flatzs3zssimpflatzs18;
    itime_t          flatzs3zssimpflatzs19;
    itime_t          flatzs3zssimpflatzs17;
    itime_t          acczsconvzs5zssimpflatzs2;
    ierror_t         flatzs0zssimpflatzs20;
    itime_t          flatzs0zssimpflatzs21;

    anemone_mempool_t *mempool                = s->mempool;
    itime_t          convzs3                  = s->input.convzs3;
    iint_t           convzs4                  = s->max_map_size;

    acczsconvzs5zssimpflatzs2                 = 0x7420b1100000000;                    /* init */
    acczsszsreifyzs2zsconvzs6zssimpflatzs6    = ierror_fold1_no_value;                /* init */
    acczsszsreifyzs2zsconvzs6zssimpflatzs7    = 0x7420b1100000000;                    /* init */
    
    if (s->has_0_0_acczsszsreifyzs2zsconvzs6zssimpflatzs6) {
        acczsszsreifyzs2zsconvzs6zssimpflatzs6 = s->res_0_0_acczsszsreifyzs2zsconvzs6zssimpflatzs6; /* load */
    }
    
    if (s->has_0_0_acczsszsreifyzs2zsconvzs6zssimpflatzs7) {
        acczsszsreifyzs2zsconvzs6zssimpflatzs7 = s->res_0_0_acczsszsreifyzs2zsconvzs6zssimpflatzs7; /* load */
    }
    
    if (s->has_0_0_acczsconvzs5zssimpflatzs2) {
        acczsconvzs5zssimpflatzs2             = s->res_0_0_acczsconvzs5zssimpflatzs2; /* load */
    }
    
    const iint_t     new_count                = s->input.new_count;
    const ierror_t  *const new_convzs0zssimpflatzs24 = s->input.new_convzs0zssimpflatzs24;
    const iint_t    *const new_convzs0zssimpflatzs25 = s->input.new_convzs0zssimpflatzs25;
    const itime_t   *const new_convzs0zssimpflatzs26 = s->input.new_convzs0zssimpflatzs26;
    
    for (iint_t i = 0; i < new_count; i++) {
        ifactid_t        convzs1              = i;
        itime_t          convzs2              = new_convzs0zssimpflatzs26[i];
        ierror_t         convzs0zssimpflatzs24 = new_convzs0zssimpflatzs24[i];
        iint_t           convzs0zssimpflatzs25 = new_convzs0zssimpflatzs25[i];
        itime_t          convzs0zssimpflatzs26 = new_convzs0zssimpflatzs26[i];
        iint_t           anfzs1               = itime_days_diff (0x7bc010600000000, convzs0zssimpflatzs26); /* let */
        iint_t           anfzs2               = iint_neg (anfzs1);                    /* let */
        acczsconvzs5zssimpflatzs2             = itime_minus_days (0x7d0010100000000, anfzs2); /* write */
        convzs5zsavalzs1zssimpflatzs8         = acczsconvzs5zssimpflatzs2;            /* read */
        szsreifyzs2zsconvzs6zsavalzs0zssimpflatzs12 = acczsszsreifyzs2zsconvzs6zssimpflatzs6; /* read */
        szsreifyzs2zsconvzs6zsavalzs0zssimpflatzs13 = acczsszsreifyzs2zsconvzs6zssimpflatzs7; /* read */
        flatzs0zssimpflatzs14                 = ierror_not_an_error;                  /* init */
        flatzs0zssimpflatzs15                 = 0x7420b1100000000;                    /* init */
        
        if (ierror_eq (szsreifyzs2zsconvzs6zsavalzs0zssimpflatzs12, ierror_not_an_error)) {
            flatzs4                           = 0x7420b1100000000;                    /* init */
            
            if (itime_gt (convzs5zsavalzs1zssimpflatzs8, szsreifyzs2zsconvzs6zsavalzs0zssimpflatzs13)) {
                flatzs4                       = convzs5zsavalzs1zssimpflatzs8;        /* write */
            } else {
                flatzs4                       = szsreifyzs2zsconvzs6zsavalzs0zssimpflatzs13; /* write */
            }
            
            flatzs4                           = flatzs4;                              /* read */
            flatzs0zssimpflatzs14             = ierror_not_an_error;                  /* write */
            flatzs0zssimpflatzs15             = flatzs4;                              /* write */
        } else {
            flatzs3zssimpflatzs16             = ierror_not_an_error;                  /* init */
            flatzs3zssimpflatzs17             = 0x7420b1100000000;                    /* init */
            
            if (ierror_eq (ierror_fold1_no_value, szsreifyzs2zsconvzs6zsavalzs0zssimpflatzs12)) {
                flatzs3zssimpflatzs16         = ierror_not_an_error;                  /* write */
                flatzs3zssimpflatzs17         = convzs5zsavalzs1zssimpflatzs8;        /* write */
            } else {
                flatzs3zssimpflatzs16         = szsreifyzs2zsconvzs6zsavalzs0zssimpflatzs12; /* write */
                flatzs3zssimpflatzs17         = 0x7420b1100000000;                    /* write */
            }
            
            flatzs3zssimpflatzs18             = flatzs3zssimpflatzs16;                /* read */
            flatzs3zssimpflatzs19             = flatzs3zssimpflatzs17;                /* read */
            flatzs0zssimpflatzs14             = flatzs3zssimpflatzs18;                /* write */
            flatzs0zssimpflatzs15             = flatzs3zssimpflatzs19;                /* write */
        }
        
        flatzs0zssimpflatzs20                 = flatzs0zssimpflatzs14;                /* read */
        flatzs0zssimpflatzs21                 = flatzs0zssimpflatzs15;                /* read */
        acczsszsreifyzs2zsconvzs6zssimpflatzs6 = flatzs0zssimpflatzs20;               /* write */
        acczsszsreifyzs2zsconvzs6zssimpflatzs7 = flatzs0zssimpflatzs21;               /* write */
    }
    
    s->has_0_0_acczsszsreifyzs2zsconvzs6zssimpflatzs6 = itrue;                        /* save */
    s->res_0_0_acczsszsreifyzs2zsconvzs6zssimpflatzs6 = acczsszsreifyzs2zsconvzs6zssimpflatzs6; /* save */
    
    s->has_0_0_acczsszsreifyzs2zsconvzs6zssimpflatzs7 = itrue;                        /* save */
    s->res_0_0_acczsszsreifyzs2zsconvzs6zssimpflatzs7 = acczsszsreifyzs2zsconvzs6zssimpflatzs7; /* save */
    
    s->has_0_0_acczsconvzs5zssimpflatzs2      = itrue;                                /* save */
    s->res_0_0_acczsconvzs5zssimpflatzs2      = acczsconvzs5zssimpflatzs2;            /* save */
    
    szsreifyzs2zsconvzs6zssimpflatzs22        = acczsszsreifyzs2zsconvzs6zssimpflatzs6; /* read */
    szsreifyzs2zsconvzs6zssimpflatzs23        = acczsszsreifyzs2zsconvzs6zssimpflatzs7; /* read */
    s->replzsixzs0                            = szsreifyzs2zsconvzs6zssimpflatzs22;   /* output */
    s->replzsixzs1                            = szsreifyzs2zsconvzs6zssimpflatzs23;   /* output */
}

- C evaluation:
[homer, 2029-12-27
,marge, 2009-12-12]

- Core evaluation:
[homer, 2029-12-27
,marge, 2009-12-12]

> > -- Math
> ok, c is now off
ok, flatten (simplified) is now off
> > - C evaluation:
[homer, NaN]

- Core evaluation:
[homer, NaN]

> > - C evaluation:
[homer, Infinity]

- Core evaluation:
[homer, Infinity]

> 