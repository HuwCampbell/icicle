welcome to iREPL
ok, loaded 38 functions from data/libs/prelude.icicle
ok, loaded test/cli/repl/data.psv, 13 rows
> -- Show everything
> ok, flatten (simplified) is now on
ok, c is now on
> > -- Enable C evaluation
> ok, c evaluation now on
                   _________-----_____
        _____------           __      ----_
 ___----             ___------              \
    ----________        ----                 \
                -----__    |             _____)
                     __-                /     \
         _______-----    ___--          \    /)\
   ------_______      ---____            \__/  /
                -----__    \ --    _          /\
                       --__--__     \_____/   \_/\
                               ----|   /          |
                                   |  |___________|
                                   |  | ((_(_)| )_)
                                   |  \_((_(_)|/(_)
                                   \             (
                                    \_____________)
> > -- An interesting expression with structs and strings
> - Flattened (simplified), not typechecked:
conv/3 = TIME
conv/4 = MAX_MAP_SIZE
init acc/conv/11/simpflat/33@{Error} = ExceptNotAnError@{Error};
init acc/conv/11/simpflat/34@{Double} = 0.0@{Double};
init acc/s/reify/6/conv/12/simpflat/39@{Error} = ExceptFold1NoValue@{Error};
init acc/s/reify/6/conv/12/simpflat/40@{Double} = 0.0@{Double};
init acc/s/reify/6/conv/12/simpflat/41@{Double} = 0.0@{Double};
init acc/conv/60/simpflat/42@{Error} = ExceptNotAnError@{Error};
init acc/conv/60/simpflat/43@{Double} = 0.0@{Double};
init acc/a/conv/61/simpflat/48@{Error} = ExceptNotAnError@{Error};
init acc/a/conv/61/simpflat/49@{Double} = 0.0@{Double};
init acc/a/conv/61/simpflat/50@{Double} = 0.0@{Double};
init acc/a/conv/61/simpflat/51@{Double} = 0.0@{Double};
load_resumable@{Error} acc/a/conv/61/simpflat/48;
load_resumable@{Double} acc/a/conv/61/simpflat/49;
load_resumable@{Double} acc/a/conv/61/simpflat/50;
load_resumable@{Double} acc/a/conv/61/simpflat/51;
load_resumable@{Error} acc/conv/60/simpflat/42;
load_resumable@{Double} acc/conv/60/simpflat/43;
load_resumable@{Error} acc/s/reify/6/conv/12/simpflat/39;
load_resumable@{Double} acc/s/reify/6/conv/12/simpflat/40;
load_resumable@{Double} acc/s/reify/6/conv/12/simpflat/41;
load_resumable@{Error} acc/conv/11/simpflat/33;
load_resumable@{Double} acc/conv/11/simpflat/34;
for_facts (conv/2@{Time}, conv/1@{FactIdentifier}, conv/0/simpflat/230@{Error}, conv/0/simpflat/231@{String}, conv/0/simpflat/232@{Int}, conv/0/simpflat/233@{Time}) in new
{
  init flat/0/simpflat/52@{Error} = ExceptNotAnError@{Error};
  init flat/0/simpflat/53@{Int} = 0@{Int};
  if (eq#@{Error} conv/0/simpflat/230 (ExceptNotAnError@{Error}))
  {
    write flat/0/simpflat/52 = ExceptNotAnError@{Error};
    write flat/0/simpflat/53 = conv/0/simpflat/232;
  }
  else
  {
    write flat/0/simpflat/52 = conv/0/simpflat/230;
    write flat/0/simpflat/53 = 0@{Int};
  }
  read flat/0/simpflat/54 = flat/0/simpflat/52 [Error];
  read flat/0/simpflat/55 = flat/0/simpflat/53 [Int];
  init flat/1/simpflat/56@{Error} = ExceptNotAnError@{Error};
  init flat/1/simpflat/57@{Double} = 0.0@{Double};
  if (eq#@{Error} flat/0/simpflat/54 (ExceptNotAnError@{Error}))
  {
    write flat/1/simpflat/56 = ExceptNotAnError@{Error};
    write flat/1/simpflat/57 = doubleOfInt# flat/0/simpflat/55;
  }
  else
  {
    write flat/1/simpflat/56 = flat/0/simpflat/54;
    write flat/1/simpflat/57 = 0.0@{Double};
  }
  read flat/1/simpflat/58 = flat/1/simpflat/56 [Error];
  read flat/1/simpflat/59 = flat/1/simpflat/57 [Double];
  init flat/2/simpflat/60@{Error} = ExceptNotAnError@{Error};
  init flat/2/simpflat/61@{Double} = 0.0@{Double};
  if (eq#@{Error} flat/1/simpflat/58 (ExceptNotAnError@{Error}))
  {
    write flat/2/simpflat/60 = ExceptNotAnError@{Error};
    write flat/2/simpflat/61 = flat/1/simpflat/59;
  }
  else
  {
    write flat/2/simpflat/60 = flat/1/simpflat/58;
    write flat/2/simpflat/61 = 0.0@{Double};
  }
  read flat/2/simpflat/62 = flat/2/simpflat/60 [Error];
  read flat/2/simpflat/63 = flat/2/simpflat/61 [Double];
  write acc/conv/11/simpflat/33 = flat/2/simpflat/62;
  write acc/conv/11/simpflat/34 = flat/2/simpflat/63;
  read conv/11/aval/1/simpflat/64 = acc/conv/11/simpflat/33 [Error];
  read conv/11/aval/1/simpflat/65 = acc/conv/11/simpflat/34 [Double];
  read s/reify/6/conv/12/aval/0/simpflat/70 = acc/s/reify/6/conv/12/simpflat/39 [Error];
  read s/reify/6/conv/12/aval/0/simpflat/71 = acc/s/reify/6/conv/12/simpflat/40 [Double];
  read s/reify/6/conv/12/aval/0/simpflat/72 = acc/s/reify/6/conv/12/simpflat/41 [Double];
  init flat/3/simpflat/73@{Error} = ExceptNotAnError@{Error};
  init flat/3/simpflat/74@{Double} = 0.0@{Double};
  init flat/3/simpflat/75@{Double} = 0.0@{Double};
  if (eq#@{Error} s/reify/6/conv/12/aval/0/simpflat/70 (ExceptNotAnError@{Error}))
  {
    init flat/10/simpflat/76@{Error} = ExceptNotAnError@{Error};
    init flat/10/simpflat/77@{Double} = 0.0@{Double};
    init flat/10/simpflat/78@{Double} = 0.0@{Double};
    if (eq#@{Error} s/reify/6/conv/12/aval/0/simpflat/70 (ExceptNotAnError@{Error}))
    {
      init flat/13/simpflat/79@{Error} = ExceptNotAnError@{Error};
      init flat/13/simpflat/80@{Double} = 0.0@{Double};
      if (eq#@{Error} conv/11/aval/1/simpflat/64 (ExceptNotAnError@{Error}))
      {
        write flat/13/simpflat/79 = ExceptNotAnError@{Error};
        write flat/13/simpflat/80 = sub#@{Double} conv/11/aval/1/simpflat/65 s/reify/6/conv/12/aval/0/simpflat/71;
      }
      else
      {
        write flat/13/simpflat/79 = conv/11/aval/1/simpflat/64;
        write flat/13/simpflat/80 = 0.0@{Double};
      }
      read flat/13/simpflat/81 = flat/13/simpflat/79 [Error];
      read flat/13/simpflat/82 = flat/13/simpflat/80 [Double];
      init flat/14/simpflat/83@{Error} = ExceptNotAnError@{Error};
      init flat/14/simpflat/84@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/13/simpflat/81 (ExceptNotAnError@{Error}))
      {
        write flat/14/simpflat/83 = ExceptNotAnError@{Error};
        let simpflat/285 = add#@{Double} s/reify/6/conv/12/aval/0/simpflat/72 (1.0@{Double});
        write flat/14/simpflat/84 = div# flat/13/simpflat/82 simpflat/285;
      }
      else
      {
        write flat/14/simpflat/83 = flat/13/simpflat/81;
        write flat/14/simpflat/84 = 0.0@{Double};
      }
      read flat/14/simpflat/85 = flat/14/simpflat/83 [Error];
      read flat/14/simpflat/86 = flat/14/simpflat/84 [Double];
      init flat/15/simpflat/87@{Error} = ExceptNotAnError@{Error};
      init flat/15/simpflat/88@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/14/simpflat/85 (ExceptNotAnError@{Error}))
      {
        write flat/15/simpflat/87 = ExceptNotAnError@{Error};
        write flat/15/simpflat/88 = add#@{Double} s/reify/6/conv/12/aval/0/simpflat/71 flat/14/simpflat/86;
      }
      else
      {
        write flat/15/simpflat/87 = flat/14/simpflat/85;
        write flat/15/simpflat/88 = 0.0@{Double};
      }
      read flat/15/simpflat/89 = flat/15/simpflat/87 [Error];
      read flat/15/simpflat/90 = flat/15/simpflat/88 [Double];
      init flat/16/simpflat/91@{Error} = ExceptNotAnError@{Error};
      init flat/16/simpflat/92@{Double} = 0.0@{Double};
      init flat/16/simpflat/93@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/15/simpflat/89 (ExceptNotAnError@{Error}))
      {
        write flat/16/simpflat/91 = ExceptNotAnError@{Error};
        write flat/16/simpflat/92 = flat/15/simpflat/90;
        write flat/16/simpflat/93 = add#@{Double} s/reify/6/conv/12/aval/0/simpflat/72 (1.0@{Double});
      }
      else
      {
        write flat/16/simpflat/91 = flat/15/simpflat/89;
        write flat/16/simpflat/92 = 0.0@{Double};
        write flat/16/simpflat/93 = 0.0@{Double};
      }
      read flat/16/simpflat/94 = flat/16/simpflat/91 [Error];
      read flat/16/simpflat/95 = flat/16/simpflat/92 [Double];
      read flat/16/simpflat/96 = flat/16/simpflat/93 [Double];
      write flat/10/simpflat/76 = flat/16/simpflat/94;
      write flat/10/simpflat/77 = flat/16/simpflat/95;
      write flat/10/simpflat/78 = flat/16/simpflat/96;
    }
    else
    {
      write flat/10/simpflat/76 = s/reify/6/conv/12/aval/0/simpflat/70;
      write flat/10/simpflat/77 = 0.0@{Double};
      write flat/10/simpflat/78 = 0.0@{Double};
    }
    read flat/10/simpflat/97 = flat/10/simpflat/76 [Error];
    read flat/10/simpflat/98 = flat/10/simpflat/77 [Double];
    read flat/10/simpflat/99 = flat/10/simpflat/78 [Double];
    write flat/3/simpflat/73 = flat/10/simpflat/97;
    write flat/3/simpflat/74 = flat/10/simpflat/98;
    write flat/3/simpflat/75 = flat/10/simpflat/99;
  }
  else
  {
    init flat/6/simpflat/100@{Error} = ExceptNotAnError@{Error};
    init flat/6/simpflat/101@{Double} = 0.0@{Double};
    init flat/6/simpflat/102@{Double} = 0.0@{Double};
    if (eq#@{Error} (ExceptFold1NoValue@{Error}) s/reify/6/conv/12/aval/0/simpflat/70)
    {
      init flat/7/simpflat/103@{Error} = ExceptNotAnError@{Error};
      init flat/7/simpflat/104@{Double} = 0.0@{Double};
      init flat/7/simpflat/105@{Double} = 0.0@{Double};
      if (eq#@{Error} conv/11/aval/1/simpflat/64 (ExceptNotAnError@{Error}))
      {
        write flat/7/simpflat/103 = ExceptNotAnError@{Error};
        write flat/7/simpflat/104 = conv/11/aval/1/simpflat/65;
        write flat/7/simpflat/105 = 1.0@{Double};
      }
      else
      {
        write flat/7/simpflat/103 = conv/11/aval/1/simpflat/64;
        write flat/7/simpflat/104 = 0.0@{Double};
        write flat/7/simpflat/105 = 0.0@{Double};
      }
      read flat/7/simpflat/106 = flat/7/simpflat/103 [Error];
      read flat/7/simpflat/107 = flat/7/simpflat/104 [Double];
      read flat/7/simpflat/108 = flat/7/simpflat/105 [Double];
      write flat/6/simpflat/100 = flat/7/simpflat/106;
      write flat/6/simpflat/101 = flat/7/simpflat/107;
      write flat/6/simpflat/102 = flat/7/simpflat/108;
    }
    else
    {
      write flat/6/simpflat/100 = s/reify/6/conv/12/aval/0/simpflat/70;
      write flat/6/simpflat/101 = 0.0@{Double};
      write flat/6/simpflat/102 = 0.0@{Double};
    }
    read flat/6/simpflat/109 = flat/6/simpflat/100 [Error];
    read flat/6/simpflat/110 = flat/6/simpflat/101 [Double];
    read flat/6/simpflat/111 = flat/6/simpflat/102 [Double];
    write flat/3/simpflat/73 = flat/6/simpflat/109;
    write flat/3/simpflat/74 = flat/6/simpflat/110;
    write flat/3/simpflat/75 = flat/6/simpflat/111;
  }
  read flat/3/simpflat/112 = flat/3/simpflat/73 [Error];
  read flat/3/simpflat/113 = flat/3/simpflat/74 [Double];
  read flat/3/simpflat/114 = flat/3/simpflat/75 [Double];
  write acc/s/reify/6/conv/12/simpflat/39 = flat/3/simpflat/112;
  write acc/s/reify/6/conv/12/simpflat/40 = flat/3/simpflat/113;
  write acc/s/reify/6/conv/12/simpflat/41 = flat/3/simpflat/114;
  init flat/25/simpflat/115@{Error} = ExceptNotAnError@{Error};
  init flat/25/simpflat/116@{String} = ""@{String};
  if (eq#@{Error} conv/0/simpflat/230 (ExceptNotAnError@{Error}))
  {
    write flat/25/simpflat/115 = ExceptNotAnError@{Error};
    write flat/25/simpflat/116 = conv/0/simpflat/231;
  }
  else
  {
    write flat/25/simpflat/115 = conv/0/simpflat/230;
    write flat/25/simpflat/116 = ""@{String};
  }
  read flat/25/simpflat/117 = flat/25/simpflat/115 [Error];
  read flat/25/simpflat/118 = flat/25/simpflat/116 [String];
  init flat/26/simpflat/119@{Error} = ExceptNotAnError@{Error};
  init flat/26/simpflat/120@{Bool} = False@{Bool};
  if (eq#@{Error} flat/25/simpflat/117 (ExceptNotAnError@{Error}))
  {
    write flat/26/simpflat/119 = ExceptNotAnError@{Error};
    write flat/26/simpflat/120 = eq#@{String} flat/25/simpflat/118 ("torso"@{String});
  }
  else
  {
    write flat/26/simpflat/119 = flat/25/simpflat/117;
    write flat/26/simpflat/120 = False@{Bool};
  }
  read flat/26/simpflat/121 = flat/26/simpflat/119 [Error];
  read flat/26/simpflat/122 = flat/26/simpflat/120 [Bool];
  init flat/27@{Bool} = False@{Bool};
  if (eq#@{Error} flat/26/simpflat/121 (ExceptNotAnError@{Error}))
  {
    write flat/27 = flat/26/simpflat/122;
  }
  else
  {
    write flat/27 = True@{Bool};
  }
  read flat/27 = flat/27 [Bool];
  if (flat/27)
  {
    init flat/28/simpflat/123@{Error} = ExceptNotAnError@{Error};
    init flat/28/simpflat/124@{Int} = 0@{Int};
    if (eq#@{Error} conv/0/simpflat/230 (ExceptNotAnError@{Error}))
    {
      write flat/28/simpflat/123 = ExceptNotAnError@{Error};
      write flat/28/simpflat/124 = conv/0/simpflat/232;
    }
    else
    {
      write flat/28/simpflat/123 = conv/0/simpflat/230;
      write flat/28/simpflat/124 = 0@{Int};
    }
    read flat/28/simpflat/125 = flat/28/simpflat/123 [Error];
    read flat/28/simpflat/126 = flat/28/simpflat/124 [Int];
    init flat/29/simpflat/127@{Error} = ExceptNotAnError@{Error};
    init flat/29/simpflat/128@{Double} = 0.0@{Double};
    if (eq#@{Error} flat/28/simpflat/125 (ExceptNotAnError@{Error}))
    {
      write flat/29/simpflat/127 = ExceptNotAnError@{Error};
      write flat/29/simpflat/128 = doubleOfInt# flat/28/simpflat/126;
    }
    else
    {
      write flat/29/simpflat/127 = flat/28/simpflat/125;
      write flat/29/simpflat/128 = 0.0@{Double};
    }
    read flat/29/simpflat/129 = flat/29/simpflat/127 [Error];
    read flat/29/simpflat/130 = flat/29/simpflat/128 [Double];
    write acc/conv/60/simpflat/42 = flat/29/simpflat/129;
    write acc/conv/60/simpflat/43 = flat/29/simpflat/130;
    read conv/60/aval/3/simpflat/131 = acc/conv/60/simpflat/42 [Error];
    read conv/60/aval/3/simpflat/132 = acc/conv/60/simpflat/43 [Double];
    read a/conv/61/aval/2/simpflat/137 = acc/a/conv/61/simpflat/48 [Error];
    read a/conv/61/aval/2/simpflat/138 = acc/a/conv/61/simpflat/49 [Double];
    read a/conv/61/aval/2/simpflat/139 = acc/a/conv/61/simpflat/50 [Double];
    read a/conv/61/aval/2/simpflat/140 = acc/a/conv/61/simpflat/51 [Double];
    init flat/30/simpflat/141@{Error} = ExceptNotAnError@{Error};
    init flat/30/simpflat/142@{Double} = 0.0@{Double};
    init flat/30/simpflat/143@{Double} = 0.0@{Double};
    init flat/30/simpflat/144@{Double} = 0.0@{Double};
    if (eq#@{Error} a/conv/61/aval/2/simpflat/137 (ExceptNotAnError@{Error}))
    {
      let nn/conv/68 = add#@{Double} a/conv/61/aval/2/simpflat/138 (1.0@{Double});
      init flat/33/simpflat/145@{Error} = ExceptNotAnError@{Error};
      init flat/33/simpflat/146@{Double} = 0.0@{Double};
      if (eq#@{Error} conv/60/aval/3/simpflat/131 (ExceptNotAnError@{Error}))
      {
        write flat/33/simpflat/145 = ExceptNotAnError@{Error};
        write flat/33/simpflat/146 = sub#@{Double} conv/60/aval/3/simpflat/132 a/conv/61/aval/2/simpflat/139;
      }
      else
      {
        write flat/33/simpflat/145 = conv/60/aval/3/simpflat/131;
        write flat/33/simpflat/146 = 0.0@{Double};
      }
      read flat/33/simpflat/147 = flat/33/simpflat/145 [Error];
      read flat/33/simpflat/148 = flat/33/simpflat/146 [Double];
      init flat/34/simpflat/149@{Error} = ExceptNotAnError@{Error};
      init flat/34/simpflat/150@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/33/simpflat/147 (ExceptNotAnError@{Error}))
      {
        write flat/34/simpflat/149 = ExceptNotAnError@{Error};
        write flat/34/simpflat/150 = div# flat/33/simpflat/148 nn/conv/68;
      }
      else
      {
        write flat/34/simpflat/149 = flat/33/simpflat/147;
        write flat/34/simpflat/150 = 0.0@{Double};
      }
      read flat/34/simpflat/151 = flat/34/simpflat/149 [Error];
      read flat/34/simpflat/152 = flat/34/simpflat/150 [Double];
      init flat/35/simpflat/153@{Error} = ExceptNotAnError@{Error};
      init flat/35/simpflat/154@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/34/simpflat/151 (ExceptNotAnError@{Error}))
      {
        write flat/35/simpflat/153 = ExceptNotAnError@{Error};
        write flat/35/simpflat/154 = add#@{Double} a/conv/61/aval/2/simpflat/139 flat/34/simpflat/152;
      }
      else
      {
        write flat/35/simpflat/153 = flat/34/simpflat/151;
        write flat/35/simpflat/154 = 0.0@{Double};
      }
      read flat/35/simpflat/155 = flat/35/simpflat/153 [Error];
      read flat/35/simpflat/156 = flat/35/simpflat/154 [Double];
      init flat/36/simpflat/157@{Error} = ExceptNotAnError@{Error};
      init flat/36/simpflat/158@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/33/simpflat/147 (ExceptNotAnError@{Error}))
      {
        init flat/51/simpflat/159@{Error} = ExceptNotAnError@{Error};
        init flat/51/simpflat/160@{Double} = 0.0@{Double};
        if (eq#@{Error} conv/60/aval/3/simpflat/131 (ExceptNotAnError@{Error}))
        {
          init flat/57/simpflat/161@{Error} = ExceptNotAnError@{Error};
          init flat/57/simpflat/162@{Double} = 0.0@{Double};
          if (eq#@{Error} flat/35/simpflat/155 (ExceptNotAnError@{Error}))
          {
            write flat/57/simpflat/161 = ExceptNotAnError@{Error};
            write flat/57/simpflat/162 = sub#@{Double} conv/60/aval/3/simpflat/132 flat/35/simpflat/156;
          }
          else
          {
            write flat/57/simpflat/161 = flat/35/simpflat/155;
            write flat/57/simpflat/162 = 0.0@{Double};
          }
          read flat/57/simpflat/163 = flat/57/simpflat/161 [Error];
          read flat/57/simpflat/164 = flat/57/simpflat/162 [Double];
          write flat/51/simpflat/159 = flat/57/simpflat/163;
          write flat/51/simpflat/160 = flat/57/simpflat/164;
        }
        else
        {
          write flat/51/simpflat/159 = conv/60/aval/3/simpflat/131;
          write flat/51/simpflat/160 = 0.0@{Double};
        }
        read flat/51/simpflat/165 = flat/51/simpflat/159 [Error];
        read flat/51/simpflat/166 = flat/51/simpflat/160 [Double];
        init flat/52/simpflat/167@{Error} = ExceptNotAnError@{Error};
        init flat/52/simpflat/168@{Double} = 0.0@{Double};
        if (eq#@{Error} flat/51/simpflat/165 (ExceptNotAnError@{Error}))
        {
          write flat/52/simpflat/167 = ExceptNotAnError@{Error};
          write flat/52/simpflat/168 = mul#@{Double} flat/33/simpflat/148 flat/51/simpflat/166;
        }
        else
        {
          write flat/52/simpflat/167 = flat/51/simpflat/165;
          write flat/52/simpflat/168 = 0.0@{Double};
        }
        read flat/52/simpflat/169 = flat/52/simpflat/167 [Error];
        read flat/52/simpflat/170 = flat/52/simpflat/168 [Double];
        write flat/36/simpflat/157 = flat/52/simpflat/169;
        write flat/36/simpflat/158 = flat/52/simpflat/170;
      }
      else
      {
        write flat/36/simpflat/157 = flat/33/simpflat/147;
        write flat/36/simpflat/158 = 0.0@{Double};
      }
      read flat/36/simpflat/171 = flat/36/simpflat/157 [Error];
      read flat/36/simpflat/172 = flat/36/simpflat/158 [Double];
      init flat/37/simpflat/173@{Error} = ExceptNotAnError@{Error};
      init flat/37/simpflat/174@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/36/simpflat/171 (ExceptNotAnError@{Error}))
      {
        write flat/37/simpflat/173 = ExceptNotAnError@{Error};
        write flat/37/simpflat/174 = add#@{Double} a/conv/61/aval/2/simpflat/140 flat/36/simpflat/172;
      }
      else
      {
        write flat/37/simpflat/173 = flat/36/simpflat/171;
        write flat/37/simpflat/174 = 0.0@{Double};
      }
      read flat/37/simpflat/175 = flat/37/simpflat/173 [Error];
      read flat/37/simpflat/176 = flat/37/simpflat/174 [Double];
      init flat/38/simpflat/177@{Error} = ExceptNotAnError@{Error};
      init flat/38/simpflat/178@{Double} = 0.0@{Double};
      init flat/38/simpflat/179@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/35/simpflat/155 (ExceptNotAnError@{Error}))
      {
        write flat/38/simpflat/177 = ExceptNotAnError@{Error};
        write flat/38/simpflat/178 = add#@{Double} a/conv/61/aval/2/simpflat/138 (1.0@{Double});
        write flat/38/simpflat/179 = flat/35/simpflat/156;
      }
      else
      {
        write flat/38/simpflat/177 = flat/35/simpflat/155;
        write flat/38/simpflat/178 = 0.0@{Double};
        write flat/38/simpflat/179 = 0.0@{Double};
      }
      read flat/38/simpflat/180 = flat/38/simpflat/177 [Error];
      read flat/38/simpflat/181 = flat/38/simpflat/178 [Double];
      read flat/38/simpflat/182 = flat/38/simpflat/179 [Double];
      init flat/39/simpflat/183@{Error} = ExceptNotAnError@{Error};
      init flat/39/simpflat/184@{Double} = 0.0@{Double};
      init flat/39/simpflat/185@{Double} = 0.0@{Double};
      init flat/39/simpflat/186@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/38/simpflat/180 (ExceptNotAnError@{Error}))
      {
        init flat/42/simpflat/187@{Error} = ExceptNotAnError@{Error};
        init flat/42/simpflat/188@{Double} = 0.0@{Double};
        init flat/42/simpflat/189@{Double} = 0.0@{Double};
        init flat/42/simpflat/190@{Double} = 0.0@{Double};
        if (eq#@{Error} flat/37/simpflat/175 (ExceptNotAnError@{Error}))
        {
          write flat/42/simpflat/187 = ExceptNotAnError@{Error};
          write flat/42/simpflat/188 = flat/38/simpflat/181;
          write flat/42/simpflat/189 = flat/38/simpflat/182;
          write flat/42/simpflat/190 = flat/37/simpflat/176;
        }
        else
        {
          write flat/42/simpflat/187 = flat/37/simpflat/175;
          write flat/42/simpflat/188 = 0.0@{Double};
          write flat/42/simpflat/189 = 0.0@{Double};
          write flat/42/simpflat/190 = 0.0@{Double};
        }
        read flat/42/simpflat/191 = flat/42/simpflat/187 [Error];
        read flat/42/simpflat/192 = flat/42/simpflat/188 [Double];
        read flat/42/simpflat/193 = flat/42/simpflat/189 [Double];
        read flat/42/simpflat/194 = flat/42/simpflat/190 [Double];
        write flat/39/simpflat/183 = flat/42/simpflat/191;
        write flat/39/simpflat/184 = flat/42/simpflat/192;
        write flat/39/simpflat/185 = flat/42/simpflat/193;
        write flat/39/simpflat/186 = flat/42/simpflat/194;
      }
      else
      {
        write flat/39/simpflat/183 = flat/38/simpflat/180;
        write flat/39/simpflat/184 = 0.0@{Double};
        write flat/39/simpflat/185 = 0.0@{Double};
        write flat/39/simpflat/186 = 0.0@{Double};
      }
      read flat/39/simpflat/195 = flat/39/simpflat/183 [Error];
      read flat/39/simpflat/196 = flat/39/simpflat/184 [Double];
      read flat/39/simpflat/197 = flat/39/simpflat/185 [Double];
      read flat/39/simpflat/198 = flat/39/simpflat/186 [Double];
      write flat/30/simpflat/141 = flat/39/simpflat/195;
      write flat/30/simpflat/142 = flat/39/simpflat/196;
      write flat/30/simpflat/143 = flat/39/simpflat/197;
      write flat/30/simpflat/144 = flat/39/simpflat/198;
    }
    else
    {
      write flat/30/simpflat/141 = a/conv/61/aval/2/simpflat/137;
      write flat/30/simpflat/142 = 0.0@{Double};
      write flat/30/simpflat/143 = 0.0@{Double};
      write flat/30/simpflat/144 = 0.0@{Double};
    }
    read flat/30/simpflat/199 = flat/30/simpflat/141 [Error];
    read flat/30/simpflat/200 = flat/30/simpflat/142 [Double];
    read flat/30/simpflat/201 = flat/30/simpflat/143 [Double];
    read flat/30/simpflat/202 = flat/30/simpflat/144 [Double];
    write acc/a/conv/61/simpflat/48 = flat/30/simpflat/199;
    write acc/a/conv/61/simpflat/49 = flat/30/simpflat/200;
    write acc/a/conv/61/simpflat/50 = flat/30/simpflat/201;
    write acc/a/conv/61/simpflat/51 = flat/30/simpflat/202;
  }
}
save_resumable@{Error} acc/a/conv/61/simpflat/48;
save_resumable@{Double} acc/a/conv/61/simpflat/49;
save_resumable@{Double} acc/a/conv/61/simpflat/50;
save_resumable@{Double} acc/a/conv/61/simpflat/51;
save_resumable@{Error} acc/conv/60/simpflat/42;
save_resumable@{Double} acc/conv/60/simpflat/43;
save_resumable@{Error} acc/s/reify/6/conv/12/simpflat/39;
save_resumable@{Double} acc/s/reify/6/conv/12/simpflat/40;
save_resumable@{Double} acc/s/reify/6/conv/12/simpflat/41;
save_resumable@{Error} acc/conv/11/simpflat/33;
save_resumable@{Double} acc/conv/11/simpflat/34;
read a/conv/61/simpflat/203 = acc/a/conv/61/simpflat/48 [Error];
read a/conv/61/simpflat/204 = acc/a/conv/61/simpflat/49 [Double];
read a/conv/61/simpflat/206 = acc/a/conv/61/simpflat/51 [Double];
read s/reify/6/conv/12/simpflat/207 = acc/s/reify/6/conv/12/simpflat/39 [Error];
read s/reify/6/conv/12/simpflat/208 = acc/s/reify/6/conv/12/simpflat/40 [Double];
init flat/86/simpflat/210@{Error} = ExceptNotAnError@{Error};
init flat/86/simpflat/211@{Double} = 0.0@{Double};
if (eq#@{Error} s/reify/6/conv/12/simpflat/207 (ExceptNotAnError@{Error}))
{
  write flat/86/simpflat/210 = ExceptNotAnError@{Error};
  write flat/86/simpflat/211 = s/reify/6/conv/12/simpflat/208;
}
else
{
  write flat/86/simpflat/210 = s/reify/6/conv/12/simpflat/207;
  write flat/86/simpflat/211 = 0.0@{Double};
}
read flat/86/simpflat/212 = flat/86/simpflat/210 [Error];
read flat/86/simpflat/213 = flat/86/simpflat/211 [Double];
init flat/87/simpflat/214@{Error} = ExceptNotAnError@{Error};
init flat/87/simpflat/215@{Double} = 0.0@{Double};
if (eq#@{Error} flat/86/simpflat/212 (ExceptNotAnError@{Error}))
{
  init flat/90/simpflat/216@{Error} = ExceptNotAnError@{Error};
  init flat/90/simpflat/217@{Double} = 0.0@{Double};
  if (eq#@{Error} a/conv/61/simpflat/203 (ExceptNotAnError@{Error}))
  {
    let conv/116 = sub#@{Double} a/conv/61/simpflat/204 (1.0@{Double});
    let simpflat/638 = div# a/conv/61/simpflat/206 conv/116;
    write flat/90/simpflat/216 = ExceptNotAnError@{Error};
    write flat/90/simpflat/217 = simpflat/638;
  }
  else
  {
    write flat/90/simpflat/216 = a/conv/61/simpflat/203;
    write flat/90/simpflat/217 = 0.0@{Double};
  }
  read flat/90/simpflat/218 = flat/90/simpflat/216 [Error];
  read flat/90/simpflat/219 = flat/90/simpflat/217 [Double];
  init flat/91/simpflat/220@{Error} = ExceptNotAnError@{Error};
  init flat/91/simpflat/221@{Double} = 0.0@{Double};
  if (eq#@{Error} flat/90/simpflat/218 (ExceptNotAnError@{Error}))
  {
    write flat/91/simpflat/220 = ExceptNotAnError@{Error};
    write flat/91/simpflat/221 = sqrt# flat/90/simpflat/219;
  }
  else
  {
    write flat/91/simpflat/220 = flat/90/simpflat/218;
    write flat/91/simpflat/221 = 0.0@{Double};
  }
  read flat/91/simpflat/222 = flat/91/simpflat/220 [Error];
  read flat/91/simpflat/223 = flat/91/simpflat/221 [Double];
  init flat/92/simpflat/224@{Error} = ExceptNotAnError@{Error};
  init flat/92/simpflat/225@{Double} = 0.0@{Double};
  if (eq#@{Error} flat/91/simpflat/222 (ExceptNotAnError@{Error}))
  {
    write flat/92/simpflat/224 = ExceptNotAnError@{Error};
    write flat/92/simpflat/225 = mul#@{Double} flat/86/simpflat/213 flat/91/simpflat/223;
  }
  else
  {
    write flat/92/simpflat/224 = flat/91/simpflat/222;
    write flat/92/simpflat/225 = 0.0@{Double};
  }
  read flat/92/simpflat/226 = flat/92/simpflat/224 [Error];
  read flat/92/simpflat/227 = flat/92/simpflat/225 [Double];
  write flat/87/simpflat/214 = flat/92/simpflat/226;
  write flat/87/simpflat/215 = flat/92/simpflat/227;
}
else
{
  write flat/87/simpflat/214 = flat/86/simpflat/212;
  write flat/87/simpflat/215 = 0.0@{Double};
}
read flat/87/simpflat/228 = flat/87/simpflat/214 [Error];
read flat/87/simpflat/229 = flat/87/simpflat/215 [Double];
output@{(Sum Error Double)} repl (flat/87/simpflat/228@{Error}, flat/87/simpflat/229@{Double});

- Flattened Avalanche (simplified), typechecked:
conv/3 = TIME
conv/4 = MAX_MAP_SIZE
init acc/conv/11/simpflat/33@{Error} = ExceptNotAnError@{Error};
init acc/conv/11/simpflat/34@{Double} = 0.0@{Double};
init acc/s/reify/6/conv/12/simpflat/39@{Error} = ExceptFold1NoValue@{Error};
init acc/s/reify/6/conv/12/simpflat/40@{Double} = 0.0@{Double};
init acc/s/reify/6/conv/12/simpflat/41@{Double} = 0.0@{Double};
init acc/conv/60/simpflat/42@{Error} = ExceptNotAnError@{Error};
init acc/conv/60/simpflat/43@{Double} = 0.0@{Double};
init acc/a/conv/61/simpflat/48@{Error} = ExceptNotAnError@{Error};
init acc/a/conv/61/simpflat/49@{Double} = 0.0@{Double};
init acc/a/conv/61/simpflat/50@{Double} = 0.0@{Double};
init acc/a/conv/61/simpflat/51@{Double} = 0.0@{Double};
load_resumable@{Error} acc/a/conv/61/simpflat/48;
load_resumable@{Double} acc/a/conv/61/simpflat/49;
load_resumable@{Double} acc/a/conv/61/simpflat/50;
load_resumable@{Double} acc/a/conv/61/simpflat/51;
load_resumable@{Error} acc/conv/60/simpflat/42;
load_resumable@{Double} acc/conv/60/simpflat/43;
load_resumable@{Error} acc/s/reify/6/conv/12/simpflat/39;
load_resumable@{Double} acc/s/reify/6/conv/12/simpflat/40;
load_resumable@{Double} acc/s/reify/6/conv/12/simpflat/41;
load_resumable@{Error} acc/conv/11/simpflat/33;
load_resumable@{Double} acc/conv/11/simpflat/34;
for_facts (conv/2@{Time}, conv/1@{FactIdentifier}, conv/0/simpflat/230@{Error}, conv/0/simpflat/231@{String}, conv/0/simpflat/232@{Int}, conv/0/simpflat/233@{Time}) in new
{
  init flat/0/simpflat/52@{Error} = ExceptNotAnError@{Error};
  init flat/0/simpflat/53@{Int} = 0@{Int};
  if (eq#@{Error} conv/0/simpflat/230 (ExceptNotAnError@{Error}))
  {
    write flat/0/simpflat/52 = ExceptNotAnError@{Error};
    write flat/0/simpflat/53 = conv/0/simpflat/232;
  }
  else
  {
    write flat/0/simpflat/52 = conv/0/simpflat/230;
    write flat/0/simpflat/53 = 0@{Int};
  }
  read flat/0/simpflat/54 = flat/0/simpflat/52 [Error];
  read flat/0/simpflat/55 = flat/0/simpflat/53 [Int];
  init flat/1/simpflat/56@{Error} = ExceptNotAnError@{Error};
  init flat/1/simpflat/57@{Double} = 0.0@{Double};
  if (eq#@{Error} flat/0/simpflat/54 (ExceptNotAnError@{Error}))
  {
    write flat/1/simpflat/56 = ExceptNotAnError@{Error};
    write flat/1/simpflat/57 = doubleOfInt# flat/0/simpflat/55;
  }
  else
  {
    write flat/1/simpflat/56 = flat/0/simpflat/54;
    write flat/1/simpflat/57 = 0.0@{Double};
  }
  read flat/1/simpflat/58 = flat/1/simpflat/56 [Error];
  read flat/1/simpflat/59 = flat/1/simpflat/57 [Double];
  init flat/2/simpflat/60@{Error} = ExceptNotAnError@{Error};
  init flat/2/simpflat/61@{Double} = 0.0@{Double};
  if (eq#@{Error} flat/1/simpflat/58 (ExceptNotAnError@{Error}))
  {
    write flat/2/simpflat/60 = ExceptNotAnError@{Error};
    write flat/2/simpflat/61 = flat/1/simpflat/59;
  }
  else
  {
    write flat/2/simpflat/60 = flat/1/simpflat/58;
    write flat/2/simpflat/61 = 0.0@{Double};
  }
  read flat/2/simpflat/62 = flat/2/simpflat/60 [Error];
  read flat/2/simpflat/63 = flat/2/simpflat/61 [Double];
  write acc/conv/11/simpflat/33 = flat/2/simpflat/62;
  write acc/conv/11/simpflat/34 = flat/2/simpflat/63;
  read conv/11/aval/1/simpflat/64 = acc/conv/11/simpflat/33 [Error];
  read conv/11/aval/1/simpflat/65 = acc/conv/11/simpflat/34 [Double];
  read s/reify/6/conv/12/aval/0/simpflat/70 = acc/s/reify/6/conv/12/simpflat/39 [Error];
  read s/reify/6/conv/12/aval/0/simpflat/71 = acc/s/reify/6/conv/12/simpflat/40 [Double];
  read s/reify/6/conv/12/aval/0/simpflat/72 = acc/s/reify/6/conv/12/simpflat/41 [Double];
  init flat/3/simpflat/73@{Error} = ExceptNotAnError@{Error};
  init flat/3/simpflat/74@{Double} = 0.0@{Double};
  init flat/3/simpflat/75@{Double} = 0.0@{Double};
  if (eq#@{Error} s/reify/6/conv/12/aval/0/simpflat/70 (ExceptNotAnError@{Error}))
  {
    init flat/10/simpflat/76@{Error} = ExceptNotAnError@{Error};
    init flat/10/simpflat/77@{Double} = 0.0@{Double};
    init flat/10/simpflat/78@{Double} = 0.0@{Double};
    if (eq#@{Error} s/reify/6/conv/12/aval/0/simpflat/70 (ExceptNotAnError@{Error}))
    {
      init flat/13/simpflat/79@{Error} = ExceptNotAnError@{Error};
      init flat/13/simpflat/80@{Double} = 0.0@{Double};
      if (eq#@{Error} conv/11/aval/1/simpflat/64 (ExceptNotAnError@{Error}))
      {
        write flat/13/simpflat/79 = ExceptNotAnError@{Error};
        write flat/13/simpflat/80 = sub#@{Double} conv/11/aval/1/simpflat/65 s/reify/6/conv/12/aval/0/simpflat/71;
      }
      else
      {
        write flat/13/simpflat/79 = conv/11/aval/1/simpflat/64;
        write flat/13/simpflat/80 = 0.0@{Double};
      }
      read flat/13/simpflat/81 = flat/13/simpflat/79 [Error];
      read flat/13/simpflat/82 = flat/13/simpflat/80 [Double];
      init flat/14/simpflat/83@{Error} = ExceptNotAnError@{Error};
      init flat/14/simpflat/84@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/13/simpflat/81 (ExceptNotAnError@{Error}))
      {
        write flat/14/simpflat/83 = ExceptNotAnError@{Error};
        let simpflat/285 = add#@{Double} s/reify/6/conv/12/aval/0/simpflat/72 (1.0@{Double});
        write flat/14/simpflat/84 = div# flat/13/simpflat/82 simpflat/285;
      }
      else
      {
        write flat/14/simpflat/83 = flat/13/simpflat/81;
        write flat/14/simpflat/84 = 0.0@{Double};
      }
      read flat/14/simpflat/85 = flat/14/simpflat/83 [Error];
      read flat/14/simpflat/86 = flat/14/simpflat/84 [Double];
      init flat/15/simpflat/87@{Error} = ExceptNotAnError@{Error};
      init flat/15/simpflat/88@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/14/simpflat/85 (ExceptNotAnError@{Error}))
      {
        write flat/15/simpflat/87 = ExceptNotAnError@{Error};
        write flat/15/simpflat/88 = add#@{Double} s/reify/6/conv/12/aval/0/simpflat/71 flat/14/simpflat/86;
      }
      else
      {
        write flat/15/simpflat/87 = flat/14/simpflat/85;
        write flat/15/simpflat/88 = 0.0@{Double};
      }
      read flat/15/simpflat/89 = flat/15/simpflat/87 [Error];
      read flat/15/simpflat/90 = flat/15/simpflat/88 [Double];
      init flat/16/simpflat/91@{Error} = ExceptNotAnError@{Error};
      init flat/16/simpflat/92@{Double} = 0.0@{Double};
      init flat/16/simpflat/93@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/15/simpflat/89 (ExceptNotAnError@{Error}))
      {
        write flat/16/simpflat/91 = ExceptNotAnError@{Error};
        write flat/16/simpflat/92 = flat/15/simpflat/90;
        write flat/16/simpflat/93 = add#@{Double} s/reify/6/conv/12/aval/0/simpflat/72 (1.0@{Double});
      }
      else
      {
        write flat/16/simpflat/91 = flat/15/simpflat/89;
        write flat/16/simpflat/92 = 0.0@{Double};
        write flat/16/simpflat/93 = 0.0@{Double};
      }
      read flat/16/simpflat/94 = flat/16/simpflat/91 [Error];
      read flat/16/simpflat/95 = flat/16/simpflat/92 [Double];
      read flat/16/simpflat/96 = flat/16/simpflat/93 [Double];
      write flat/10/simpflat/76 = flat/16/simpflat/94;
      write flat/10/simpflat/77 = flat/16/simpflat/95;
      write flat/10/simpflat/78 = flat/16/simpflat/96;
    }
    else
    {
      write flat/10/simpflat/76 = s/reify/6/conv/12/aval/0/simpflat/70;
      write flat/10/simpflat/77 = 0.0@{Double};
      write flat/10/simpflat/78 = 0.0@{Double};
    }
    read flat/10/simpflat/97 = flat/10/simpflat/76 [Error];
    read flat/10/simpflat/98 = flat/10/simpflat/77 [Double];
    read flat/10/simpflat/99 = flat/10/simpflat/78 [Double];
    write flat/3/simpflat/73 = flat/10/simpflat/97;
    write flat/3/simpflat/74 = flat/10/simpflat/98;
    write flat/3/simpflat/75 = flat/10/simpflat/99;
  }
  else
  {
    init flat/6/simpflat/100@{Error} = ExceptNotAnError@{Error};
    init flat/6/simpflat/101@{Double} = 0.0@{Double};
    init flat/6/simpflat/102@{Double} = 0.0@{Double};
    if (eq#@{Error} (ExceptFold1NoValue@{Error}) s/reify/6/conv/12/aval/0/simpflat/70)
    {
      init flat/7/simpflat/103@{Error} = ExceptNotAnError@{Error};
      init flat/7/simpflat/104@{Double} = 0.0@{Double};
      init flat/7/simpflat/105@{Double} = 0.0@{Double};
      if (eq#@{Error} conv/11/aval/1/simpflat/64 (ExceptNotAnError@{Error}))
      {
        write flat/7/simpflat/103 = ExceptNotAnError@{Error};
        write flat/7/simpflat/104 = conv/11/aval/1/simpflat/65;
        write flat/7/simpflat/105 = 1.0@{Double};
      }
      else
      {
        write flat/7/simpflat/103 = conv/11/aval/1/simpflat/64;
        write flat/7/simpflat/104 = 0.0@{Double};
        write flat/7/simpflat/105 = 0.0@{Double};
      }
      read flat/7/simpflat/106 = flat/7/simpflat/103 [Error];
      read flat/7/simpflat/107 = flat/7/simpflat/104 [Double];
      read flat/7/simpflat/108 = flat/7/simpflat/105 [Double];
      write flat/6/simpflat/100 = flat/7/simpflat/106;
      write flat/6/simpflat/101 = flat/7/simpflat/107;
      write flat/6/simpflat/102 = flat/7/simpflat/108;
    }
    else
    {
      write flat/6/simpflat/100 = s/reify/6/conv/12/aval/0/simpflat/70;
      write flat/6/simpflat/101 = 0.0@{Double};
      write flat/6/simpflat/102 = 0.0@{Double};
    }
    read flat/6/simpflat/109 = flat/6/simpflat/100 [Error];
    read flat/6/simpflat/110 = flat/6/simpflat/101 [Double];
    read flat/6/simpflat/111 = flat/6/simpflat/102 [Double];
    write flat/3/simpflat/73 = flat/6/simpflat/109;
    write flat/3/simpflat/74 = flat/6/simpflat/110;
    write flat/3/simpflat/75 = flat/6/simpflat/111;
  }
  read flat/3/simpflat/112 = flat/3/simpflat/73 [Error];
  read flat/3/simpflat/113 = flat/3/simpflat/74 [Double];
  read flat/3/simpflat/114 = flat/3/simpflat/75 [Double];
  write acc/s/reify/6/conv/12/simpflat/39 = flat/3/simpflat/112;
  write acc/s/reify/6/conv/12/simpflat/40 = flat/3/simpflat/113;
  write acc/s/reify/6/conv/12/simpflat/41 = flat/3/simpflat/114;
  init flat/25/simpflat/115@{Error} = ExceptNotAnError@{Error};
  init flat/25/simpflat/116@{String} = ""@{String};
  if (eq#@{Error} conv/0/simpflat/230 (ExceptNotAnError@{Error}))
  {
    write flat/25/simpflat/115 = ExceptNotAnError@{Error};
    write flat/25/simpflat/116 = conv/0/simpflat/231;
  }
  else
  {
    write flat/25/simpflat/115 = conv/0/simpflat/230;
    write flat/25/simpflat/116 = ""@{String};
  }
  read flat/25/simpflat/117 = flat/25/simpflat/115 [Error];
  read flat/25/simpflat/118 = flat/25/simpflat/116 [String];
  init flat/26/simpflat/119@{Error} = ExceptNotAnError@{Error};
  init flat/26/simpflat/120@{Bool} = False@{Bool};
  if (eq#@{Error} flat/25/simpflat/117 (ExceptNotAnError@{Error}))
  {
    write flat/26/simpflat/119 = ExceptNotAnError@{Error};
    write flat/26/simpflat/120 = eq#@{String} flat/25/simpflat/118 ("torso"@{String});
  }
  else
  {
    write flat/26/simpflat/119 = flat/25/simpflat/117;
    write flat/26/simpflat/120 = False@{Bool};
  }
  read flat/26/simpflat/121 = flat/26/simpflat/119 [Error];
  read flat/26/simpflat/122 = flat/26/simpflat/120 [Bool];
  init flat/27@{Bool} = False@{Bool};
  if (eq#@{Error} flat/26/simpflat/121 (ExceptNotAnError@{Error}))
  {
    write flat/27 = flat/26/simpflat/122;
  }
  else
  {
    write flat/27 = True@{Bool};
  }
  read flat/27 = flat/27 [Bool];
  if (flat/27)
  {
    init flat/28/simpflat/123@{Error} = ExceptNotAnError@{Error};
    init flat/28/simpflat/124@{Int} = 0@{Int};
    if (eq#@{Error} conv/0/simpflat/230 (ExceptNotAnError@{Error}))
    {
      write flat/28/simpflat/123 = ExceptNotAnError@{Error};
      write flat/28/simpflat/124 = conv/0/simpflat/232;
    }
    else
    {
      write flat/28/simpflat/123 = conv/0/simpflat/230;
      write flat/28/simpflat/124 = 0@{Int};
    }
    read flat/28/simpflat/125 = flat/28/simpflat/123 [Error];
    read flat/28/simpflat/126 = flat/28/simpflat/124 [Int];
    init flat/29/simpflat/127@{Error} = ExceptNotAnError@{Error};
    init flat/29/simpflat/128@{Double} = 0.0@{Double};
    if (eq#@{Error} flat/28/simpflat/125 (ExceptNotAnError@{Error}))
    {
      write flat/29/simpflat/127 = ExceptNotAnError@{Error};
      write flat/29/simpflat/128 = doubleOfInt# flat/28/simpflat/126;
    }
    else
    {
      write flat/29/simpflat/127 = flat/28/simpflat/125;
      write flat/29/simpflat/128 = 0.0@{Double};
    }
    read flat/29/simpflat/129 = flat/29/simpflat/127 [Error];
    read flat/29/simpflat/130 = flat/29/simpflat/128 [Double];
    write acc/conv/60/simpflat/42 = flat/29/simpflat/129;
    write acc/conv/60/simpflat/43 = flat/29/simpflat/130;
    read conv/60/aval/3/simpflat/131 = acc/conv/60/simpflat/42 [Error];
    read conv/60/aval/3/simpflat/132 = acc/conv/60/simpflat/43 [Double];
    read a/conv/61/aval/2/simpflat/137 = acc/a/conv/61/simpflat/48 [Error];
    read a/conv/61/aval/2/simpflat/138 = acc/a/conv/61/simpflat/49 [Double];
    read a/conv/61/aval/2/simpflat/139 = acc/a/conv/61/simpflat/50 [Double];
    read a/conv/61/aval/2/simpflat/140 = acc/a/conv/61/simpflat/51 [Double];
    init flat/30/simpflat/141@{Error} = ExceptNotAnError@{Error};
    init flat/30/simpflat/142@{Double} = 0.0@{Double};
    init flat/30/simpflat/143@{Double} = 0.0@{Double};
    init flat/30/simpflat/144@{Double} = 0.0@{Double};
    if (eq#@{Error} a/conv/61/aval/2/simpflat/137 (ExceptNotAnError@{Error}))
    {
      let nn/conv/68 = add#@{Double} a/conv/61/aval/2/simpflat/138 (1.0@{Double});
      init flat/33/simpflat/145@{Error} = ExceptNotAnError@{Error};
      init flat/33/simpflat/146@{Double} = 0.0@{Double};
      if (eq#@{Error} conv/60/aval/3/simpflat/131 (ExceptNotAnError@{Error}))
      {
        write flat/33/simpflat/145 = ExceptNotAnError@{Error};
        write flat/33/simpflat/146 = sub#@{Double} conv/60/aval/3/simpflat/132 a/conv/61/aval/2/simpflat/139;
      }
      else
      {
        write flat/33/simpflat/145 = conv/60/aval/3/simpflat/131;
        write flat/33/simpflat/146 = 0.0@{Double};
      }
      read flat/33/simpflat/147 = flat/33/simpflat/145 [Error];
      read flat/33/simpflat/148 = flat/33/simpflat/146 [Double];
      init flat/34/simpflat/149@{Error} = ExceptNotAnError@{Error};
      init flat/34/simpflat/150@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/33/simpflat/147 (ExceptNotAnError@{Error}))
      {
        write flat/34/simpflat/149 = ExceptNotAnError@{Error};
        write flat/34/simpflat/150 = div# flat/33/simpflat/148 nn/conv/68;
      }
      else
      {
        write flat/34/simpflat/149 = flat/33/simpflat/147;
        write flat/34/simpflat/150 = 0.0@{Double};
      }
      read flat/34/simpflat/151 = flat/34/simpflat/149 [Error];
      read flat/34/simpflat/152 = flat/34/simpflat/150 [Double];
      init flat/35/simpflat/153@{Error} = ExceptNotAnError@{Error};
      init flat/35/simpflat/154@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/34/simpflat/151 (ExceptNotAnError@{Error}))
      {
        write flat/35/simpflat/153 = ExceptNotAnError@{Error};
        write flat/35/simpflat/154 = add#@{Double} a/conv/61/aval/2/simpflat/139 flat/34/simpflat/152;
      }
      else
      {
        write flat/35/simpflat/153 = flat/34/simpflat/151;
        write flat/35/simpflat/154 = 0.0@{Double};
      }
      read flat/35/simpflat/155 = flat/35/simpflat/153 [Error];
      read flat/35/simpflat/156 = flat/35/simpflat/154 [Double];
      init flat/36/simpflat/157@{Error} = ExceptNotAnError@{Error};
      init flat/36/simpflat/158@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/33/simpflat/147 (ExceptNotAnError@{Error}))
      {
        init flat/51/simpflat/159@{Error} = ExceptNotAnError@{Error};
        init flat/51/simpflat/160@{Double} = 0.0@{Double};
        if (eq#@{Error} conv/60/aval/3/simpflat/131 (ExceptNotAnError@{Error}))
        {
          init flat/57/simpflat/161@{Error} = ExceptNotAnError@{Error};
          init flat/57/simpflat/162@{Double} = 0.0@{Double};
          if (eq#@{Error} flat/35/simpflat/155 (ExceptNotAnError@{Error}))
          {
            write flat/57/simpflat/161 = ExceptNotAnError@{Error};
            write flat/57/simpflat/162 = sub#@{Double} conv/60/aval/3/simpflat/132 flat/35/simpflat/156;
          }
          else
          {
            write flat/57/simpflat/161 = flat/35/simpflat/155;
            write flat/57/simpflat/162 = 0.0@{Double};
          }
          read flat/57/simpflat/163 = flat/57/simpflat/161 [Error];
          read flat/57/simpflat/164 = flat/57/simpflat/162 [Double];
          write flat/51/simpflat/159 = flat/57/simpflat/163;
          write flat/51/simpflat/160 = flat/57/simpflat/164;
        }
        else
        {
          write flat/51/simpflat/159 = conv/60/aval/3/simpflat/131;
          write flat/51/simpflat/160 = 0.0@{Double};
        }
        read flat/51/simpflat/165 = flat/51/simpflat/159 [Error];
        read flat/51/simpflat/166 = flat/51/simpflat/160 [Double];
        init flat/52/simpflat/167@{Error} = ExceptNotAnError@{Error};
        init flat/52/simpflat/168@{Double} = 0.0@{Double};
        if (eq#@{Error} flat/51/simpflat/165 (ExceptNotAnError@{Error}))
        {
          write flat/52/simpflat/167 = ExceptNotAnError@{Error};
          write flat/52/simpflat/168 = mul#@{Double} flat/33/simpflat/148 flat/51/simpflat/166;
        }
        else
        {
          write flat/52/simpflat/167 = flat/51/simpflat/165;
          write flat/52/simpflat/168 = 0.0@{Double};
        }
        read flat/52/simpflat/169 = flat/52/simpflat/167 [Error];
        read flat/52/simpflat/170 = flat/52/simpflat/168 [Double];
        write flat/36/simpflat/157 = flat/52/simpflat/169;
        write flat/36/simpflat/158 = flat/52/simpflat/170;
      }
      else
      {
        write flat/36/simpflat/157 = flat/33/simpflat/147;
        write flat/36/simpflat/158 = 0.0@{Double};
      }
      read flat/36/simpflat/171 = flat/36/simpflat/157 [Error];
      read flat/36/simpflat/172 = flat/36/simpflat/158 [Double];
      init flat/37/simpflat/173@{Error} = ExceptNotAnError@{Error};
      init flat/37/simpflat/174@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/36/simpflat/171 (ExceptNotAnError@{Error}))
      {
        write flat/37/simpflat/173 = ExceptNotAnError@{Error};
        write flat/37/simpflat/174 = add#@{Double} a/conv/61/aval/2/simpflat/140 flat/36/simpflat/172;
      }
      else
      {
        write flat/37/simpflat/173 = flat/36/simpflat/171;
        write flat/37/simpflat/174 = 0.0@{Double};
      }
      read flat/37/simpflat/175 = flat/37/simpflat/173 [Error];
      read flat/37/simpflat/176 = flat/37/simpflat/174 [Double];
      init flat/38/simpflat/177@{Error} = ExceptNotAnError@{Error};
      init flat/38/simpflat/178@{Double} = 0.0@{Double};
      init flat/38/simpflat/179@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/35/simpflat/155 (ExceptNotAnError@{Error}))
      {
        write flat/38/simpflat/177 = ExceptNotAnError@{Error};
        write flat/38/simpflat/178 = add#@{Double} a/conv/61/aval/2/simpflat/138 (1.0@{Double});
        write flat/38/simpflat/179 = flat/35/simpflat/156;
      }
      else
      {
        write flat/38/simpflat/177 = flat/35/simpflat/155;
        write flat/38/simpflat/178 = 0.0@{Double};
        write flat/38/simpflat/179 = 0.0@{Double};
      }
      read flat/38/simpflat/180 = flat/38/simpflat/177 [Error];
      read flat/38/simpflat/181 = flat/38/simpflat/178 [Double];
      read flat/38/simpflat/182 = flat/38/simpflat/179 [Double];
      init flat/39/simpflat/183@{Error} = ExceptNotAnError@{Error};
      init flat/39/simpflat/184@{Double} = 0.0@{Double};
      init flat/39/simpflat/185@{Double} = 0.0@{Double};
      init flat/39/simpflat/186@{Double} = 0.0@{Double};
      if (eq#@{Error} flat/38/simpflat/180 (ExceptNotAnError@{Error}))
      {
        init flat/42/simpflat/187@{Error} = ExceptNotAnError@{Error};
        init flat/42/simpflat/188@{Double} = 0.0@{Double};
        init flat/42/simpflat/189@{Double} = 0.0@{Double};
        init flat/42/simpflat/190@{Double} = 0.0@{Double};
        if (eq#@{Error} flat/37/simpflat/175 (ExceptNotAnError@{Error}))
        {
          write flat/42/simpflat/187 = ExceptNotAnError@{Error};
          write flat/42/simpflat/188 = flat/38/simpflat/181;
          write flat/42/simpflat/189 = flat/38/simpflat/182;
          write flat/42/simpflat/190 = flat/37/simpflat/176;
        }
        else
        {
          write flat/42/simpflat/187 = flat/37/simpflat/175;
          write flat/42/simpflat/188 = 0.0@{Double};
          write flat/42/simpflat/189 = 0.0@{Double};
          write flat/42/simpflat/190 = 0.0@{Double};
        }
        read flat/42/simpflat/191 = flat/42/simpflat/187 [Error];
        read flat/42/simpflat/192 = flat/42/simpflat/188 [Double];
        read flat/42/simpflat/193 = flat/42/simpflat/189 [Double];
        read flat/42/simpflat/194 = flat/42/simpflat/190 [Double];
        write flat/39/simpflat/183 = flat/42/simpflat/191;
        write flat/39/simpflat/184 = flat/42/simpflat/192;
        write flat/39/simpflat/185 = flat/42/simpflat/193;
        write flat/39/simpflat/186 = flat/42/simpflat/194;
      }
      else
      {
        write flat/39/simpflat/183 = flat/38/simpflat/180;
        write flat/39/simpflat/184 = 0.0@{Double};
        write flat/39/simpflat/185 = 0.0@{Double};
        write flat/39/simpflat/186 = 0.0@{Double};
      }
      read flat/39/simpflat/195 = flat/39/simpflat/183 [Error];
      read flat/39/simpflat/196 = flat/39/simpflat/184 [Double];
      read flat/39/simpflat/197 = flat/39/simpflat/185 [Double];
      read flat/39/simpflat/198 = flat/39/simpflat/186 [Double];
      write flat/30/simpflat/141 = flat/39/simpflat/195;
      write flat/30/simpflat/142 = flat/39/simpflat/196;
      write flat/30/simpflat/143 = flat/39/simpflat/197;
      write flat/30/simpflat/144 = flat/39/simpflat/198;
    }
    else
    {
      write flat/30/simpflat/141 = a/conv/61/aval/2/simpflat/137;
      write flat/30/simpflat/142 = 0.0@{Double};
      write flat/30/simpflat/143 = 0.0@{Double};
      write flat/30/simpflat/144 = 0.0@{Double};
    }
    read flat/30/simpflat/199 = flat/30/simpflat/141 [Error];
    read flat/30/simpflat/200 = flat/30/simpflat/142 [Double];
    read flat/30/simpflat/201 = flat/30/simpflat/143 [Double];
    read flat/30/simpflat/202 = flat/30/simpflat/144 [Double];
    write acc/a/conv/61/simpflat/48 = flat/30/simpflat/199;
    write acc/a/conv/61/simpflat/49 = flat/30/simpflat/200;
    write acc/a/conv/61/simpflat/50 = flat/30/simpflat/201;
    write acc/a/conv/61/simpflat/51 = flat/30/simpflat/202;
  }
}
save_resumable@{Error} acc/a/conv/61/simpflat/48;
save_resumable@{Double} acc/a/conv/61/simpflat/49;
save_resumable@{Double} acc/a/conv/61/simpflat/50;
save_resumable@{Double} acc/a/conv/61/simpflat/51;
save_resumable@{Error} acc/conv/60/simpflat/42;
save_resumable@{Double} acc/conv/60/simpflat/43;
save_resumable@{Error} acc/s/reify/6/conv/12/simpflat/39;
save_resumable@{Double} acc/s/reify/6/conv/12/simpflat/40;
save_resumable@{Double} acc/s/reify/6/conv/12/simpflat/41;
save_resumable@{Error} acc/conv/11/simpflat/33;
save_resumable@{Double} acc/conv/11/simpflat/34;
read a/conv/61/simpflat/203 = acc/a/conv/61/simpflat/48 [Error];
read a/conv/61/simpflat/204 = acc/a/conv/61/simpflat/49 [Double];
read a/conv/61/simpflat/206 = acc/a/conv/61/simpflat/51 [Double];
read s/reify/6/conv/12/simpflat/207 = acc/s/reify/6/conv/12/simpflat/39 [Error];
read s/reify/6/conv/12/simpflat/208 = acc/s/reify/6/conv/12/simpflat/40 [Double];
init flat/86/simpflat/210@{Error} = ExceptNotAnError@{Error};
init flat/86/simpflat/211@{Double} = 0.0@{Double};
if (eq#@{Error} s/reify/6/conv/12/simpflat/207 (ExceptNotAnError@{Error}))
{
  write flat/86/simpflat/210 = ExceptNotAnError@{Error};
  write flat/86/simpflat/211 = s/reify/6/conv/12/simpflat/208;
}
else
{
  write flat/86/simpflat/210 = s/reify/6/conv/12/simpflat/207;
  write flat/86/simpflat/211 = 0.0@{Double};
}
read flat/86/simpflat/212 = flat/86/simpflat/210 [Error];
read flat/86/simpflat/213 = flat/86/simpflat/211 [Double];
init flat/87/simpflat/214@{Error} = ExceptNotAnError@{Error};
init flat/87/simpflat/215@{Double} = 0.0@{Double};
if (eq#@{Error} flat/86/simpflat/212 (ExceptNotAnError@{Error}))
{
  init flat/90/simpflat/216@{Error} = ExceptNotAnError@{Error};
  init flat/90/simpflat/217@{Double} = 0.0@{Double};
  if (eq#@{Error} a/conv/61/simpflat/203 (ExceptNotAnError@{Error}))
  {
    let conv/116 = sub#@{Double} a/conv/61/simpflat/204 (1.0@{Double});
    let simpflat/638 = div# a/conv/61/simpflat/206 conv/116;
    write flat/90/simpflat/216 = ExceptNotAnError@{Error};
    write flat/90/simpflat/217 = simpflat/638;
  }
  else
  {
    write flat/90/simpflat/216 = a/conv/61/simpflat/203;
    write flat/90/simpflat/217 = 0.0@{Double};
  }
  read flat/90/simpflat/218 = flat/90/simpflat/216 [Error];
  read flat/90/simpflat/219 = flat/90/simpflat/217 [Double];
  init flat/91/simpflat/220@{Error} = ExceptNotAnError@{Error};
  init flat/91/simpflat/221@{Double} = 0.0@{Double};
  if (eq#@{Error} flat/90/simpflat/218 (ExceptNotAnError@{Error}))
  {
    write flat/91/simpflat/220 = ExceptNotAnError@{Error};
    write flat/91/simpflat/221 = sqrt# flat/90/simpflat/219;
  }
  else
  {
    write flat/91/simpflat/220 = flat/90/simpflat/218;
    write flat/91/simpflat/221 = 0.0@{Double};
  }
  read flat/91/simpflat/222 = flat/91/simpflat/220 [Error];
  read flat/91/simpflat/223 = flat/91/simpflat/221 [Double];
  init flat/92/simpflat/224@{Error} = ExceptNotAnError@{Error};
  init flat/92/simpflat/225@{Double} = 0.0@{Double};
  if (eq#@{Error} flat/91/simpflat/222 (ExceptNotAnError@{Error}))
  {
    write flat/92/simpflat/224 = ExceptNotAnError@{Error};
    write flat/92/simpflat/225 = mul#@{Double} flat/86/simpflat/213 flat/91/simpflat/223;
  }
  else
  {
    write flat/92/simpflat/224 = flat/91/simpflat/222;
    write flat/92/simpflat/225 = 0.0@{Double};
  }
  read flat/92/simpflat/226 = flat/92/simpflat/224 [Error];
  read flat/92/simpflat/227 = flat/92/simpflat/225 [Double];
  write flat/87/simpflat/214 = flat/92/simpflat/226;
  write flat/87/simpflat/215 = flat/92/simpflat/227;
}
else
{
  write flat/87/simpflat/214 = flat/86/simpflat/212;
  write flat/87/simpflat/215 = 0.0@{Double};
}
read flat/87/simpflat/228 = flat/87/simpflat/214 [Error];
read flat/87/simpflat/229 = flat/87/simpflat/215 [Double];
output@{(Sum Error Double)} repl (flat/87/simpflat/228@{Error}, flat/87/simpflat/229@{Double});

- C:
#line 1 "state and input definition #0 - repl"

typedef struct {
    itime_t          convzs3;
    iint_t           new_count;
    ierror_t         *new_convzs0zssimpflatzs230;
    istring_t        *new_convzs0zssimpflatzs231;
    iint_t           *new_convzs0zssimpflatzs232;
    itime_t          *new_convzs0zssimpflatzs233;
} input_repl_t;

typedef struct {
    /* runtime */
    anemone_mempool_t *mempool;
    iint_t           max_map_size;

    /* inputs */
    input_repl_t     input;

  /* compute for (0,0) */
    /* outputs */
    ierror_t         replzsixzs0;
    idouble_t        replzsixzs1;

    /* resumables: values */
    idouble_t        res_0_0_acczsconvzs11zssimpflatzs34;
    ierror_t         res_0_0_acczsconvzs11zssimpflatzs33;
    idouble_t        res_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs41;
    idouble_t        res_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs40;
    ierror_t         res_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs39;
    ierror_t         res_0_0_acczsconvzs60zssimpflatzs42;
    idouble_t        res_0_0_acczsconvzs60zssimpflatzs43;
    idouble_t        res_0_0_acczsazsconvzs61zssimpflatzs49;
    ierror_t         res_0_0_acczsazsconvzs61zssimpflatzs48;
    idouble_t        res_0_0_acczsazsconvzs61zssimpflatzs50;
    idouble_t        res_0_0_acczsazsconvzs61zssimpflatzs51;

    /* resumables: has flags */
    ibool_t          has_flags_start_0_0;
    ibool_t          has_0_0_acczsconvzs11zssimpflatzs34;
    ibool_t          has_0_0_acczsconvzs11zssimpflatzs33;
    ibool_t          has_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs41;
    ibool_t          has_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs40;
    ibool_t          has_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs39;
    ibool_t          has_0_0_acczsconvzs60zssimpflatzs42;
    ibool_t          has_0_0_acczsconvzs60zssimpflatzs43;
    ibool_t          has_0_0_acczsazsconvzs61zssimpflatzs49;
    ibool_t          has_0_0_acczsazsconvzs61zssimpflatzs48;
    ibool_t          has_0_0_acczsazsconvzs61zssimpflatzs50;
    ibool_t          has_0_0_acczsazsconvzs61zssimpflatzs51;
    ibool_t          has_flags_end_0_0;


} iattribute_0_t;

iint_t size_of_state_iattribute_0 ()
{
    return sizeof (iattribute_0_t);
}

#line 1 "compute function #0 - repl icompute_attribute_0_compute_0"
void icompute_attribute_0_compute_0(iattribute_0_t *s)
{
    idouble_t        flatzs29zssimpflatzs130;
    ierror_t         flatzs91zssimpflatzs220;
    idouble_t        flatzs91zssimpflatzs221;
    ierror_t         flatzs91zssimpflatzs222;
    idouble_t        flatzs91zssimpflatzs223;
    ierror_t         flatzs92zssimpflatzs226;
    idouble_t        flatzs92zssimpflatzs227;
    ierror_t         flatzs92zssimpflatzs224;
    idouble_t        flatzs92zssimpflatzs225;
    idouble_t        flatzs38zssimpflatzs178;
    idouble_t        flatzs38zssimpflatzs179;
    ierror_t         flatzs38zssimpflatzs177;
    idouble_t        flatzs37zssimpflatzs176;
    idouble_t        flatzs37zssimpflatzs174;
    ierror_t         flatzs37zssimpflatzs175;
    ierror_t         flatzs37zssimpflatzs173;
    ierror_t         flatzs36zssimpflatzs171;
    idouble_t        flatzs36zssimpflatzs172;
    istring_t        flatzs25zssimpflatzs116;
    ierror_t         flatzs25zssimpflatzs115;
    ierror_t         flatzs25zssimpflatzs117;
    istring_t        flatzs25zssimpflatzs118;
    ierror_t         flatzs26zssimpflatzs119;
    idouble_t        flatzs33zssimpflatzs148;
    ierror_t         flatzs33zssimpflatzs145;
    ierror_t         flatzs33zssimpflatzs147;
    idouble_t        flatzs33zssimpflatzs146;
    ierror_t         flatzs34zssimpflatzs149;
    idouble_t        flatzs30zssimpflatzs142;
    idouble_t        flatzs30zssimpflatzs143;
    ierror_t         flatzs30zssimpflatzs141;
    idouble_t        flatzs30zssimpflatzs144;
    ierror_t         flatzs3zssimpflatzs73;
    idouble_t        flatzs3zssimpflatzs74;
    idouble_t        flatzs3zssimpflatzs75;
    idouble_t        flatzs90zssimpflatzs217;
    ierror_t         flatzs90zssimpflatzs216;
    idouble_t        flatzs90zssimpflatzs219;
    ierror_t         flatzs90zssimpflatzs218;
    ierror_t         flatzs34zssimpflatzs151;
    idouble_t        flatzs34zssimpflatzs152;
    idouble_t        flatzs34zssimpflatzs150;
    idouble_t        flatzs36zssimpflatzs158;
    ierror_t         flatzs36zssimpflatzs157;
    ierror_t         flatzs35zssimpflatzs153;
    idouble_t        flatzs35zssimpflatzs154;
    ierror_t         flatzs35zssimpflatzs155;
    idouble_t        flatzs35zssimpflatzs156;
    idouble_t        acczsconvzs11zssimpflatzs34;
    ierror_t         acczsconvzs11zssimpflatzs33;
    idouble_t        flatzs15zssimpflatzs88;
    ierror_t         flatzs15zssimpflatzs89;
    ierror_t         flatzs15zssimpflatzs87;
    idouble_t        flatzs14zssimpflatzs86;
    idouble_t        flatzs14zssimpflatzs84;
    ierror_t         flatzs14zssimpflatzs85;
    ierror_t         flatzs14zssimpflatzs83;
    idouble_t        flatzs13zssimpflatzs80;
    ierror_t         flatzs13zssimpflatzs81;
    idouble_t        flatzs13zssimpflatzs82;
    ierror_t         flatzs10zssimpflatzs97;
    idouble_t        flatzs10zssimpflatzs99;
    idouble_t        flatzs10zssimpflatzs98;
    idouble_t        flatzs15zssimpflatzs90;
    idouble_t        flatzs16zssimpflatzs96;
    idouble_t        flatzs16zssimpflatzs95;
    ierror_t         flatzs16zssimpflatzs94;
    idouble_t        flatzs16zssimpflatzs93;
    idouble_t        flatzs16zssimpflatzs92;
    ierror_t         flatzs16zssimpflatzs91;
    ierror_t         flatzs29zssimpflatzs129;
    idouble_t        flatzs29zssimpflatzs128;
    ierror_t         flatzs29zssimpflatzs127;
    ierror_t         flatzs28zssimpflatzs123;
    iint_t           flatzs28zssimpflatzs124;
    ierror_t         flatzs28zssimpflatzs125;
    iint_t           flatzs28zssimpflatzs126;
    ibool_t          flatzs26zssimpflatzs120;
    ierror_t         flatzs26zssimpflatzs121;
    ibool_t          flatzs26zssimpflatzs122;
    ierror_t         flatzs13zssimpflatzs79;
    idouble_t        flatzs10zssimpflatzs78;
    idouble_t        flatzs10zssimpflatzs77;
    ierror_t         flatzs10zssimpflatzs76;
    ierror_t         flatzs3zssimpflatzs112;
    idouble_t        flatzs3zssimpflatzs114;
    idouble_t        flatzs3zssimpflatzs113;
    idouble_t        flatzs6zssimpflatzs110;
    idouble_t        flatzs6zssimpflatzs111;
    idouble_t        flatzs7zssimpflatzs108;
    ierror_t         flatzs7zssimpflatzs106;
    idouble_t        flatzs7zssimpflatzs107;
    idouble_t        flatzs7zssimpflatzs104;
    idouble_t        flatzs7zssimpflatzs105;
    ierror_t         flatzs7zssimpflatzs103;
    idouble_t        flatzs6zssimpflatzs101;
    ierror_t         flatzs6zssimpflatzs100;
    idouble_t        flatzs6zssimpflatzs102;
    ierror_t         flatzs6zssimpflatzs109;
    idouble_t        flatzs38zssimpflatzs182;
    idouble_t        flatzs38zssimpflatzs181;
    ierror_t         flatzs38zssimpflatzs180;
    idouble_t        flatzs39zssimpflatzs185;
    idouble_t        flatzs39zssimpflatzs184;
    idouble_t        flatzs39zssimpflatzs186;
    ierror_t         flatzs39zssimpflatzs183;
    ierror_t         flatzs30zssimpflatzs199;
    idouble_t        flatzs39zssimpflatzs196;
    idouble_t        flatzs39zssimpflatzs197;
    idouble_t        flatzs39zssimpflatzs198;
    ierror_t         flatzs39zssimpflatzs195;
    idouble_t        flatzs30zssimpflatzs200;
    idouble_t        flatzs30zssimpflatzs202;
    idouble_t        flatzs30zssimpflatzs201;
    idouble_t        acczsszsreifyzs6zsconvzs12zssimpflatzs41;
    idouble_t        acczsszsreifyzs6zsconvzs12zssimpflatzs40;
    idouble_t        azsconvzs61zsavalzs2zssimpflatzs140;
    ierror_t         acczsszsreifyzs6zsconvzs12zssimpflatzs39;
    ierror_t         azsconvzs61zssimpflatzs203;
    idouble_t        azsconvzs61zssimpflatzs204;
    idouble_t        azsconvzs61zssimpflatzs206;
    idouble_t        flatzs42zssimpflatzs188;
    idouble_t        flatzs42zssimpflatzs189;
    ierror_t         flatzs42zssimpflatzs187;
    ierror_t         szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs70;
    idouble_t        szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs71;
    idouble_t        szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs72;
    ierror_t         azsconvzs61zsavalzs2zssimpflatzs137;
    idouble_t        azsconvzs61zsavalzs2zssimpflatzs139;
    idouble_t        azsconvzs61zsavalzs2zssimpflatzs138;
    idouble_t        convzs60zsavalzs3zssimpflatzs132;
    ierror_t         convzs60zsavalzs3zssimpflatzs131;
    ierror_t         flatzs42zssimpflatzs191;
    idouble_t        flatzs42zssimpflatzs190;
    idouble_t        flatzs42zssimpflatzs194;
    idouble_t        flatzs42zssimpflatzs193;
    idouble_t        flatzs42zssimpflatzs192;
    idouble_t        flatzs52zssimpflatzs170;
    ierror_t         acczsconvzs60zssimpflatzs42;
    idouble_t        acczsconvzs60zssimpflatzs43;
    ierror_t         flatzs57zssimpflatzs161;
    ierror_t         flatzs57zssimpflatzs163;
    idouble_t        flatzs57zssimpflatzs162;
    idouble_t        flatzs57zssimpflatzs164;
    ierror_t         flatzs52zssimpflatzs167;
    ierror_t         flatzs52zssimpflatzs169;
    idouble_t        flatzs52zssimpflatzs168;
    ierror_t         flatzs51zssimpflatzs165;
    idouble_t        flatzs51zssimpflatzs160;
    idouble_t        flatzs51zssimpflatzs166;
    idouble_t        acczsazsconvzs61zssimpflatzs49;
    ierror_t         acczsazsconvzs61zssimpflatzs48;
    idouble_t        acczsazsconvzs61zssimpflatzs50;
    idouble_t        acczsazsconvzs61zssimpflatzs51;
    ierror_t         flatzs51zssimpflatzs159;
    ierror_t         szsreifyzs6zsconvzs12zssimpflatzs207;
    idouble_t        szsreifyzs6zsconvzs12zssimpflatzs208;
    ibool_t          flatzs27;
    idouble_t        flatzs2zssimpflatzs63;
    ierror_t         flatzs2zssimpflatzs62;
    idouble_t        flatzs2zssimpflatzs61;
    ierror_t         flatzs2zssimpflatzs60;
    ierror_t         flatzs87zssimpflatzs228;
    idouble_t        flatzs87zssimpflatzs229;
    ierror_t         flatzs1zssimpflatzs58;
    idouble_t        flatzs1zssimpflatzs59;
    ierror_t         flatzs1zssimpflatzs56;
    idouble_t        flatzs1zssimpflatzs57;
    ierror_t         flatzs0zssimpflatzs52;
    iint_t           flatzs0zssimpflatzs53;
    ierror_t         flatzs0zssimpflatzs54;
    iint_t           flatzs0zssimpflatzs55;
    idouble_t        convzs11zsavalzs1zssimpflatzs65;
    ierror_t         convzs11zsavalzs1zssimpflatzs64;
    ierror_t         flatzs86zssimpflatzs212;
    idouble_t        flatzs86zssimpflatzs211;
    ierror_t         flatzs86zssimpflatzs210;
    idouble_t        flatzs86zssimpflatzs213;
    ierror_t         flatzs87zssimpflatzs214;
    idouble_t        flatzs87zssimpflatzs215;

    anemone_mempool_t *mempool                = s->mempool;
    itime_t          convzs3                  = s->input.convzs3;
    iint_t           convzs4                  = s->max_map_size;

    acczsconvzs11zssimpflatzs33               = ierror_not_an_error;                  /* init */
    acczsconvzs11zssimpflatzs34               = 0.0;                                  /* init */
    acczsszsreifyzs6zsconvzs12zssimpflatzs39  = ierror_fold1_no_value;                /* init */
    acczsszsreifyzs6zsconvzs12zssimpflatzs40  = 0.0;                                  /* init */
    acczsszsreifyzs6zsconvzs12zssimpflatzs41  = 0.0;                                  /* init */
    acczsconvzs60zssimpflatzs42               = ierror_not_an_error;                  /* init */
    acczsconvzs60zssimpflatzs43               = 0.0;                                  /* init */
    acczsazsconvzs61zssimpflatzs48            = ierror_not_an_error;                  /* init */
    acczsazsconvzs61zssimpflatzs49            = 0.0;                                  /* init */
    acczsazsconvzs61zssimpflatzs50            = 0.0;                                  /* init */
    acczsazsconvzs61zssimpflatzs51            = 0.0;                                  /* init */
    
    if (s->has_0_0_acczsazsconvzs61zssimpflatzs48) {
        acczsazsconvzs61zssimpflatzs48        = s->res_0_0_acczsazsconvzs61zssimpflatzs48; /* load */
    }
    
    if (s->has_0_0_acczsazsconvzs61zssimpflatzs49) {
        acczsazsconvzs61zssimpflatzs49        = s->res_0_0_acczsazsconvzs61zssimpflatzs49; /* load */
    }
    
    if (s->has_0_0_acczsazsconvzs61zssimpflatzs50) {
        acczsazsconvzs61zssimpflatzs50        = s->res_0_0_acczsazsconvzs61zssimpflatzs50; /* load */
    }
    
    if (s->has_0_0_acczsazsconvzs61zssimpflatzs51) {
        acczsazsconvzs61zssimpflatzs51        = s->res_0_0_acczsazsconvzs61zssimpflatzs51; /* load */
    }
    
    if (s->has_0_0_acczsconvzs60zssimpflatzs42) {
        acczsconvzs60zssimpflatzs42           = s->res_0_0_acczsconvzs60zssimpflatzs42; /* load */
    }
    
    if (s->has_0_0_acczsconvzs60zssimpflatzs43) {
        acczsconvzs60zssimpflatzs43           = s->res_0_0_acczsconvzs60zssimpflatzs43; /* load */
    }
    
    if (s->has_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs39) {
        acczsszsreifyzs6zsconvzs12zssimpflatzs39 = s->res_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs39; /* load */
    }
    
    if (s->has_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs40) {
        acczsszsreifyzs6zsconvzs12zssimpflatzs40 = s->res_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs40; /* load */
    }
    
    if (s->has_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs41) {
        acczsszsreifyzs6zsconvzs12zssimpflatzs41 = s->res_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs41; /* load */
    }
    
    if (s->has_0_0_acczsconvzs11zssimpflatzs33) {
        acczsconvzs11zssimpflatzs33           = s->res_0_0_acczsconvzs11zssimpflatzs33; /* load */
    }
    
    if (s->has_0_0_acczsconvzs11zssimpflatzs34) {
        acczsconvzs11zssimpflatzs34           = s->res_0_0_acczsconvzs11zssimpflatzs34; /* load */
    }
    
    const iint_t     new_count                = s->input.new_count;
    const ierror_t  *const new_convzs0zssimpflatzs230 = s->input.new_convzs0zssimpflatzs230;
    const istring_t *const new_convzs0zssimpflatzs231 = s->input.new_convzs0zssimpflatzs231;
    const iint_t    *const new_convzs0zssimpflatzs232 = s->input.new_convzs0zssimpflatzs232;
    const itime_t   *const new_convzs0zssimpflatzs233 = s->input.new_convzs0zssimpflatzs233;
    
    for (iint_t i = 0; i < new_count; i++) {
        ifactid_t        convzs1              = i;
        itime_t          convzs2              = new_convzs0zssimpflatzs233[i];
        ierror_t         convzs0zssimpflatzs230 = new_convzs0zssimpflatzs230[i];
        istring_t        convzs0zssimpflatzs231 = new_convzs0zssimpflatzs231[i];
        iint_t           convzs0zssimpflatzs232 = new_convzs0zssimpflatzs232[i];
        itime_t          convzs0zssimpflatzs233 = new_convzs0zssimpflatzs233[i];
        flatzs0zssimpflatzs52                 = ierror_not_an_error;                  /* init */
        flatzs0zssimpflatzs53                 = 0;                                    /* init */
        
        if (ierror_eq (convzs0zssimpflatzs230, ierror_not_an_error)) {
            flatzs0zssimpflatzs52             = ierror_not_an_error;                  /* write */
            flatzs0zssimpflatzs53             = convzs0zssimpflatzs232;               /* write */
        } else {
            flatzs0zssimpflatzs52             = convzs0zssimpflatzs230;               /* write */
            flatzs0zssimpflatzs53             = 0;                                    /* write */
        }
        
        flatzs0zssimpflatzs54                 = flatzs0zssimpflatzs52;                /* read */
        flatzs0zssimpflatzs55                 = flatzs0zssimpflatzs53;                /* read */
        flatzs1zssimpflatzs56                 = ierror_not_an_error;                  /* init */
        flatzs1zssimpflatzs57                 = 0.0;                                  /* init */
        
        if (ierror_eq (flatzs0zssimpflatzs54, ierror_not_an_error)) {
            flatzs1zssimpflatzs56             = ierror_not_an_error;                  /* write */
            flatzs1zssimpflatzs57             = iint_extend (flatzs0zssimpflatzs55);  /* write */
        } else {
            flatzs1zssimpflatzs56             = flatzs0zssimpflatzs54;                /* write */
            flatzs1zssimpflatzs57             = 0.0;                                  /* write */
        }
        
        flatzs1zssimpflatzs58                 = flatzs1zssimpflatzs56;                /* read */
        flatzs1zssimpflatzs59                 = flatzs1zssimpflatzs57;                /* read */
        flatzs2zssimpflatzs60                 = ierror_not_an_error;                  /* init */
        flatzs2zssimpflatzs61                 = 0.0;                                  /* init */
        
        if (ierror_eq (flatzs1zssimpflatzs58, ierror_not_an_error)) {
            flatzs2zssimpflatzs60             = ierror_not_an_error;                  /* write */
            flatzs2zssimpflatzs61             = flatzs1zssimpflatzs59;                /* write */
        } else {
            flatzs2zssimpflatzs60             = flatzs1zssimpflatzs58;                /* write */
            flatzs2zssimpflatzs61             = 0.0;                                  /* write */
        }
        
        flatzs2zssimpflatzs62                 = flatzs2zssimpflatzs60;                /* read */
        flatzs2zssimpflatzs63                 = flatzs2zssimpflatzs61;                /* read */
        acczsconvzs11zssimpflatzs33           = flatzs2zssimpflatzs62;                /* write */
        acczsconvzs11zssimpflatzs34           = flatzs2zssimpflatzs63;                /* write */
        convzs11zsavalzs1zssimpflatzs64       = acczsconvzs11zssimpflatzs33;          /* read */
        convzs11zsavalzs1zssimpflatzs65       = acczsconvzs11zssimpflatzs34;          /* read */
        szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs70 = acczsszsreifyzs6zsconvzs12zssimpflatzs39; /* read */
        szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs71 = acczsszsreifyzs6zsconvzs12zssimpflatzs40; /* read */
        szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs72 = acczsszsreifyzs6zsconvzs12zssimpflatzs41; /* read */
        flatzs3zssimpflatzs73                 = ierror_not_an_error;                  /* init */
        flatzs3zssimpflatzs74                 = 0.0;                                  /* init */
        flatzs3zssimpflatzs75                 = 0.0;                                  /* init */
        
        if (ierror_eq (szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs70, ierror_not_an_error)) {
            flatzs10zssimpflatzs76            = ierror_not_an_error;                  /* init */
            flatzs10zssimpflatzs77            = 0.0;                                  /* init */
            flatzs10zssimpflatzs78            = 0.0;                                  /* init */
            
            if (ierror_eq (szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs70, ierror_not_an_error)) {
                flatzs13zssimpflatzs79        = ierror_not_an_error;                  /* init */
                flatzs13zssimpflatzs80        = 0.0;                                  /* init */
                
                if (ierror_eq (convzs11zsavalzs1zssimpflatzs64, ierror_not_an_error)) {
                    flatzs13zssimpflatzs79    = ierror_not_an_error;                  /* write */
                    flatzs13zssimpflatzs80    = idouble_sub (convzs11zsavalzs1zssimpflatzs65, szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs71); /* write */
                } else {
                    flatzs13zssimpflatzs79    = convzs11zsavalzs1zssimpflatzs64;      /* write */
                    flatzs13zssimpflatzs80    = 0.0;                                  /* write */
                }
                
                flatzs13zssimpflatzs81        = flatzs13zssimpflatzs79;               /* read */
                flatzs13zssimpflatzs82        = flatzs13zssimpflatzs80;               /* read */
                flatzs14zssimpflatzs83        = ierror_not_an_error;                  /* init */
                flatzs14zssimpflatzs84        = 0.0;                                  /* init */
                
                if (ierror_eq (flatzs13zssimpflatzs81, ierror_not_an_error)) {
                    flatzs14zssimpflatzs83    = ierror_not_an_error;                  /* write */
                    idouble_t        simpflatzs285 = idouble_add (szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs72, 1.0); /* let */
                    flatzs14zssimpflatzs84    = idouble_div (flatzs13zssimpflatzs82, simpflatzs285); /* write */
                } else {
                    flatzs14zssimpflatzs83    = flatzs13zssimpflatzs81;               /* write */
                    flatzs14zssimpflatzs84    = 0.0;                                  /* write */
                }
                
                flatzs14zssimpflatzs85        = flatzs14zssimpflatzs83;               /* read */
                flatzs14zssimpflatzs86        = flatzs14zssimpflatzs84;               /* read */
                flatzs15zssimpflatzs87        = ierror_not_an_error;                  /* init */
                flatzs15zssimpflatzs88        = 0.0;                                  /* init */
                
                if (ierror_eq (flatzs14zssimpflatzs85, ierror_not_an_error)) {
                    flatzs15zssimpflatzs87    = ierror_not_an_error;                  /* write */
                    flatzs15zssimpflatzs88    = idouble_add (szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs71, flatzs14zssimpflatzs86); /* write */
                } else {
                    flatzs15zssimpflatzs87    = flatzs14zssimpflatzs85;               /* write */
                    flatzs15zssimpflatzs88    = 0.0;                                  /* write */
                }
                
                flatzs15zssimpflatzs89        = flatzs15zssimpflatzs87;               /* read */
                flatzs15zssimpflatzs90        = flatzs15zssimpflatzs88;               /* read */
                flatzs16zssimpflatzs91        = ierror_not_an_error;                  /* init */
                flatzs16zssimpflatzs92        = 0.0;                                  /* init */
                flatzs16zssimpflatzs93        = 0.0;                                  /* init */
                
                if (ierror_eq (flatzs15zssimpflatzs89, ierror_not_an_error)) {
                    flatzs16zssimpflatzs91    = ierror_not_an_error;                  /* write */
                    flatzs16zssimpflatzs92    = flatzs15zssimpflatzs90;               /* write */
                    flatzs16zssimpflatzs93    = idouble_add (szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs72, 1.0); /* write */
                } else {
                    flatzs16zssimpflatzs91    = flatzs15zssimpflatzs89;               /* write */
                    flatzs16zssimpflatzs92    = 0.0;                                  /* write */
                    flatzs16zssimpflatzs93    = 0.0;                                  /* write */
                }
                
                flatzs16zssimpflatzs94        = flatzs16zssimpflatzs91;               /* read */
                flatzs16zssimpflatzs95        = flatzs16zssimpflatzs92;               /* read */
                flatzs16zssimpflatzs96        = flatzs16zssimpflatzs93;               /* read */
                flatzs10zssimpflatzs76        = flatzs16zssimpflatzs94;               /* write */
                flatzs10zssimpflatzs77        = flatzs16zssimpflatzs95;               /* write */
                flatzs10zssimpflatzs78        = flatzs16zssimpflatzs96;               /* write */
            } else {
                flatzs10zssimpflatzs76        = szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs70; /* write */
                flatzs10zssimpflatzs77        = 0.0;                                  /* write */
                flatzs10zssimpflatzs78        = 0.0;                                  /* write */
            }
            
            flatzs10zssimpflatzs97            = flatzs10zssimpflatzs76;               /* read */
            flatzs10zssimpflatzs98            = flatzs10zssimpflatzs77;               /* read */
            flatzs10zssimpflatzs99            = flatzs10zssimpflatzs78;               /* read */
            flatzs3zssimpflatzs73             = flatzs10zssimpflatzs97;               /* write */
            flatzs3zssimpflatzs74             = flatzs10zssimpflatzs98;               /* write */
            flatzs3zssimpflatzs75             = flatzs10zssimpflatzs99;               /* write */
        } else {
            flatzs6zssimpflatzs100            = ierror_not_an_error;                  /* init */
            flatzs6zssimpflatzs101            = 0.0;                                  /* init */
            flatzs6zssimpflatzs102            = 0.0;                                  /* init */
            
            if (ierror_eq (ierror_fold1_no_value, szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs70)) {
                flatzs7zssimpflatzs103        = ierror_not_an_error;                  /* init */
                flatzs7zssimpflatzs104        = 0.0;                                  /* init */
                flatzs7zssimpflatzs105        = 0.0;                                  /* init */
                
                if (ierror_eq (convzs11zsavalzs1zssimpflatzs64, ierror_not_an_error)) {
                    flatzs7zssimpflatzs103    = ierror_not_an_error;                  /* write */
                    flatzs7zssimpflatzs104    = convzs11zsavalzs1zssimpflatzs65;      /* write */
                    flatzs7zssimpflatzs105    = 1.0;                                  /* write */
                } else {
                    flatzs7zssimpflatzs103    = convzs11zsavalzs1zssimpflatzs64;      /* write */
                    flatzs7zssimpflatzs104    = 0.0;                                  /* write */
                    flatzs7zssimpflatzs105    = 0.0;                                  /* write */
                }
                
                flatzs7zssimpflatzs106        = flatzs7zssimpflatzs103;               /* read */
                flatzs7zssimpflatzs107        = flatzs7zssimpflatzs104;               /* read */
                flatzs7zssimpflatzs108        = flatzs7zssimpflatzs105;               /* read */
                flatzs6zssimpflatzs100        = flatzs7zssimpflatzs106;               /* write */
                flatzs6zssimpflatzs101        = flatzs7zssimpflatzs107;               /* write */
                flatzs6zssimpflatzs102        = flatzs7zssimpflatzs108;               /* write */
            } else {
                flatzs6zssimpflatzs100        = szsreifyzs6zsconvzs12zsavalzs0zssimpflatzs70; /* write */
                flatzs6zssimpflatzs101        = 0.0;                                  /* write */
                flatzs6zssimpflatzs102        = 0.0;                                  /* write */
            }
            
            flatzs6zssimpflatzs109            = flatzs6zssimpflatzs100;               /* read */
            flatzs6zssimpflatzs110            = flatzs6zssimpflatzs101;               /* read */
            flatzs6zssimpflatzs111            = flatzs6zssimpflatzs102;               /* read */
            flatzs3zssimpflatzs73             = flatzs6zssimpflatzs109;               /* write */
            flatzs3zssimpflatzs74             = flatzs6zssimpflatzs110;               /* write */
            flatzs3zssimpflatzs75             = flatzs6zssimpflatzs111;               /* write */
        }
        
        flatzs3zssimpflatzs112                = flatzs3zssimpflatzs73;                /* read */
        flatzs3zssimpflatzs113                = flatzs3zssimpflatzs74;                /* read */
        flatzs3zssimpflatzs114                = flatzs3zssimpflatzs75;                /* read */
        acczsszsreifyzs6zsconvzs12zssimpflatzs39 = flatzs3zssimpflatzs112;            /* write */
        acczsszsreifyzs6zsconvzs12zssimpflatzs40 = flatzs3zssimpflatzs113;            /* write */
        acczsszsreifyzs6zsconvzs12zssimpflatzs41 = flatzs3zssimpflatzs114;            /* write */
        flatzs25zssimpflatzs115               = ierror_not_an_error;                  /* init */
        flatzs25zssimpflatzs116               = "";                                   /* init */
        
        if (ierror_eq (convzs0zssimpflatzs230, ierror_not_an_error)) {
            flatzs25zssimpflatzs115           = ierror_not_an_error;                  /* write */
            flatzs25zssimpflatzs116           = convzs0zssimpflatzs231;               /* write */
        } else {
            flatzs25zssimpflatzs115           = convzs0zssimpflatzs230;               /* write */
            flatzs25zssimpflatzs116           = "";                                   /* write */
        }
        
        flatzs25zssimpflatzs117               = flatzs25zssimpflatzs115;              /* read */
        flatzs25zssimpflatzs118               = flatzs25zssimpflatzs116;              /* read */
        flatzs26zssimpflatzs119               = ierror_not_an_error;                  /* init */
        flatzs26zssimpflatzs120               = ifalse;                               /* init */
        
        if (ierror_eq (flatzs25zssimpflatzs117, ierror_not_an_error)) {
            flatzs26zssimpflatzs119           = ierror_not_an_error;                  /* write */
            flatzs26zssimpflatzs120           = istring_eq (flatzs25zssimpflatzs118, "torso"); /* write */
        } else {
            flatzs26zssimpflatzs119           = flatzs25zssimpflatzs117;              /* write */
            flatzs26zssimpflatzs120           = ifalse;                               /* write */
        }
        
        flatzs26zssimpflatzs121               = flatzs26zssimpflatzs119;              /* read */
        flatzs26zssimpflatzs122               = flatzs26zssimpflatzs120;              /* read */
        flatzs27                              = ifalse;                               /* init */
        
        if (ierror_eq (flatzs26zssimpflatzs121, ierror_not_an_error)) {
            flatzs27                          = flatzs26zssimpflatzs122;              /* write */
        } else {
            flatzs27                          = itrue;                                /* write */
        }
        
        flatzs27                              = flatzs27;                             /* read */
        
        if (flatzs27) {
            flatzs28zssimpflatzs123           = ierror_not_an_error;                  /* init */
            flatzs28zssimpflatzs124           = 0;                                    /* init */
            
            if (ierror_eq (convzs0zssimpflatzs230, ierror_not_an_error)) {
                flatzs28zssimpflatzs123       = ierror_not_an_error;                  /* write */
                flatzs28zssimpflatzs124       = convzs0zssimpflatzs232;               /* write */
            } else {
                flatzs28zssimpflatzs123       = convzs0zssimpflatzs230;               /* write */
                flatzs28zssimpflatzs124       = 0;                                    /* write */
            }
            
            flatzs28zssimpflatzs125           = flatzs28zssimpflatzs123;              /* read */
            flatzs28zssimpflatzs126           = flatzs28zssimpflatzs124;              /* read */
            flatzs29zssimpflatzs127           = ierror_not_an_error;                  /* init */
            flatzs29zssimpflatzs128           = 0.0;                                  /* init */
            
            if (ierror_eq (flatzs28zssimpflatzs125, ierror_not_an_error)) {
                flatzs29zssimpflatzs127       = ierror_not_an_error;                  /* write */
                flatzs29zssimpflatzs128       = iint_extend (flatzs28zssimpflatzs126); /* write */
            } else {
                flatzs29zssimpflatzs127       = flatzs28zssimpflatzs125;              /* write */
                flatzs29zssimpflatzs128       = 0.0;                                  /* write */
            }
            
            flatzs29zssimpflatzs129           = flatzs29zssimpflatzs127;              /* read */
            flatzs29zssimpflatzs130           = flatzs29zssimpflatzs128;              /* read */
            acczsconvzs60zssimpflatzs42       = flatzs29zssimpflatzs129;              /* write */
            acczsconvzs60zssimpflatzs43       = flatzs29zssimpflatzs130;              /* write */
            convzs60zsavalzs3zssimpflatzs131  = acczsconvzs60zssimpflatzs42;          /* read */
            convzs60zsavalzs3zssimpflatzs132  = acczsconvzs60zssimpflatzs43;          /* read */
            azsconvzs61zsavalzs2zssimpflatzs137 = acczsazsconvzs61zssimpflatzs48;     /* read */
            azsconvzs61zsavalzs2zssimpflatzs138 = acczsazsconvzs61zssimpflatzs49;     /* read */
            azsconvzs61zsavalzs2zssimpflatzs139 = acczsazsconvzs61zssimpflatzs50;     /* read */
            azsconvzs61zsavalzs2zssimpflatzs140 = acczsazsconvzs61zssimpflatzs51;     /* read */
            flatzs30zssimpflatzs141           = ierror_not_an_error;                  /* init */
            flatzs30zssimpflatzs142           = 0.0;                                  /* init */
            flatzs30zssimpflatzs143           = 0.0;                                  /* init */
            flatzs30zssimpflatzs144           = 0.0;                                  /* init */
            
            if (ierror_eq (azsconvzs61zsavalzs2zssimpflatzs137, ierror_not_an_error)) {
                idouble_t        nnzsconvzs68 = idouble_add (azsconvzs61zsavalzs2zssimpflatzs138, 1.0); /* let */
                flatzs33zssimpflatzs145       = ierror_not_an_error;                  /* init */
                flatzs33zssimpflatzs146       = 0.0;                                  /* init */
                
                if (ierror_eq (convzs60zsavalzs3zssimpflatzs131, ierror_not_an_error)) {
                    flatzs33zssimpflatzs145   = ierror_not_an_error;                  /* write */
                    flatzs33zssimpflatzs146   = idouble_sub (convzs60zsavalzs3zssimpflatzs132, azsconvzs61zsavalzs2zssimpflatzs139); /* write */
                } else {
                    flatzs33zssimpflatzs145   = convzs60zsavalzs3zssimpflatzs131;     /* write */
                    flatzs33zssimpflatzs146   = 0.0;                                  /* write */
                }
                
                flatzs33zssimpflatzs147       = flatzs33zssimpflatzs145;              /* read */
                flatzs33zssimpflatzs148       = flatzs33zssimpflatzs146;              /* read */
                flatzs34zssimpflatzs149       = ierror_not_an_error;                  /* init */
                flatzs34zssimpflatzs150       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzs33zssimpflatzs147, ierror_not_an_error)) {
                    flatzs34zssimpflatzs149   = ierror_not_an_error;                  /* write */
                    flatzs34zssimpflatzs150   = idouble_div (flatzs33zssimpflatzs148, nnzsconvzs68); /* write */
                } else {
                    flatzs34zssimpflatzs149   = flatzs33zssimpflatzs147;              /* write */
                    flatzs34zssimpflatzs150   = 0.0;                                  /* write */
                }
                
                flatzs34zssimpflatzs151       = flatzs34zssimpflatzs149;              /* read */
                flatzs34zssimpflatzs152       = flatzs34zssimpflatzs150;              /* read */
                flatzs35zssimpflatzs153       = ierror_not_an_error;                  /* init */
                flatzs35zssimpflatzs154       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzs34zssimpflatzs151, ierror_not_an_error)) {
                    flatzs35zssimpflatzs153   = ierror_not_an_error;                  /* write */
                    flatzs35zssimpflatzs154   = idouble_add (azsconvzs61zsavalzs2zssimpflatzs139, flatzs34zssimpflatzs152); /* write */
                } else {
                    flatzs35zssimpflatzs153   = flatzs34zssimpflatzs151;              /* write */
                    flatzs35zssimpflatzs154   = 0.0;                                  /* write */
                }
                
                flatzs35zssimpflatzs155       = flatzs35zssimpflatzs153;              /* read */
                flatzs35zssimpflatzs156       = flatzs35zssimpflatzs154;              /* read */
                flatzs36zssimpflatzs157       = ierror_not_an_error;                  /* init */
                flatzs36zssimpflatzs158       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzs33zssimpflatzs147, ierror_not_an_error)) {
                    flatzs51zssimpflatzs159   = ierror_not_an_error;                  /* init */
                    flatzs51zssimpflatzs160   = 0.0;                                  /* init */
                    
                    if (ierror_eq (convzs60zsavalzs3zssimpflatzs131, ierror_not_an_error)) {
                        flatzs57zssimpflatzs161 = ierror_not_an_error;                /* init */
                        flatzs57zssimpflatzs162 = 0.0;                                /* init */
                        
                        if (ierror_eq (flatzs35zssimpflatzs155, ierror_not_an_error)) {
                            flatzs57zssimpflatzs161 = ierror_not_an_error;            /* write */
                            flatzs57zssimpflatzs162 = idouble_sub (convzs60zsavalzs3zssimpflatzs132, flatzs35zssimpflatzs156); /* write */
                        } else {
                            flatzs57zssimpflatzs161 = flatzs35zssimpflatzs155;        /* write */
                            flatzs57zssimpflatzs162 = 0.0;                            /* write */
                        }
                        
                        flatzs57zssimpflatzs163 = flatzs57zssimpflatzs161;            /* read */
                        flatzs57zssimpflatzs164 = flatzs57zssimpflatzs162;            /* read */
                        flatzs51zssimpflatzs159 = flatzs57zssimpflatzs163;            /* write */
                        flatzs51zssimpflatzs160 = flatzs57zssimpflatzs164;            /* write */
                    } else {
                        flatzs51zssimpflatzs159 = convzs60zsavalzs3zssimpflatzs131;   /* write */
                        flatzs51zssimpflatzs160 = 0.0;                                /* write */
                    }
                    
                    flatzs51zssimpflatzs165   = flatzs51zssimpflatzs159;              /* read */
                    flatzs51zssimpflatzs166   = flatzs51zssimpflatzs160;              /* read */
                    flatzs52zssimpflatzs167   = ierror_not_an_error;                  /* init */
                    flatzs52zssimpflatzs168   = 0.0;                                  /* init */
                    
                    if (ierror_eq (flatzs51zssimpflatzs165, ierror_not_an_error)) {
                        flatzs52zssimpflatzs167 = ierror_not_an_error;                /* write */
                        flatzs52zssimpflatzs168 = idouble_mul (flatzs33zssimpflatzs148, flatzs51zssimpflatzs166); /* write */
                    } else {
                        flatzs52zssimpflatzs167 = flatzs51zssimpflatzs165;            /* write */
                        flatzs52zssimpflatzs168 = 0.0;                                /* write */
                    }
                    
                    flatzs52zssimpflatzs169   = flatzs52zssimpflatzs167;              /* read */
                    flatzs52zssimpflatzs170   = flatzs52zssimpflatzs168;              /* read */
                    flatzs36zssimpflatzs157   = flatzs52zssimpflatzs169;              /* write */
                    flatzs36zssimpflatzs158   = flatzs52zssimpflatzs170;              /* write */
                } else {
                    flatzs36zssimpflatzs157   = flatzs33zssimpflatzs147;              /* write */
                    flatzs36zssimpflatzs158   = 0.0;                                  /* write */
                }
                
                flatzs36zssimpflatzs171       = flatzs36zssimpflatzs157;              /* read */
                flatzs36zssimpflatzs172       = flatzs36zssimpflatzs158;              /* read */
                flatzs37zssimpflatzs173       = ierror_not_an_error;                  /* init */
                flatzs37zssimpflatzs174       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzs36zssimpflatzs171, ierror_not_an_error)) {
                    flatzs37zssimpflatzs173   = ierror_not_an_error;                  /* write */
                    flatzs37zssimpflatzs174   = idouble_add (azsconvzs61zsavalzs2zssimpflatzs140, flatzs36zssimpflatzs172); /* write */
                } else {
                    flatzs37zssimpflatzs173   = flatzs36zssimpflatzs171;              /* write */
                    flatzs37zssimpflatzs174   = 0.0;                                  /* write */
                }
                
                flatzs37zssimpflatzs175       = flatzs37zssimpflatzs173;              /* read */
                flatzs37zssimpflatzs176       = flatzs37zssimpflatzs174;              /* read */
                flatzs38zssimpflatzs177       = ierror_not_an_error;                  /* init */
                flatzs38zssimpflatzs178       = 0.0;                                  /* init */
                flatzs38zssimpflatzs179       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzs35zssimpflatzs155, ierror_not_an_error)) {
                    flatzs38zssimpflatzs177   = ierror_not_an_error;                  /* write */
                    flatzs38zssimpflatzs178   = idouble_add (azsconvzs61zsavalzs2zssimpflatzs138, 1.0); /* write */
                    flatzs38zssimpflatzs179   = flatzs35zssimpflatzs156;              /* write */
                } else {
                    flatzs38zssimpflatzs177   = flatzs35zssimpflatzs155;              /* write */
                    flatzs38zssimpflatzs178   = 0.0;                                  /* write */
                    flatzs38zssimpflatzs179   = 0.0;                                  /* write */
                }
                
                flatzs38zssimpflatzs180       = flatzs38zssimpflatzs177;              /* read */
                flatzs38zssimpflatzs181       = flatzs38zssimpflatzs178;              /* read */
                flatzs38zssimpflatzs182       = flatzs38zssimpflatzs179;              /* read */
                flatzs39zssimpflatzs183       = ierror_not_an_error;                  /* init */
                flatzs39zssimpflatzs184       = 0.0;                                  /* init */
                flatzs39zssimpflatzs185       = 0.0;                                  /* init */
                flatzs39zssimpflatzs186       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzs38zssimpflatzs180, ierror_not_an_error)) {
                    flatzs42zssimpflatzs187   = ierror_not_an_error;                  /* init */
                    flatzs42zssimpflatzs188   = 0.0;                                  /* init */
                    flatzs42zssimpflatzs189   = 0.0;                                  /* init */
                    flatzs42zssimpflatzs190   = 0.0;                                  /* init */
                    
                    if (ierror_eq (flatzs37zssimpflatzs175, ierror_not_an_error)) {
                        flatzs42zssimpflatzs187 = ierror_not_an_error;                /* write */
                        flatzs42zssimpflatzs188 = flatzs38zssimpflatzs181;            /* write */
                        flatzs42zssimpflatzs189 = flatzs38zssimpflatzs182;            /* write */
                        flatzs42zssimpflatzs190 = flatzs37zssimpflatzs176;            /* write */
                    } else {
                        flatzs42zssimpflatzs187 = flatzs37zssimpflatzs175;            /* write */
                        flatzs42zssimpflatzs188 = 0.0;                                /* write */
                        flatzs42zssimpflatzs189 = 0.0;                                /* write */
                        flatzs42zssimpflatzs190 = 0.0;                                /* write */
                    }
                    
                    flatzs42zssimpflatzs191   = flatzs42zssimpflatzs187;              /* read */
                    flatzs42zssimpflatzs192   = flatzs42zssimpflatzs188;              /* read */
                    flatzs42zssimpflatzs193   = flatzs42zssimpflatzs189;              /* read */
                    flatzs42zssimpflatzs194   = flatzs42zssimpflatzs190;              /* read */
                    flatzs39zssimpflatzs183   = flatzs42zssimpflatzs191;              /* write */
                    flatzs39zssimpflatzs184   = flatzs42zssimpflatzs192;              /* write */
                    flatzs39zssimpflatzs185   = flatzs42zssimpflatzs193;              /* write */
                    flatzs39zssimpflatzs186   = flatzs42zssimpflatzs194;              /* write */
                } else {
                    flatzs39zssimpflatzs183   = flatzs38zssimpflatzs180;              /* write */
                    flatzs39zssimpflatzs184   = 0.0;                                  /* write */
                    flatzs39zssimpflatzs185   = 0.0;                                  /* write */
                    flatzs39zssimpflatzs186   = 0.0;                                  /* write */
                }
                
                flatzs39zssimpflatzs195       = flatzs39zssimpflatzs183;              /* read */
                flatzs39zssimpflatzs196       = flatzs39zssimpflatzs184;              /* read */
                flatzs39zssimpflatzs197       = flatzs39zssimpflatzs185;              /* read */
                flatzs39zssimpflatzs198       = flatzs39zssimpflatzs186;              /* read */
                flatzs30zssimpflatzs141       = flatzs39zssimpflatzs195;              /* write */
                flatzs30zssimpflatzs142       = flatzs39zssimpflatzs196;              /* write */
                flatzs30zssimpflatzs143       = flatzs39zssimpflatzs197;              /* write */
                flatzs30zssimpflatzs144       = flatzs39zssimpflatzs198;              /* write */
            } else {
                flatzs30zssimpflatzs141       = azsconvzs61zsavalzs2zssimpflatzs137;  /* write */
                flatzs30zssimpflatzs142       = 0.0;                                  /* write */
                flatzs30zssimpflatzs143       = 0.0;                                  /* write */
                flatzs30zssimpflatzs144       = 0.0;                                  /* write */
            }
            
            flatzs30zssimpflatzs199           = flatzs30zssimpflatzs141;              /* read */
            flatzs30zssimpflatzs200           = flatzs30zssimpflatzs142;              /* read */
            flatzs30zssimpflatzs201           = flatzs30zssimpflatzs143;              /* read */
            flatzs30zssimpflatzs202           = flatzs30zssimpflatzs144;              /* read */
            acczsazsconvzs61zssimpflatzs48    = flatzs30zssimpflatzs199;              /* write */
            acczsazsconvzs61zssimpflatzs49    = flatzs30zssimpflatzs200;              /* write */
            acczsazsconvzs61zssimpflatzs50    = flatzs30zssimpflatzs201;              /* write */
            acczsazsconvzs61zssimpflatzs51    = flatzs30zssimpflatzs202;              /* write */
        }
        
    }
    
    s->has_0_0_acczsazsconvzs61zssimpflatzs48 = itrue;                                /* save */
    s->res_0_0_acczsazsconvzs61zssimpflatzs48 = acczsazsconvzs61zssimpflatzs48;       /* save */
    
    s->has_0_0_acczsazsconvzs61zssimpflatzs49 = itrue;                                /* save */
    s->res_0_0_acczsazsconvzs61zssimpflatzs49 = acczsazsconvzs61zssimpflatzs49;       /* save */
    
    s->has_0_0_acczsazsconvzs61zssimpflatzs50 = itrue;                                /* save */
    s->res_0_0_acczsazsconvzs61zssimpflatzs50 = acczsazsconvzs61zssimpflatzs50;       /* save */
    
    s->has_0_0_acczsazsconvzs61zssimpflatzs51 = itrue;                                /* save */
    s->res_0_0_acczsazsconvzs61zssimpflatzs51 = acczsazsconvzs61zssimpflatzs51;       /* save */
    
    s->has_0_0_acczsconvzs60zssimpflatzs42    = itrue;                                /* save */
    s->res_0_0_acczsconvzs60zssimpflatzs42    = acczsconvzs60zssimpflatzs42;          /* save */
    
    s->has_0_0_acczsconvzs60zssimpflatzs43    = itrue;                                /* save */
    s->res_0_0_acczsconvzs60zssimpflatzs43    = acczsconvzs60zssimpflatzs43;          /* save */
    
    s->has_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs39 = itrue;                      /* save */
    s->res_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs39 = acczsszsreifyzs6zsconvzs12zssimpflatzs39; /* save */
    
    s->has_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs40 = itrue;                      /* save */
    s->res_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs40 = acczsszsreifyzs6zsconvzs12zssimpflatzs40; /* save */
    
    s->has_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs41 = itrue;                      /* save */
    s->res_0_0_acczsszsreifyzs6zsconvzs12zssimpflatzs41 = acczsszsreifyzs6zsconvzs12zssimpflatzs41; /* save */
    
    s->has_0_0_acczsconvzs11zssimpflatzs33    = itrue;                                /* save */
    s->res_0_0_acczsconvzs11zssimpflatzs33    = acczsconvzs11zssimpflatzs33;          /* save */
    
    s->has_0_0_acczsconvzs11zssimpflatzs34    = itrue;                                /* save */
    s->res_0_0_acczsconvzs11zssimpflatzs34    = acczsconvzs11zssimpflatzs34;          /* save */
    
    azsconvzs61zssimpflatzs203                = acczsazsconvzs61zssimpflatzs48;       /* read */
    azsconvzs61zssimpflatzs204                = acczsazsconvzs61zssimpflatzs49;       /* read */
    azsconvzs61zssimpflatzs206                = acczsazsconvzs61zssimpflatzs51;       /* read */
    szsreifyzs6zsconvzs12zssimpflatzs207      = acczsszsreifyzs6zsconvzs12zssimpflatzs39; /* read */
    szsreifyzs6zsconvzs12zssimpflatzs208      = acczsszsreifyzs6zsconvzs12zssimpflatzs40; /* read */
    flatzs86zssimpflatzs210                   = ierror_not_an_error;                  /* init */
    flatzs86zssimpflatzs211                   = 0.0;                                  /* init */
    
    if (ierror_eq (szsreifyzs6zsconvzs12zssimpflatzs207, ierror_not_an_error)) {
        flatzs86zssimpflatzs210               = ierror_not_an_error;                  /* write */
        flatzs86zssimpflatzs211               = szsreifyzs6zsconvzs12zssimpflatzs208; /* write */
    } else {
        flatzs86zssimpflatzs210               = szsreifyzs6zsconvzs12zssimpflatzs207; /* write */
        flatzs86zssimpflatzs211               = 0.0;                                  /* write */
    }
    
    flatzs86zssimpflatzs212                   = flatzs86zssimpflatzs210;              /* read */
    flatzs86zssimpflatzs213                   = flatzs86zssimpflatzs211;              /* read */
    flatzs87zssimpflatzs214                   = ierror_not_an_error;                  /* init */
    flatzs87zssimpflatzs215                   = 0.0;                                  /* init */
    
    if (ierror_eq (flatzs86zssimpflatzs212, ierror_not_an_error)) {
        flatzs90zssimpflatzs216               = ierror_not_an_error;                  /* init */
        flatzs90zssimpflatzs217               = 0.0;                                  /* init */
        
        if (ierror_eq (azsconvzs61zssimpflatzs203, ierror_not_an_error)) {
            idouble_t        convzs116        = idouble_sub (azsconvzs61zssimpflatzs204, 1.0); /* let */
            idouble_t        simpflatzs638    = idouble_div (azsconvzs61zssimpflatzs206, convzs116); /* let */
            flatzs90zssimpflatzs216           = ierror_not_an_error;                  /* write */
            flatzs90zssimpflatzs217           = simpflatzs638;                        /* write */
        } else {
            flatzs90zssimpflatzs216           = azsconvzs61zssimpflatzs203;           /* write */
            flatzs90zssimpflatzs217           = 0.0;                                  /* write */
        }
        
        flatzs90zssimpflatzs218               = flatzs90zssimpflatzs216;              /* read */
        flatzs90zssimpflatzs219               = flatzs90zssimpflatzs217;              /* read */
        flatzs91zssimpflatzs220               = ierror_not_an_error;                  /* init */
        flatzs91zssimpflatzs221               = 0.0;                                  /* init */
        
        if (ierror_eq (flatzs90zssimpflatzs218, ierror_not_an_error)) {
            flatzs91zssimpflatzs220           = ierror_not_an_error;                  /* write */
            flatzs91zssimpflatzs221           = idouble_sqrt (flatzs90zssimpflatzs219); /* write */
        } else {
            flatzs91zssimpflatzs220           = flatzs90zssimpflatzs218;              /* write */
            flatzs91zssimpflatzs221           = 0.0;                                  /* write */
        }
        
        flatzs91zssimpflatzs222               = flatzs91zssimpflatzs220;              /* read */
        flatzs91zssimpflatzs223               = flatzs91zssimpflatzs221;              /* read */
        flatzs92zssimpflatzs224               = ierror_not_an_error;                  /* init */
        flatzs92zssimpflatzs225               = 0.0;                                  /* init */
        
        if (ierror_eq (flatzs91zssimpflatzs222, ierror_not_an_error)) {
            flatzs92zssimpflatzs224           = ierror_not_an_error;                  /* write */
            flatzs92zssimpflatzs225           = idouble_mul (flatzs86zssimpflatzs213, flatzs91zssimpflatzs223); /* write */
        } else {
            flatzs92zssimpflatzs224           = flatzs91zssimpflatzs222;              /* write */
            flatzs92zssimpflatzs225           = 0.0;                                  /* write */
        }
        
        flatzs92zssimpflatzs226               = flatzs92zssimpflatzs224;              /* read */
        flatzs92zssimpflatzs227               = flatzs92zssimpflatzs225;              /* read */
        flatzs87zssimpflatzs214               = flatzs92zssimpflatzs226;              /* write */
        flatzs87zssimpflatzs215               = flatzs92zssimpflatzs227;              /* write */
    } else {
        flatzs87zssimpflatzs214               = flatzs86zssimpflatzs212;              /* write */
        flatzs87zssimpflatzs215               = 0.0;                                  /* write */
    }
    
    flatzs87zssimpflatzs228                   = flatzs87zssimpflatzs214;              /* read */
    flatzs87zssimpflatzs229                   = flatzs87zssimpflatzs215;              /* read */
    s->replzsixzs0                            = flatzs87zssimpflatzs228;              /* output */
    s->replzsixzs1                            = flatzs87zssimpflatzs229;              /* output */
}

- C evaluation:
[homer, 3.1112698372208096]

- Core evaluation:
[homer, 3.1112698372208096]

> > -- Times
> - Flattened (simplified), not typechecked:
conv/3 = TIME
conv/4 = MAX_MAP_SIZE
init acc/s/reify/2/conv/5/simpflat/11@{Error} = ExceptFold1NoValue@{Error};
init acc/s/reify/2/conv/5/simpflat/12@{Time} = 1858-11-17T00:00:00Z@{Time};
load_resumable@{Error} acc/s/reify/2/conv/5/simpflat/11;
load_resumable@{Time} acc/s/reify/2/conv/5/simpflat/12;
for_facts (conv/2@{Time}, conv/1@{FactIdentifier}, conv/0/simpflat/25@{Error}, conv/0/simpflat/26@{Int}, conv/0/simpflat/27@{Time}) in new
{
  read s/reify/2/conv/5/aval/0/simpflat/13 = acc/s/reify/2/conv/5/simpflat/11 [Error];
  read s/reify/2/conv/5/aval/0/simpflat/14 = acc/s/reify/2/conv/5/simpflat/12 [Time];
  init flat/0/simpflat/15@{Error} = ExceptNotAnError@{Error};
  init flat/0/simpflat/16@{Time} = 1858-11-17T00:00:00Z@{Time};
  if (eq#@{Error} s/reify/2/conv/5/aval/0/simpflat/13 (ExceptNotAnError@{Error}))
  {
    init flat/4@{Time} = 1858-11-17T00:00:00Z@{Time};
    let simpflat/32 = Time_daysDifference# (1980-01-06T00:00:00Z@{Time}) conv/0/simpflat/27;
    let simpflat/33 = negate#@{Int} simpflat/32;
    let simpflat/34 = Time_minusDays# (2000-01-01T00:00:00Z@{Time}) simpflat/33;
    if (gt#@{Time} simpflat/34 s/reify/2/conv/5/aval/0/simpflat/14)
    {
      let simpflat/37 = Time_daysDifference# (1980-01-06T00:00:00Z@{Time}) conv/0/simpflat/27;
      let simpflat/38 = negate#@{Int} simpflat/37;
      write flat/4 = Time_minusDays# (2000-01-01T00:00:00Z@{Time}) simpflat/38;
    }
    else
    {
      write flat/4 = s/reify/2/conv/5/aval/0/simpflat/14;
    }
    read flat/4 = flat/4 [Time];
    write flat/0/simpflat/15 = ExceptNotAnError@{Error};
    write flat/0/simpflat/16 = flat/4;
  }
  else
  {
    init flat/3/simpflat/17@{Error} = ExceptNotAnError@{Error};
    init flat/3/simpflat/18@{Time} = 1858-11-17T00:00:00Z@{Time};
    if (eq#@{Error} (ExceptFold1NoValue@{Error}) s/reify/2/conv/5/aval/0/simpflat/13)
    {
      write flat/3/simpflat/17 = ExceptNotAnError@{Error};
      let simpflat/51 = Time_daysDifference# (1980-01-06T00:00:00Z@{Time}) conv/0/simpflat/27;
      let simpflat/52 = negate#@{Int} simpflat/51;
      write flat/3/simpflat/18 = Time_minusDays# (2000-01-01T00:00:00Z@{Time}) simpflat/52;
    }
    else
    {
      write flat/3/simpflat/17 = s/reify/2/conv/5/aval/0/simpflat/13;
      write flat/3/simpflat/18 = 1858-11-17T00:00:00Z@{Time};
    }
    read flat/3/simpflat/19 = flat/3/simpflat/17 [Error];
    read flat/3/simpflat/20 = flat/3/simpflat/18 [Time];
    write flat/0/simpflat/15 = flat/3/simpflat/19;
    write flat/0/simpflat/16 = flat/3/simpflat/20;
  }
  read flat/0/simpflat/21 = flat/0/simpflat/15 [Error];
  read flat/0/simpflat/22 = flat/0/simpflat/16 [Time];
  write acc/s/reify/2/conv/5/simpflat/11 = flat/0/simpflat/21;
  write acc/s/reify/2/conv/5/simpflat/12 = flat/0/simpflat/22;
}
save_resumable@{Error} acc/s/reify/2/conv/5/simpflat/11;
save_resumable@{Time} acc/s/reify/2/conv/5/simpflat/12;
read s/reify/2/conv/5/simpflat/23 = acc/s/reify/2/conv/5/simpflat/11 [Error];
read s/reify/2/conv/5/simpflat/24 = acc/s/reify/2/conv/5/simpflat/12 [Time];
output@{(Sum Error Time)} repl (s/reify/2/conv/5/simpflat/23@{Error}, s/reify/2/conv/5/simpflat/24@{Time});

- Flattened Avalanche (simplified), typechecked:
conv/3 = TIME
conv/4 = MAX_MAP_SIZE
init acc/s/reify/2/conv/5/simpflat/11@{Error} = ExceptFold1NoValue@{Error};
init acc/s/reify/2/conv/5/simpflat/12@{Time} = 1858-11-17T00:00:00Z@{Time};
load_resumable@{Error} acc/s/reify/2/conv/5/simpflat/11;
load_resumable@{Time} acc/s/reify/2/conv/5/simpflat/12;
for_facts (conv/2@{Time}, conv/1@{FactIdentifier}, conv/0/simpflat/25@{Error}, conv/0/simpflat/26@{Int}, conv/0/simpflat/27@{Time}) in new
{
  read s/reify/2/conv/5/aval/0/simpflat/13 = acc/s/reify/2/conv/5/simpflat/11 [Error];
  read s/reify/2/conv/5/aval/0/simpflat/14 = acc/s/reify/2/conv/5/simpflat/12 [Time];
  init flat/0/simpflat/15@{Error} = ExceptNotAnError@{Error};
  init flat/0/simpflat/16@{Time} = 1858-11-17T00:00:00Z@{Time};
  if (eq#@{Error} s/reify/2/conv/5/aval/0/simpflat/13 (ExceptNotAnError@{Error}))
  {
    init flat/4@{Time} = 1858-11-17T00:00:00Z@{Time};
    let simpflat/32 = Time_daysDifference# (1980-01-06T00:00:00Z@{Time}) conv/0/simpflat/27;
    let simpflat/33 = negate#@{Int} simpflat/32;
    let simpflat/34 = Time_minusDays# (2000-01-01T00:00:00Z@{Time}) simpflat/33;
    if (gt#@{Time} simpflat/34 s/reify/2/conv/5/aval/0/simpflat/14)
    {
      let simpflat/37 = Time_daysDifference# (1980-01-06T00:00:00Z@{Time}) conv/0/simpflat/27;
      let simpflat/38 = negate#@{Int} simpflat/37;
      write flat/4 = Time_minusDays# (2000-01-01T00:00:00Z@{Time}) simpflat/38;
    }
    else
    {
      write flat/4 = s/reify/2/conv/5/aval/0/simpflat/14;
    }
    read flat/4 = flat/4 [Time];
    write flat/0/simpflat/15 = ExceptNotAnError@{Error};
    write flat/0/simpflat/16 = flat/4;
  }
  else
  {
    init flat/3/simpflat/17@{Error} = ExceptNotAnError@{Error};
    init flat/3/simpflat/18@{Time} = 1858-11-17T00:00:00Z@{Time};
    if (eq#@{Error} (ExceptFold1NoValue@{Error}) s/reify/2/conv/5/aval/0/simpflat/13)
    {
      write flat/3/simpflat/17 = ExceptNotAnError@{Error};
      let simpflat/51 = Time_daysDifference# (1980-01-06T00:00:00Z@{Time}) conv/0/simpflat/27;
      let simpflat/52 = negate#@{Int} simpflat/51;
      write flat/3/simpflat/18 = Time_minusDays# (2000-01-01T00:00:00Z@{Time}) simpflat/52;
    }
    else
    {
      write flat/3/simpflat/17 = s/reify/2/conv/5/aval/0/simpflat/13;
      write flat/3/simpflat/18 = 1858-11-17T00:00:00Z@{Time};
    }
    read flat/3/simpflat/19 = flat/3/simpflat/17 [Error];
    read flat/3/simpflat/20 = flat/3/simpflat/18 [Time];
    write flat/0/simpflat/15 = flat/3/simpflat/19;
    write flat/0/simpflat/16 = flat/3/simpflat/20;
  }
  read flat/0/simpflat/21 = flat/0/simpflat/15 [Error];
  read flat/0/simpflat/22 = flat/0/simpflat/16 [Time];
  write acc/s/reify/2/conv/5/simpflat/11 = flat/0/simpflat/21;
  write acc/s/reify/2/conv/5/simpflat/12 = flat/0/simpflat/22;
}
save_resumable@{Error} acc/s/reify/2/conv/5/simpflat/11;
save_resumable@{Time} acc/s/reify/2/conv/5/simpflat/12;
read s/reify/2/conv/5/simpflat/23 = acc/s/reify/2/conv/5/simpflat/11 [Error];
read s/reify/2/conv/5/simpflat/24 = acc/s/reify/2/conv/5/simpflat/12 [Time];
output@{(Sum Error Time)} repl (s/reify/2/conv/5/simpflat/23@{Error}, s/reify/2/conv/5/simpflat/24@{Time});

- C:
#line 1 "state and input definition #0 - repl"

typedef struct {
    itime_t          convzs3;
    iint_t           new_count;
    ierror_t         *new_convzs0zssimpflatzs25;
    iint_t           *new_convzs0zssimpflatzs26;
    itime_t          *new_convzs0zssimpflatzs27;
} input_repl_t;

typedef struct {
    /* runtime */
    anemone_mempool_t *mempool;
    iint_t           max_map_size;

    /* inputs */
    input_repl_t     input;

  /* compute for (0,0) */
    /* outputs */
    ierror_t         replzsixzs0;
    itime_t          replzsixzs1;

    /* resumables: values */
    itime_t          res_0_0_acczsszsreifyzs2zsconvzs5zssimpflatzs12;
    ierror_t         res_0_0_acczsszsreifyzs2zsconvzs5zssimpflatzs11;

    /* resumables: has flags */
    ibool_t          has_flags_start_0_0;
    ibool_t          has_0_0_acczsszsreifyzs2zsconvzs5zssimpflatzs12;
    ibool_t          has_0_0_acczsszsreifyzs2zsconvzs5zssimpflatzs11;
    ibool_t          has_flags_end_0_0;


} iattribute_0_t;

iint_t size_of_state_iattribute_0 ()
{
    return sizeof (iattribute_0_t);
}

#line 1 "compute function #0 - repl icompute_attribute_0_compute_0"
void icompute_attribute_0_compute_0(iattribute_0_t *s)
{
    itime_t          flatzs4;
    itime_t          szsreifyzs2zsconvzs5zssimpflatzs24;
    ierror_t         szsreifyzs2zsconvzs5zssimpflatzs23;
    itime_t          szsreifyzs2zsconvzs5zsavalzs0zssimpflatzs14;
    ierror_t         szsreifyzs2zsconvzs5zsavalzs0zssimpflatzs13;
    itime_t          acczsszsreifyzs2zsconvzs5zssimpflatzs12;
    ierror_t         acczsszsreifyzs2zsconvzs5zssimpflatzs11;
    ierror_t         flatzs0zssimpflatzs15;
    itime_t          flatzs0zssimpflatzs16;
    itime_t          flatzs3zssimpflatzs18;
    ierror_t         flatzs3zssimpflatzs19;
    ierror_t         flatzs3zssimpflatzs17;
    itime_t          flatzs3zssimpflatzs20;
    itime_t          flatzs0zssimpflatzs22;
    ierror_t         flatzs0zssimpflatzs21;

    anemone_mempool_t *mempool                = s->mempool;
    itime_t          convzs3                  = s->input.convzs3;
    iint_t           convzs4                  = s->max_map_size;

    acczsszsreifyzs2zsconvzs5zssimpflatzs11   = ierror_fold1_no_value;                /* init */
    acczsszsreifyzs2zsconvzs5zssimpflatzs12   = 0x7420b1100000000;                    /* init */
    
    if (s->has_0_0_acczsszsreifyzs2zsconvzs5zssimpflatzs11) {
        acczsszsreifyzs2zsconvzs5zssimpflatzs11 = s->res_0_0_acczsszsreifyzs2zsconvzs5zssimpflatzs11; /* load */
    }
    
    if (s->has_0_0_acczsszsreifyzs2zsconvzs5zssimpflatzs12) {
        acczsszsreifyzs2zsconvzs5zssimpflatzs12 = s->res_0_0_acczsszsreifyzs2zsconvzs5zssimpflatzs12; /* load */
    }
    
    const iint_t     new_count                = s->input.new_count;
    const ierror_t  *const new_convzs0zssimpflatzs25 = s->input.new_convzs0zssimpflatzs25;
    const iint_t    *const new_convzs0zssimpflatzs26 = s->input.new_convzs0zssimpflatzs26;
    const itime_t   *const new_convzs0zssimpflatzs27 = s->input.new_convzs0zssimpflatzs27;
    
    for (iint_t i = 0; i < new_count; i++) {
        ifactid_t        convzs1              = i;
        itime_t          convzs2              = new_convzs0zssimpflatzs27[i];
        ierror_t         convzs0zssimpflatzs25 = new_convzs0zssimpflatzs25[i];
        iint_t           convzs0zssimpflatzs26 = new_convzs0zssimpflatzs26[i];
        itime_t          convzs0zssimpflatzs27 = new_convzs0zssimpflatzs27[i];
        szsreifyzs2zsconvzs5zsavalzs0zssimpflatzs13 = acczsszsreifyzs2zsconvzs5zssimpflatzs11; /* read */
        szsreifyzs2zsconvzs5zsavalzs0zssimpflatzs14 = acczsszsreifyzs2zsconvzs5zssimpflatzs12; /* read */
        flatzs0zssimpflatzs15                 = ierror_not_an_error;                  /* init */
        flatzs0zssimpflatzs16                 = 0x7420b1100000000;                    /* init */
        
        if (ierror_eq (szsreifyzs2zsconvzs5zsavalzs0zssimpflatzs13, ierror_not_an_error)) {
            flatzs4                           = 0x7420b1100000000;                    /* init */
            iint_t           simpflatzs32     = itime_days_diff (0x7bc010600000000, convzs0zssimpflatzs27); /* let */
            iint_t           simpflatzs33     = iint_neg (simpflatzs32);              /* let */
            itime_t          simpflatzs34     = itime_minus_days (0x7d0010100000000, simpflatzs33); /* let */
            
            if (itime_gt (simpflatzs34, szsreifyzs2zsconvzs5zsavalzs0zssimpflatzs14)) {
                iint_t           simpflatzs37 = itime_days_diff (0x7bc010600000000, convzs0zssimpflatzs27); /* let */
                iint_t           simpflatzs38 = iint_neg (simpflatzs37);              /* let */
                flatzs4                       = itime_minus_days (0x7d0010100000000, simpflatzs38); /* write */
            } else {
                flatzs4                       = szsreifyzs2zsconvzs5zsavalzs0zssimpflatzs14; /* write */
            }
            
            flatzs4                           = flatzs4;                              /* read */
            flatzs0zssimpflatzs15             = ierror_not_an_error;                  /* write */
            flatzs0zssimpflatzs16             = flatzs4;                              /* write */
        } else {
            flatzs3zssimpflatzs17             = ierror_not_an_error;                  /* init */
            flatzs3zssimpflatzs18             = 0x7420b1100000000;                    /* init */
            
            if (ierror_eq (ierror_fold1_no_value, szsreifyzs2zsconvzs5zsavalzs0zssimpflatzs13)) {
                flatzs3zssimpflatzs17         = ierror_not_an_error;                  /* write */
                iint_t           simpflatzs51 = itime_days_diff (0x7bc010600000000, convzs0zssimpflatzs27); /* let */
                iint_t           simpflatzs52 = iint_neg (simpflatzs51);              /* let */
                flatzs3zssimpflatzs18         = itime_minus_days (0x7d0010100000000, simpflatzs52); /* write */
            } else {
                flatzs3zssimpflatzs17         = szsreifyzs2zsconvzs5zsavalzs0zssimpflatzs13; /* write */
                flatzs3zssimpflatzs18         = 0x7420b1100000000;                    /* write */
            }
            
            flatzs3zssimpflatzs19             = flatzs3zssimpflatzs17;                /* read */
            flatzs3zssimpflatzs20             = flatzs3zssimpflatzs18;                /* read */
            flatzs0zssimpflatzs15             = flatzs3zssimpflatzs19;                /* write */
            flatzs0zssimpflatzs16             = flatzs3zssimpflatzs20;                /* write */
        }
        
        flatzs0zssimpflatzs21                 = flatzs0zssimpflatzs15;                /* read */
        flatzs0zssimpflatzs22                 = flatzs0zssimpflatzs16;                /* read */
        acczsszsreifyzs2zsconvzs5zssimpflatzs11 = flatzs0zssimpflatzs21;              /* write */
        acczsszsreifyzs2zsconvzs5zssimpflatzs12 = flatzs0zssimpflatzs22;              /* write */
    }
    
    s->has_0_0_acczsszsreifyzs2zsconvzs5zssimpflatzs11 = itrue;                       /* save */
    s->res_0_0_acczsszsreifyzs2zsconvzs5zssimpflatzs11 = acczsszsreifyzs2zsconvzs5zssimpflatzs11; /* save */
    
    s->has_0_0_acczsszsreifyzs2zsconvzs5zssimpflatzs12 = itrue;                       /* save */
    s->res_0_0_acczsszsreifyzs2zsconvzs5zssimpflatzs12 = acczsszsreifyzs2zsconvzs5zssimpflatzs12; /* save */
    
    szsreifyzs2zsconvzs5zssimpflatzs23        = acczsszsreifyzs2zsconvzs5zssimpflatzs11; /* read */
    szsreifyzs2zsconvzs5zssimpflatzs24        = acczsszsreifyzs2zsconvzs5zssimpflatzs12; /* read */
    s->replzsixzs0                            = szsreifyzs2zsconvzs5zssimpflatzs23;   /* output */
    s->replzsixzs1                            = szsreifyzs2zsconvzs5zssimpflatzs24;   /* output */
}

- C evaluation:
[homer, 2029-12-27
,marge, 2009-12-12]

- Core evaluation:
[homer, 2029-12-27
,marge, 2009-12-12]

> > -- Math
> ok, c is now off
ok, flatten (simplified) is now off
> > - C evaluation:
[homer, NaN]

- Core evaluation:
[homer, NaN]

> > - C evaluation:
[homer, Infinity]

- Core evaluation:
[homer, Infinity]

> 