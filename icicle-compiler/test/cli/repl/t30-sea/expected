Queries will no longer be evaluated using the C evaluator.
Snapshot mode activated with a snapshot date of 2017-01-01.
Loaded dictionary with 5 inputs, 0 outputs, 70 functions.
Selected psv file as input: test/cli/repl/data.psv

  ██▓ ▄████▄   ██▓ ▄████▄   ██▓    ▓█████
 ▓██▒▒██▀ ▀█  ▓██▒▒██▀ ▀█  ▓██▒    ▓█   ▀
 ▒██▒▒▓█    ▄ ▒██▒▒▓█    ▄ ▒██░    ▒███
 ░██░▒▓▓▄ ▄██▒░██░▒▓▓▄ ▄██▒▒██░    ▒▓█  ▄
 ░██░▒ ▓███▀ ░░██░▒ ▓███▀ ░░██████▒░▒████▒
 ░▓  ░ ░▒ ▒  ░░▓  ░ ░▒ ▒  ░░ ▒░▓  ░░░ ▒░ ░
  ▒ ░  ░  ▒    ▒ ░  ░  ▒   ░ ░ ▒  ░ ░ ░  ░
  ▒ ░░         ▒ ░░          ░ ░ REPL ░
  ░  ░ ░       ░  ░ ░          ░  ░   ░  ░
     ░            ░
                  ░     :help for help

λ -- Show everything
λ The flattened simplified avalanche will be shown during evaluation.
The C will be shown during evaluation.
λ λ -- Enable C evaluation
λ Queries will be evaluated using the C evaluator.
λ λ -- An interesting expression with structs and strings
λ Flattened (simplified), not typechecked
---------------------------------------

conv-2 : Time =
  TIME
conv-3 : Int =
  MAX_MAP_SIZE

acc-conv-10-simpflat-17 =i ExceptNotAnError : Error
acc-conv-10-simpflat-18 =i 0.0 : Double
acc-s-reify-6-conv-11-simpflat-23 =i ExceptFold1NoValue : Error
acc-s-reify-6-conv-11-simpflat-24 =i 0.0 : Double
acc-s-reify-6-conv-11-simpflat-25 =i 0.0 : Double
acc-conv-75-simpflat-26 =i ExceptNotAnError : Error
acc-conv-75-simpflat-27 =i 0.0 : Double
acc-a-conv-76-simpflat-32 =i ExceptNotAnError : Error
acc-a-conv-76-simpflat-33 =i 0.0 : Double
acc-a-conv-76-simpflat-34 =i 0.0 : Double
acc-a-conv-76-simpflat-35 =i 0.0 : Double

for_facts conv-1 : Time
        , conv-0-simpflat-264 : Error
        , conv-0-simpflat-265 : String
        , conv-0-simpflat-266 : Int
        , conv-0-simpflat-267 : Time {
    flat-0-simpflat-36 =i ExceptNotAnError : Error
    flat-0-simpflat-37 =i 0.0 : Double
    
    if (eq#
          conv-0-simpflat-264
          ExceptNotAnError)
    {
        reify-3-conv-8 = doubleOfInt#
                           conv-0-simpflat-266
        flat-0-simpflat-36 =w ExceptNotAnError
        flat-0-simpflat-37 =w reify-3-conv-8
    }
    else
    {
        flat-0-simpflat-36 =w conv-0-simpflat-264
        flat-0-simpflat-37 =w 0.0
    }
    
    flat-0-simpflat-38 =r flat-0-simpflat-36
    flat-0-simpflat-39 =r flat-0-simpflat-37
    acc-conv-10-simpflat-17 =w flat-0-simpflat-38
    acc-conv-10-simpflat-18 =w flat-0-simpflat-39
    conv-10-aval-1-simpflat-40 =r acc-conv-10-simpflat-17
    conv-10-aval-1-simpflat-41 =r acc-conv-10-simpflat-18
    s-reify-6-conv-11-aval-0-simpflat-46 =r acc-s-reify-6-conv-11-simpflat-23
    s-reify-6-conv-11-aval-0-simpflat-47 =r acc-s-reify-6-conv-11-simpflat-24
    s-reify-6-conv-11-aval-0-simpflat-48 =r acc-s-reify-6-conv-11-simpflat-25
    flat-1-simpflat-49 =i ExceptNotAnError : Error
    flat-1-simpflat-50 =i 0.0 : Double
    flat-1-simpflat-51 =i 0.0 : Double
    
    if (eq#
          s-reify-6-conv-11-aval-0-simpflat-46
          ExceptNotAnError)
    {
        flat-8-simpflat-52 =i ExceptNotAnError : Error
        flat-8-simpflat-53 =i 0.0 : Double
        
        if (eq#
              conv-10-aval-1-simpflat-40
              ExceptNotAnError)
        {
            conv-24 = sub#
                        conv-10-aval-1-simpflat-41
                        s-reify-6-conv-11-aval-0-simpflat-47
            flat-24-simpflat-54 =i ExceptNotAnError : Error
            flat-24-simpflat-55 =i 0.0 : Double
            
            if (doubleIsValid# conv-24)
            {
                flat-24-simpflat-54 =w ExceptNotAnError
                flat-24-simpflat-55 =w conv-24
            }
            else
            {
                flat-24-simpflat-54 =w ExceptNotANumber
                flat-24-simpflat-55 =w 0.0
            }
            
            flat-24-simpflat-56 =r flat-24-simpflat-54
            flat-24-simpflat-57 =r flat-24-simpflat-55
            flat-8-simpflat-52 =w flat-24-simpflat-56
            flat-8-simpflat-53 =w flat-24-simpflat-57
        }
        else
        {
            flat-8-simpflat-52 =w conv-10-aval-1-simpflat-40
            flat-8-simpflat-53 =w 0.0
        }
        
        flat-8-simpflat-58 =r flat-8-simpflat-52
        flat-8-simpflat-59 =r flat-8-simpflat-53
        flat-9-simpflat-60 =i ExceptNotAnError : Error
        flat-9-simpflat-61 =i 0.0 : Double
        
        if (eq#
              flat-8-simpflat-58
              ExceptNotAnError)
        {
            conv-29 = add#
                        s-reify-6-conv-11-aval-0-simpflat-48
                        1.0
            flat-20-simpflat-62 =i ExceptNotAnError : Error
            flat-20-simpflat-63 =i 0.0 : Double
            
            if (doubleIsValid# conv-29)
            {
                conv-33 = div#
                            flat-8-simpflat-59
                            conv-29
                flat-21-simpflat-64 =i ExceptNotAnError : Error
                flat-21-simpflat-65 =i 0.0 : Double
                
                if (doubleIsValid# conv-33)
                {
                    flat-21-simpflat-64 =w ExceptNotAnError
                    flat-21-simpflat-65 =w conv-33
                }
                else
                {
                    flat-21-simpflat-64 =w ExceptNotANumber
                    flat-21-simpflat-65 =w 0.0
                }
                
                flat-21-simpflat-66 =r flat-21-simpflat-64
                flat-21-simpflat-67 =r flat-21-simpflat-65
                flat-20-simpflat-62 =w flat-21-simpflat-66
                flat-20-simpflat-63 =w flat-21-simpflat-67
            }
            else
            {
                flat-20-simpflat-62 =w ExceptNotANumber
                flat-20-simpflat-63 =w 0.0
            }
            
            flat-20-simpflat-68 =r flat-20-simpflat-62
            flat-20-simpflat-69 =r flat-20-simpflat-63
            flat-9-simpflat-60 =w flat-20-simpflat-68
            flat-9-simpflat-61 =w flat-20-simpflat-69
        }
        else
        {
            flat-9-simpflat-60 =w flat-8-simpflat-58
            flat-9-simpflat-61 =w 0.0
        }
        
        flat-9-simpflat-70 =r flat-9-simpflat-60
        flat-9-simpflat-71 =r flat-9-simpflat-61
        flat-10-simpflat-72 =i ExceptNotAnError : Error
        flat-10-simpflat-73 =i 0.0 : Double
        
        if (eq#
              flat-9-simpflat-70
              ExceptNotAnError)
        {
            conv-39 = add#
                        s-reify-6-conv-11-aval-0-simpflat-47
                        flat-9-simpflat-71
            flat-17-simpflat-74 =i ExceptNotAnError : Error
            flat-17-simpflat-75 =i 0.0 : Double
            
            if (doubleIsValid# conv-39)
            {
                flat-17-simpflat-74 =w ExceptNotAnError
                flat-17-simpflat-75 =w conv-39
            }
            else
            {
                flat-17-simpflat-74 =w ExceptNotANumber
                flat-17-simpflat-75 =w 0.0
            }
            
            flat-17-simpflat-76 =r flat-17-simpflat-74
            flat-17-simpflat-77 =r flat-17-simpflat-75
            flat-10-simpflat-72 =w flat-17-simpflat-76
            flat-10-simpflat-73 =w flat-17-simpflat-77
        }
        else
        {
            flat-10-simpflat-72 =w flat-9-simpflat-70
            flat-10-simpflat-73 =w 0.0
        }
        
        flat-10-simpflat-78 =r flat-10-simpflat-72
        flat-10-simpflat-79 =r flat-10-simpflat-73
        flat-11-simpflat-80 =i ExceptNotAnError : Error
        flat-11-simpflat-81 =i 0.0 : Double
        flat-11-simpflat-82 =i 0.0 : Double
        
        if (eq#
              flat-10-simpflat-78
              ExceptNotAnError)
        {
            conv-44 = add#
                        s-reify-6-conv-11-aval-0-simpflat-48
                        1.0
            flat-14-simpflat-83 =i ExceptNotAnError : Error
            flat-14-simpflat-84 =i 0.0 : Double
            flat-14-simpflat-85 =i 0.0 : Double
            
            if (doubleIsValid# conv-44)
            {
                flat-14-simpflat-83 =w ExceptNotAnError
                flat-14-simpflat-84 =w flat-10-simpflat-79
                flat-14-simpflat-85 =w conv-44
            }
            else
            {
                flat-14-simpflat-83 =w ExceptNotANumber
                flat-14-simpflat-84 =w 0.0
                flat-14-simpflat-85 =w 0.0
            }
            
            flat-14-simpflat-86 =r flat-14-simpflat-83
            flat-14-simpflat-87 =r flat-14-simpflat-84
            flat-14-simpflat-88 =r flat-14-simpflat-85
            flat-11-simpflat-80 =w flat-14-simpflat-86
            flat-11-simpflat-81 =w flat-14-simpflat-87
            flat-11-simpflat-82 =w flat-14-simpflat-88
        }
        else
        {
            flat-11-simpflat-80 =w flat-10-simpflat-78
            flat-11-simpflat-81 =w 0.0
            flat-11-simpflat-82 =w 0.0
        }
        
        flat-11-simpflat-89 =r flat-11-simpflat-80
        flat-11-simpflat-90 =r flat-11-simpflat-81
        flat-11-simpflat-91 =r flat-11-simpflat-82
        flat-1-simpflat-49 =w flat-11-simpflat-89
        flat-1-simpflat-50 =w flat-11-simpflat-90
        flat-1-simpflat-51 =w flat-11-simpflat-91
    }
    else
    {
        flat-4-simpflat-92 =i ExceptNotAnError : Error
        flat-4-simpflat-93 =i 0.0 : Double
        flat-4-simpflat-94 =i 0.0 : Double
        
        if (eq#
              ExceptFold1NoValue
              s-reify-6-conv-11-aval-0-simpflat-46)
        {
            flat-5-simpflat-95 =i ExceptNotAnError : Error
            flat-5-simpflat-96 =i 0.0 : Double
            flat-5-simpflat-97 =i 0.0 : Double
            
            if (eq#
                  conv-10-aval-1-simpflat-40
                  ExceptNotAnError)
            {
                flat-5-simpflat-95 =w ExceptNotAnError
                flat-5-simpflat-96 =w conv-10-aval-1-simpflat-41
                flat-5-simpflat-97 =w 1.0
            }
            else
            {
                flat-5-simpflat-95 =w conv-10-aval-1-simpflat-40
                flat-5-simpflat-96 =w 0.0
                flat-5-simpflat-97 =w 0.0
            }
            
            flat-5-simpflat-98 =r flat-5-simpflat-95
            flat-5-simpflat-99 =r flat-5-simpflat-96
            flat-5-simpflat-100 =r flat-5-simpflat-97
            flat-4-simpflat-92 =w flat-5-simpflat-98
            flat-4-simpflat-93 =w flat-5-simpflat-99
            flat-4-simpflat-94 =w flat-5-simpflat-100
        }
        else
        {
            flat-4-simpflat-92 =w s-reify-6-conv-11-aval-0-simpflat-46
            flat-4-simpflat-93 =w 0.0
            flat-4-simpflat-94 =w 0.0
        }
        
        flat-4-simpflat-101 =r flat-4-simpflat-92
        flat-4-simpflat-102 =r flat-4-simpflat-93
        flat-4-simpflat-103 =r flat-4-simpflat-94
        flat-1-simpflat-49 =w flat-4-simpflat-101
        flat-1-simpflat-50 =w flat-4-simpflat-102
        flat-1-simpflat-51 =w flat-4-simpflat-103
    }
    
    flat-1-simpflat-104 =r flat-1-simpflat-49
    flat-1-simpflat-105 =r flat-1-simpflat-50
    flat-1-simpflat-106 =r flat-1-simpflat-51
    acc-s-reify-6-conv-11-simpflat-23 =w flat-1-simpflat-104
    acc-s-reify-6-conv-11-simpflat-24 =w flat-1-simpflat-105
    acc-s-reify-6-conv-11-simpflat-25 =w flat-1-simpflat-106
    flat-25 =i False : Bool
    
    if (eq#
          conv-0-simpflat-264
          ExceptNotAnError)
    {
        flat-25 =w eq#
                     conv-0-simpflat-265
                     "torso"
    }
    else
    {
        flat-25 =w True
    }
    
    flat-25 =r flat-25
    
    if (flat-25)
    {
        flat-26-simpflat-107 =i ExceptNotAnError : Error
        flat-26-simpflat-108 =i 0.0 : Double
        
        if (eq#
              conv-0-simpflat-264
              ExceptNotAnError)
        {
            simpflat-8 = doubleOfInt#
                           conv-0-simpflat-266
            flat-26-simpflat-107 =w ExceptNotAnError
            flat-26-simpflat-108 =w simpflat-8
        }
        else
        {
            flat-26-simpflat-107 =w conv-0-simpflat-264
            flat-26-simpflat-108 =w 0.0
        }
        
        flat-26-simpflat-109 =r flat-26-simpflat-107
        flat-26-simpflat-110 =r flat-26-simpflat-108
        acc-conv-75-simpflat-26 =w flat-26-simpflat-109
        acc-conv-75-simpflat-27 =w flat-26-simpflat-110
        conv-75-aval-3-simpflat-111 =r acc-conv-75-simpflat-26
        conv-75-aval-3-simpflat-112 =r acc-conv-75-simpflat-27
        a-conv-76-aval-2-simpflat-117 =r acc-a-conv-76-simpflat-32
        a-conv-76-aval-2-simpflat-118 =r acc-a-conv-76-simpflat-33
        a-conv-76-aval-2-simpflat-119 =r acc-a-conv-76-simpflat-34
        a-conv-76-aval-2-simpflat-120 =r acc-a-conv-76-simpflat-35
        flat-27-simpflat-121 =i ExceptNotAnError : Error
        flat-27-simpflat-122 =i 0.0 : Double
        flat-27-simpflat-123 =i 0.0 : Double
        flat-27-simpflat-124 =i 0.0 : Double
        
        if (eq#
              a-conv-76-aval-2-simpflat-117
              ExceptNotAnError)
        {
            simp-23 = add#
                        a-conv-76-aval-2-simpflat-118
                        1.0
            flat-30-simpflat-125 =i ExceptNotAnError : Error
            flat-30-simpflat-126 =i 0.0 : Double
            
            if (doubleIsValid# simp-23)
            {
                flat-30-simpflat-125 =w ExceptNotAnError
                flat-30-simpflat-126 =w simp-23
            }
            else
            {
                flat-30-simpflat-125 =w ExceptNotANumber
                flat-30-simpflat-126 =w 0.0
            }
            
            flat-30-simpflat-127 =r flat-30-simpflat-125
            flat-30-simpflat-128 =r flat-30-simpflat-126
            flat-31-simpflat-129 =i ExceptNotAnError : Error
            flat-31-simpflat-130 =i 0.0 : Double
            
            if (eq#
                  conv-75-aval-3-simpflat-111
                  ExceptNotAnError)
            {
                conv-88 = sub#
                            conv-75-aval-3-simpflat-112
                            a-conv-76-aval-2-simpflat-119
                flat-75-simpflat-131 =i ExceptNotAnError : Error
                flat-75-simpflat-132 =i 0.0 : Double
                
                if (doubleIsValid# conv-88)
                {
                    flat-75-simpflat-131 =w ExceptNotAnError
                    flat-75-simpflat-132 =w conv-88
                }
                else
                {
                    flat-75-simpflat-131 =w ExceptNotANumber
                    flat-75-simpflat-132 =w 0.0
                }
                
                flat-75-simpflat-133 =r flat-75-simpflat-131
                flat-75-simpflat-134 =r flat-75-simpflat-132
                flat-31-simpflat-129 =w flat-75-simpflat-133
                flat-31-simpflat-130 =w flat-75-simpflat-134
            }
            else
            {
                flat-31-simpflat-129 =w conv-75-aval-3-simpflat-111
                flat-31-simpflat-130 =w 0.0
            }
            
            flat-31-simpflat-135 =r flat-31-simpflat-129
            flat-31-simpflat-136 =r flat-31-simpflat-130
            flat-32-simpflat-137 =i ExceptNotAnError : Error
            flat-32-simpflat-138 =i 0.0 : Double
            
            if (eq#
                  flat-31-simpflat-135
                  ExceptNotAnError)
            {
                flat-69-simpflat-139 =i ExceptNotAnError : Error
                flat-69-simpflat-140 =i 0.0 : Double
                
                if (eq#
                      flat-30-simpflat-127
                      ExceptNotAnError)
                {
                    conv-96 = div#
                                flat-31-simpflat-136
                                flat-30-simpflat-128
                    flat-72-simpflat-141 =i ExceptNotAnError : Error
                    flat-72-simpflat-142 =i 0.0 : Double
                    
                    if (doubleIsValid# conv-96)
                    {
                        flat-72-simpflat-141 =w ExceptNotAnError
                        flat-72-simpflat-142 =w conv-96
                    }
                    else
                    {
                        flat-72-simpflat-141 =w ExceptNotANumber
                        flat-72-simpflat-142 =w 0.0
                    }
                    
                    flat-72-simpflat-143 =r flat-72-simpflat-141
                    flat-72-simpflat-144 =r flat-72-simpflat-142
                    flat-69-simpflat-139 =w flat-72-simpflat-143
                    flat-69-simpflat-140 =w flat-72-simpflat-144
                }
                else
                {
                    flat-69-simpflat-139 =w flat-30-simpflat-127
                    flat-69-simpflat-140 =w 0.0
                }
                
                flat-69-simpflat-145 =r flat-69-simpflat-139
                flat-69-simpflat-146 =r flat-69-simpflat-140
                flat-32-simpflat-137 =w flat-69-simpflat-145
                flat-32-simpflat-138 =w flat-69-simpflat-146
            }
            else
            {
                flat-32-simpflat-137 =w flat-31-simpflat-135
                flat-32-simpflat-138 =w 0.0
            }
            
            flat-32-simpflat-147 =r flat-32-simpflat-137
            flat-32-simpflat-148 =r flat-32-simpflat-138
            flat-33-simpflat-149 =i ExceptNotAnError : Error
            flat-33-simpflat-150 =i 0.0 : Double
            
            if (eq#
                  flat-32-simpflat-147
                  ExceptNotAnError)
            {
                conv-102 = add#
                             a-conv-76-aval-2-simpflat-119
                             flat-32-simpflat-148
                flat-66-simpflat-151 =i ExceptNotAnError : Error
                flat-66-simpflat-152 =i 0.0 : Double
                
                if (doubleIsValid# conv-102)
                {
                    flat-66-simpflat-151 =w ExceptNotAnError
                    flat-66-simpflat-152 =w conv-102
                }
                else
                {
                    flat-66-simpflat-151 =w ExceptNotANumber
                    flat-66-simpflat-152 =w 0.0
                }
                
                flat-66-simpflat-153 =r flat-66-simpflat-151
                flat-66-simpflat-154 =r flat-66-simpflat-152
                flat-33-simpflat-149 =w flat-66-simpflat-153
                flat-33-simpflat-150 =w flat-66-simpflat-154
            }
            else
            {
                flat-33-simpflat-149 =w flat-32-simpflat-147
                flat-33-simpflat-150 =w 0.0
            }
            
            flat-33-simpflat-155 =r flat-33-simpflat-149
            flat-33-simpflat-156 =r flat-33-simpflat-150
            flat-34-simpflat-157 =i ExceptNotAnError : Error
            flat-34-simpflat-158 =i 0.0 : Double
            
            if (eq#
                  flat-31-simpflat-135
                  ExceptNotAnError)
            {
                flat-53-simpflat-159 =i ExceptNotAnError : Error
                flat-53-simpflat-160 =i 0.0 : Double
                
                if (eq#
                      conv-75-aval-3-simpflat-111
                      ExceptNotAnError)
                {
                    flat-60-simpflat-161 =i ExceptNotAnError : Error
                    flat-60-simpflat-162 =i 0.0 : Double
                    
                    if (eq#
                          flat-33-simpflat-155
                          ExceptNotAnError)
                    {
                        conv-112 = sub#
                                     conv-75-aval-3-simpflat-112
                                     flat-33-simpflat-156
                        flat-63-simpflat-163 =i ExceptNotAnError : Error
                        flat-63-simpflat-164 =i 0.0 : Double
                        
                        if (doubleIsValid# conv-112)
                        {
                            flat-63-simpflat-163 =w ExceptNotAnError
                            flat-63-simpflat-164 =w conv-112
                        }
                        else
                        {
                            flat-63-simpflat-163 =w ExceptNotANumber
                            flat-63-simpflat-164 =w 0.0
                        }
                        
                        flat-63-simpflat-165 =r flat-63-simpflat-163
                        flat-63-simpflat-166 =r flat-63-simpflat-164
                        flat-60-simpflat-161 =w flat-63-simpflat-165
                        flat-60-simpflat-162 =w flat-63-simpflat-166
                    }
                    else
                    {
                        flat-60-simpflat-161 =w flat-33-simpflat-155
                        flat-60-simpflat-162 =w 0.0
                    }
                    
                    flat-60-simpflat-167 =r flat-60-simpflat-161
                    flat-60-simpflat-168 =r flat-60-simpflat-162
                    flat-53-simpflat-159 =w flat-60-simpflat-167
                    flat-53-simpflat-160 =w flat-60-simpflat-168
                }
                else
                {
                    flat-53-simpflat-159 =w conv-75-aval-3-simpflat-111
                    flat-53-simpflat-160 =w 0.0
                }
                
                flat-53-simpflat-169 =r flat-53-simpflat-159
                flat-53-simpflat-170 =r flat-53-simpflat-160
                flat-54-simpflat-171 =i ExceptNotAnError : Error
                flat-54-simpflat-172 =i 0.0 : Double
                
                if (eq#
                      flat-53-simpflat-169
                      ExceptNotAnError)
                {
                    conv-118 = mul#
                                 flat-31-simpflat-136
                                 flat-53-simpflat-170
                    flat-57-simpflat-173 =i ExceptNotAnError : Error
                    flat-57-simpflat-174 =i 0.0 : Double
                    
                    if (doubleIsValid# conv-118)
                    {
                        flat-57-simpflat-173 =w ExceptNotAnError
                        flat-57-simpflat-174 =w conv-118
                    }
                    else
                    {
                        flat-57-simpflat-173 =w ExceptNotANumber
                        flat-57-simpflat-174 =w 0.0
                    }
                    
                    flat-57-simpflat-175 =r flat-57-simpflat-173
                    flat-57-simpflat-176 =r flat-57-simpflat-174
                    flat-54-simpflat-171 =w flat-57-simpflat-175
                    flat-54-simpflat-172 =w flat-57-simpflat-176
                }
                else
                {
                    flat-54-simpflat-171 =w flat-53-simpflat-169
                    flat-54-simpflat-172 =w 0.0
                }
                
                flat-54-simpflat-177 =r flat-54-simpflat-171
                flat-54-simpflat-178 =r flat-54-simpflat-172
                flat-34-simpflat-157 =w flat-54-simpflat-177
                flat-34-simpflat-158 =w flat-54-simpflat-178
            }
            else
            {
                flat-34-simpflat-157 =w flat-31-simpflat-135
                flat-34-simpflat-158 =w 0.0
            }
            
            flat-34-simpflat-179 =r flat-34-simpflat-157
            flat-34-simpflat-180 =r flat-34-simpflat-158
            flat-35-simpflat-181 =i ExceptNotAnError : Error
            flat-35-simpflat-182 =i 0.0 : Double
            
            if (eq#
                  flat-34-simpflat-179
                  ExceptNotAnError)
            {
                conv-124 = add#
                             a-conv-76-aval-2-simpflat-120
                             flat-34-simpflat-180
                flat-50-simpflat-183 =i ExceptNotAnError : Error
                flat-50-simpflat-184 =i 0.0 : Double
                
                if (doubleIsValid# conv-124)
                {
                    flat-50-simpflat-183 =w ExceptNotAnError
                    flat-50-simpflat-184 =w conv-124
                }
                else
                {
                    flat-50-simpflat-183 =w ExceptNotANumber
                    flat-50-simpflat-184 =w 0.0
                }
                
                flat-50-simpflat-185 =r flat-50-simpflat-183
                flat-50-simpflat-186 =r flat-50-simpflat-184
                flat-35-simpflat-181 =w flat-50-simpflat-185
                flat-35-simpflat-182 =w flat-50-simpflat-186
            }
            else
            {
                flat-35-simpflat-181 =w flat-34-simpflat-179
                flat-35-simpflat-182 =w 0.0
            }
            
            flat-35-simpflat-187 =r flat-35-simpflat-181
            flat-35-simpflat-188 =r flat-35-simpflat-182
            flat-36-simpflat-189 =i ExceptNotAnError : Error
            flat-36-simpflat-190 =i 0.0 : Double
            flat-36-simpflat-191 =i 0.0 : Double
            
            if (eq#
                  flat-30-simpflat-127
                  ExceptNotAnError)
            {
                flat-45-simpflat-192 =i ExceptNotAnError : Error
                flat-45-simpflat-193 =i 0.0 : Double
                flat-45-simpflat-194 =i 0.0 : Double
                
                if (eq#
                      flat-33-simpflat-155
                      ExceptNotAnError)
                {
                    flat-45-simpflat-192 =w ExceptNotAnError
                    flat-45-simpflat-193 =w flat-30-simpflat-128
                    flat-45-simpflat-194 =w flat-33-simpflat-156
                }
                else
                {
                    flat-45-simpflat-192 =w flat-33-simpflat-155
                    flat-45-simpflat-193 =w 0.0
                    flat-45-simpflat-194 =w 0.0
                }
                
                flat-45-simpflat-195 =r flat-45-simpflat-192
                flat-45-simpflat-196 =r flat-45-simpflat-193
                flat-45-simpflat-197 =r flat-45-simpflat-194
                flat-36-simpflat-189 =w flat-45-simpflat-195
                flat-36-simpflat-190 =w flat-45-simpflat-196
                flat-36-simpflat-191 =w flat-45-simpflat-197
            }
            else
            {
                flat-36-simpflat-189 =w flat-30-simpflat-127
                flat-36-simpflat-190 =w 0.0
                flat-36-simpflat-191 =w 0.0
            }
            
            flat-36-simpflat-198 =r flat-36-simpflat-189
            flat-36-simpflat-199 =r flat-36-simpflat-190
            flat-36-simpflat-200 =r flat-36-simpflat-191
            flat-37-simpflat-201 =i ExceptNotAnError : Error
            flat-37-simpflat-202 =i 0.0 : Double
            flat-37-simpflat-203 =i 0.0 : Double
            flat-37-simpflat-204 =i 0.0 : Double
            
            if (eq#
                  flat-36-simpflat-198
                  ExceptNotAnError)
            {
                flat-40-simpflat-205 =i ExceptNotAnError : Error
                flat-40-simpflat-206 =i 0.0 : Double
                flat-40-simpflat-207 =i 0.0 : Double
                flat-40-simpflat-208 =i 0.0 : Double
                
                if (eq#
                      flat-35-simpflat-187
                      ExceptNotAnError)
                {
                    flat-40-simpflat-205 =w ExceptNotAnError
                    flat-40-simpflat-206 =w flat-36-simpflat-199
                    flat-40-simpflat-207 =w flat-36-simpflat-200
                    flat-40-simpflat-208 =w flat-35-simpflat-188
                }
                else
                {
                    flat-40-simpflat-205 =w flat-35-simpflat-187
                    flat-40-simpflat-206 =w 0.0
                    flat-40-simpflat-207 =w 0.0
                    flat-40-simpflat-208 =w 0.0
                }
                
                flat-40-simpflat-209 =r flat-40-simpflat-205
                flat-40-simpflat-210 =r flat-40-simpflat-206
                flat-40-simpflat-211 =r flat-40-simpflat-207
                flat-40-simpflat-212 =r flat-40-simpflat-208
                flat-37-simpflat-201 =w flat-40-simpflat-209
                flat-37-simpflat-202 =w flat-40-simpflat-210
                flat-37-simpflat-203 =w flat-40-simpflat-211
                flat-37-simpflat-204 =w flat-40-simpflat-212
            }
            else
            {
                flat-37-simpflat-201 =w flat-36-simpflat-198
                flat-37-simpflat-202 =w 0.0
                flat-37-simpflat-203 =w 0.0
                flat-37-simpflat-204 =w 0.0
            }
            
            flat-37-simpflat-213 =r flat-37-simpflat-201
            flat-37-simpflat-214 =r flat-37-simpflat-202
            flat-37-simpflat-215 =r flat-37-simpflat-203
            flat-37-simpflat-216 =r flat-37-simpflat-204
            flat-27-simpflat-121 =w flat-37-simpflat-213
            flat-27-simpflat-122 =w flat-37-simpflat-214
            flat-27-simpflat-123 =w flat-37-simpflat-215
            flat-27-simpflat-124 =w flat-37-simpflat-216
        }
        else
        {
            flat-27-simpflat-121 =w a-conv-76-aval-2-simpflat-117
            flat-27-simpflat-122 =w 0.0
            flat-27-simpflat-123 =w 0.0
            flat-27-simpflat-124 =w 0.0
        }
        
        flat-27-simpflat-217 =r flat-27-simpflat-121
        flat-27-simpflat-218 =r flat-27-simpflat-122
        flat-27-simpflat-219 =r flat-27-simpflat-123
        flat-27-simpflat-220 =r flat-27-simpflat-124
        acc-a-conv-76-simpflat-32 =w flat-27-simpflat-217
        acc-a-conv-76-simpflat-33 =w flat-27-simpflat-218
        acc-a-conv-76-simpflat-34 =w flat-27-simpflat-219
        acc-a-conv-76-simpflat-35 =w flat-27-simpflat-220
    }
    
}

a-conv-76-simpflat-221 =r acc-a-conv-76-simpflat-32
a-conv-76-simpflat-222 =r acc-a-conv-76-simpflat-33
a-conv-76-simpflat-224 =r acc-a-conv-76-simpflat-35
s-reify-6-conv-11-simpflat-225 =r acc-s-reify-6-conv-11-simpflat-23
s-reify-6-conv-11-simpflat-226 =r acc-s-reify-6-conv-11-simpflat-24
flat-82-simpflat-228 =i ExceptNotAnError : Error
flat-82-simpflat-229 =i 0.0 : Double

if (eq#
      s-reify-6-conv-11-simpflat-225
      ExceptNotAnError)
{
    flat-82-simpflat-228 =w ExceptNotAnError
    flat-82-simpflat-229 =w s-reify-6-conv-11-simpflat-226
}
else
{
    flat-82-simpflat-228 =w s-reify-6-conv-11-simpflat-225
    flat-82-simpflat-229 =w 0.0
}

flat-82-simpflat-230 =r flat-82-simpflat-228
flat-82-simpflat-231 =r flat-82-simpflat-229
flat-83-simpflat-232 =i ExceptNotAnError : Error
flat-83-simpflat-233 =i 0.0 : Double

if (eq#
      flat-82-simpflat-230
      ExceptNotAnError)
{
    flat-86-simpflat-234 =i ExceptNotAnError : Error
    flat-86-simpflat-235 =i 0.0 : Double
    
    if (eq#
          a-conv-76-simpflat-221
          ExceptNotAnError)
    {
        simp-0 = sub#
                   a-conv-76-simpflat-222
                   1.0
        flat-97-simpflat-236 =i ExceptNotAnError : Error
        flat-97-simpflat-237 =i 0.0 : Double
        
        if (doubleIsValid# simp-0)
        {
            conv-157 = div#
                         a-conv-76-simpflat-224
                         simp-0
            flat-98-simpflat-238 =i ExceptNotAnError : Error
            flat-98-simpflat-239 =i 0.0 : Double
            
            if (doubleIsValid# conv-157)
            {
                flat-98-simpflat-238 =w ExceptNotAnError
                flat-98-simpflat-239 =w conv-157
            }
            else
            {
                flat-98-simpflat-238 =w ExceptNotANumber
                flat-98-simpflat-239 =w 0.0
            }
            
            flat-98-simpflat-240 =r flat-98-simpflat-238
            flat-98-simpflat-241 =r flat-98-simpflat-239
            flat-97-simpflat-236 =w flat-98-simpflat-240
            flat-97-simpflat-237 =w flat-98-simpflat-241
        }
        else
        {
            flat-97-simpflat-236 =w ExceptNotANumber
            flat-97-simpflat-237 =w 0.0
        }
        
        flat-97-simpflat-242 =r flat-97-simpflat-236
        flat-97-simpflat-243 =r flat-97-simpflat-237
        flat-86-simpflat-234 =w flat-97-simpflat-242
        flat-86-simpflat-235 =w flat-97-simpflat-243
    }
    else
    {
        flat-86-simpflat-234 =w a-conv-76-simpflat-221
        flat-86-simpflat-235 =w 0.0
    }
    
    flat-86-simpflat-244 =r flat-86-simpflat-234
    flat-86-simpflat-245 =r flat-86-simpflat-235
    flat-87-simpflat-246 =i ExceptNotAnError : Error
    flat-87-simpflat-247 =i 0.0 : Double
    
    if (eq#
          flat-86-simpflat-244
          ExceptNotAnError)
    {
        conv-171 = sqrt#
                     flat-86-simpflat-245
        flat-94-simpflat-248 =i ExceptNotAnError : Error
        flat-94-simpflat-249 =i 0.0 : Double
        
        if (doubleIsValid# conv-171)
        {
            flat-94-simpflat-248 =w ExceptNotAnError
            flat-94-simpflat-249 =w conv-171
        }
        else
        {
            flat-94-simpflat-248 =w ExceptNotANumber
            flat-94-simpflat-249 =w 0.0
        }
        
        flat-94-simpflat-250 =r flat-94-simpflat-248
        flat-94-simpflat-251 =r flat-94-simpflat-249
        flat-87-simpflat-246 =w flat-94-simpflat-250
        flat-87-simpflat-247 =w flat-94-simpflat-251
    }
    else
    {
        flat-87-simpflat-246 =w flat-86-simpflat-244
        flat-87-simpflat-247 =w 0.0
    }
    
    flat-87-simpflat-252 =r flat-87-simpflat-246
    flat-87-simpflat-253 =r flat-87-simpflat-247
    flat-88-simpflat-254 =i ExceptNotAnError : Error
    flat-88-simpflat-255 =i 0.0 : Double
    
    if (eq#
          flat-87-simpflat-252
          ExceptNotAnError)
    {
        conv-179 = mul#
                     flat-82-simpflat-231
                     flat-87-simpflat-253
        flat-91-simpflat-256 =i ExceptNotAnError : Error
        flat-91-simpflat-257 =i 0.0 : Double
        
        if (doubleIsValid# conv-179)
        {
            flat-91-simpflat-256 =w ExceptNotAnError
            flat-91-simpflat-257 =w conv-179
        }
        else
        {
            flat-91-simpflat-256 =w ExceptNotANumber
            flat-91-simpflat-257 =w 0.0
        }
        
        flat-91-simpflat-258 =r flat-91-simpflat-256
        flat-91-simpflat-259 =r flat-91-simpflat-257
        flat-88-simpflat-254 =w flat-91-simpflat-258
        flat-88-simpflat-255 =w flat-91-simpflat-259
    }
    else
    {
        flat-88-simpflat-254 =w flat-87-simpflat-252
        flat-88-simpflat-255 =w 0.0
    }
    
    flat-88-simpflat-260 =r flat-88-simpflat-254
    flat-88-simpflat-261 =r flat-88-simpflat-255
    flat-83-simpflat-232 =w flat-88-simpflat-260
    flat-83-simpflat-233 =w flat-88-simpflat-261
}
else
{
    flat-83-simpflat-232 =w flat-82-simpflat-230
    flat-83-simpflat-233 =w 0.0
}

flat-83-simpflat-262 =r flat-83-simpflat-232
flat-83-simpflat-263 =r flat-83-simpflat-233

output repl:output : Sum Error Double =
    flat-83-simpflat-262 : Error
  , flat-83-simpflat-263 : Double

Flattened Avalanche (simplified), typechecked
---------------------------------------------

conv-2 : Time =
  TIME
conv-3 : Int =
  MAX_MAP_SIZE

acc-conv-10-simpflat-17 =i ExceptNotAnError : Error
acc-conv-10-simpflat-18 =i 0.0 : Double
acc-s-reify-6-conv-11-simpflat-23 =i ExceptFold1NoValue : Error
acc-s-reify-6-conv-11-simpflat-24 =i 0.0 : Double
acc-s-reify-6-conv-11-simpflat-25 =i 0.0 : Double
acc-conv-75-simpflat-26 =i ExceptNotAnError : Error
acc-conv-75-simpflat-27 =i 0.0 : Double
acc-a-conv-76-simpflat-32 =i ExceptNotAnError : Error
acc-a-conv-76-simpflat-33 =i 0.0 : Double
acc-a-conv-76-simpflat-34 =i 0.0 : Double
acc-a-conv-76-simpflat-35 =i 0.0 : Double

for_facts conv-1 : Time
        , conv-0-simpflat-264 : Error
        , conv-0-simpflat-265 : String
        , conv-0-simpflat-266 : Int
        , conv-0-simpflat-267 : Time {
    flat-0-simpflat-36 =i ExceptNotAnError : Error
    flat-0-simpflat-37 =i 0.0 : Double
    
    if (eq#
          conv-0-simpflat-264
          ExceptNotAnError)
    {
        reify-3-conv-8 = doubleOfInt#
                           conv-0-simpflat-266
        flat-0-simpflat-36 =w ExceptNotAnError
        flat-0-simpflat-37 =w reify-3-conv-8
    }
    else
    {
        flat-0-simpflat-36 =w conv-0-simpflat-264
        flat-0-simpflat-37 =w 0.0
    }
    
    flat-0-simpflat-38 =r flat-0-simpflat-36
    flat-0-simpflat-39 =r flat-0-simpflat-37
    acc-conv-10-simpflat-17 =w flat-0-simpflat-38
    acc-conv-10-simpflat-18 =w flat-0-simpflat-39
    conv-10-aval-1-simpflat-40 =r acc-conv-10-simpflat-17
    conv-10-aval-1-simpflat-41 =r acc-conv-10-simpflat-18
    s-reify-6-conv-11-aval-0-simpflat-46 =r acc-s-reify-6-conv-11-simpflat-23
    s-reify-6-conv-11-aval-0-simpflat-47 =r acc-s-reify-6-conv-11-simpflat-24
    s-reify-6-conv-11-aval-0-simpflat-48 =r acc-s-reify-6-conv-11-simpflat-25
    flat-1-simpflat-49 =i ExceptNotAnError : Error
    flat-1-simpflat-50 =i 0.0 : Double
    flat-1-simpflat-51 =i 0.0 : Double
    
    if (eq#
          s-reify-6-conv-11-aval-0-simpflat-46
          ExceptNotAnError)
    {
        flat-8-simpflat-52 =i ExceptNotAnError : Error
        flat-8-simpflat-53 =i 0.0 : Double
        
        if (eq#
              conv-10-aval-1-simpflat-40
              ExceptNotAnError)
        {
            conv-24 = sub#
                        conv-10-aval-1-simpflat-41
                        s-reify-6-conv-11-aval-0-simpflat-47
            flat-24-simpflat-54 =i ExceptNotAnError : Error
            flat-24-simpflat-55 =i 0.0 : Double
            
            if (doubleIsValid# conv-24)
            {
                flat-24-simpflat-54 =w ExceptNotAnError
                flat-24-simpflat-55 =w conv-24
            }
            else
            {
                flat-24-simpflat-54 =w ExceptNotANumber
                flat-24-simpflat-55 =w 0.0
            }
            
            flat-24-simpflat-56 =r flat-24-simpflat-54
            flat-24-simpflat-57 =r flat-24-simpflat-55
            flat-8-simpflat-52 =w flat-24-simpflat-56
            flat-8-simpflat-53 =w flat-24-simpflat-57
        }
        else
        {
            flat-8-simpflat-52 =w conv-10-aval-1-simpflat-40
            flat-8-simpflat-53 =w 0.0
        }
        
        flat-8-simpflat-58 =r flat-8-simpflat-52
        flat-8-simpflat-59 =r flat-8-simpflat-53
        flat-9-simpflat-60 =i ExceptNotAnError : Error
        flat-9-simpflat-61 =i 0.0 : Double
        
        if (eq#
              flat-8-simpflat-58
              ExceptNotAnError)
        {
            conv-29 = add#
                        s-reify-6-conv-11-aval-0-simpflat-48
                        1.0
            flat-20-simpflat-62 =i ExceptNotAnError : Error
            flat-20-simpflat-63 =i 0.0 : Double
            
            if (doubleIsValid# conv-29)
            {
                conv-33 = div#
                            flat-8-simpflat-59
                            conv-29
                flat-21-simpflat-64 =i ExceptNotAnError : Error
                flat-21-simpflat-65 =i 0.0 : Double
                
                if (doubleIsValid# conv-33)
                {
                    flat-21-simpflat-64 =w ExceptNotAnError
                    flat-21-simpflat-65 =w conv-33
                }
                else
                {
                    flat-21-simpflat-64 =w ExceptNotANumber
                    flat-21-simpflat-65 =w 0.0
                }
                
                flat-21-simpflat-66 =r flat-21-simpflat-64
                flat-21-simpflat-67 =r flat-21-simpflat-65
                flat-20-simpflat-62 =w flat-21-simpflat-66
                flat-20-simpflat-63 =w flat-21-simpflat-67
            }
            else
            {
                flat-20-simpflat-62 =w ExceptNotANumber
                flat-20-simpflat-63 =w 0.0
            }
            
            flat-20-simpflat-68 =r flat-20-simpflat-62
            flat-20-simpflat-69 =r flat-20-simpflat-63
            flat-9-simpflat-60 =w flat-20-simpflat-68
            flat-9-simpflat-61 =w flat-20-simpflat-69
        }
        else
        {
            flat-9-simpflat-60 =w flat-8-simpflat-58
            flat-9-simpflat-61 =w 0.0
        }
        
        flat-9-simpflat-70 =r flat-9-simpflat-60
        flat-9-simpflat-71 =r flat-9-simpflat-61
        flat-10-simpflat-72 =i ExceptNotAnError : Error
        flat-10-simpflat-73 =i 0.0 : Double
        
        if (eq#
              flat-9-simpflat-70
              ExceptNotAnError)
        {
            conv-39 = add#
                        s-reify-6-conv-11-aval-0-simpflat-47
                        flat-9-simpflat-71
            flat-17-simpflat-74 =i ExceptNotAnError : Error
            flat-17-simpflat-75 =i 0.0 : Double
            
            if (doubleIsValid# conv-39)
            {
                flat-17-simpflat-74 =w ExceptNotAnError
                flat-17-simpflat-75 =w conv-39
            }
            else
            {
                flat-17-simpflat-74 =w ExceptNotANumber
                flat-17-simpflat-75 =w 0.0
            }
            
            flat-17-simpflat-76 =r flat-17-simpflat-74
            flat-17-simpflat-77 =r flat-17-simpflat-75
            flat-10-simpflat-72 =w flat-17-simpflat-76
            flat-10-simpflat-73 =w flat-17-simpflat-77
        }
        else
        {
            flat-10-simpflat-72 =w flat-9-simpflat-70
            flat-10-simpflat-73 =w 0.0
        }
        
        flat-10-simpflat-78 =r flat-10-simpflat-72
        flat-10-simpflat-79 =r flat-10-simpflat-73
        flat-11-simpflat-80 =i ExceptNotAnError : Error
        flat-11-simpflat-81 =i 0.0 : Double
        flat-11-simpflat-82 =i 0.0 : Double
        
        if (eq#
              flat-10-simpflat-78
              ExceptNotAnError)
        {
            conv-44 = add#
                        s-reify-6-conv-11-aval-0-simpflat-48
                        1.0
            flat-14-simpflat-83 =i ExceptNotAnError : Error
            flat-14-simpflat-84 =i 0.0 : Double
            flat-14-simpflat-85 =i 0.0 : Double
            
            if (doubleIsValid# conv-44)
            {
                flat-14-simpflat-83 =w ExceptNotAnError
                flat-14-simpflat-84 =w flat-10-simpflat-79
                flat-14-simpflat-85 =w conv-44
            }
            else
            {
                flat-14-simpflat-83 =w ExceptNotANumber
                flat-14-simpflat-84 =w 0.0
                flat-14-simpflat-85 =w 0.0
            }
            
            flat-14-simpflat-86 =r flat-14-simpflat-83
            flat-14-simpflat-87 =r flat-14-simpflat-84
            flat-14-simpflat-88 =r flat-14-simpflat-85
            flat-11-simpflat-80 =w flat-14-simpflat-86
            flat-11-simpflat-81 =w flat-14-simpflat-87
            flat-11-simpflat-82 =w flat-14-simpflat-88
        }
        else
        {
            flat-11-simpflat-80 =w flat-10-simpflat-78
            flat-11-simpflat-81 =w 0.0
            flat-11-simpflat-82 =w 0.0
        }
        
        flat-11-simpflat-89 =r flat-11-simpflat-80
        flat-11-simpflat-90 =r flat-11-simpflat-81
        flat-11-simpflat-91 =r flat-11-simpflat-82
        flat-1-simpflat-49 =w flat-11-simpflat-89
        flat-1-simpflat-50 =w flat-11-simpflat-90
        flat-1-simpflat-51 =w flat-11-simpflat-91
    }
    else
    {
        flat-4-simpflat-92 =i ExceptNotAnError : Error
        flat-4-simpflat-93 =i 0.0 : Double
        flat-4-simpflat-94 =i 0.0 : Double
        
        if (eq#
              ExceptFold1NoValue
              s-reify-6-conv-11-aval-0-simpflat-46)
        {
            flat-5-simpflat-95 =i ExceptNotAnError : Error
            flat-5-simpflat-96 =i 0.0 : Double
            flat-5-simpflat-97 =i 0.0 : Double
            
            if (eq#
                  conv-10-aval-1-simpflat-40
                  ExceptNotAnError)
            {
                flat-5-simpflat-95 =w ExceptNotAnError
                flat-5-simpflat-96 =w conv-10-aval-1-simpflat-41
                flat-5-simpflat-97 =w 1.0
            }
            else
            {
                flat-5-simpflat-95 =w conv-10-aval-1-simpflat-40
                flat-5-simpflat-96 =w 0.0
                flat-5-simpflat-97 =w 0.0
            }
            
            flat-5-simpflat-98 =r flat-5-simpflat-95
            flat-5-simpflat-99 =r flat-5-simpflat-96
            flat-5-simpflat-100 =r flat-5-simpflat-97
            flat-4-simpflat-92 =w flat-5-simpflat-98
            flat-4-simpflat-93 =w flat-5-simpflat-99
            flat-4-simpflat-94 =w flat-5-simpflat-100
        }
        else
        {
            flat-4-simpflat-92 =w s-reify-6-conv-11-aval-0-simpflat-46
            flat-4-simpflat-93 =w 0.0
            flat-4-simpflat-94 =w 0.0
        }
        
        flat-4-simpflat-101 =r flat-4-simpflat-92
        flat-4-simpflat-102 =r flat-4-simpflat-93
        flat-4-simpflat-103 =r flat-4-simpflat-94
        flat-1-simpflat-49 =w flat-4-simpflat-101
        flat-1-simpflat-50 =w flat-4-simpflat-102
        flat-1-simpflat-51 =w flat-4-simpflat-103
    }
    
    flat-1-simpflat-104 =r flat-1-simpflat-49
    flat-1-simpflat-105 =r flat-1-simpflat-50
    flat-1-simpflat-106 =r flat-1-simpflat-51
    acc-s-reify-6-conv-11-simpflat-23 =w flat-1-simpflat-104
    acc-s-reify-6-conv-11-simpflat-24 =w flat-1-simpflat-105
    acc-s-reify-6-conv-11-simpflat-25 =w flat-1-simpflat-106
    flat-25 =i False : Bool
    
    if (eq#
          conv-0-simpflat-264
          ExceptNotAnError)
    {
        flat-25 =w eq#
                     conv-0-simpflat-265
                     "torso"
    }
    else
    {
        flat-25 =w True
    }
    
    flat-25 =r flat-25
    
    if (flat-25)
    {
        flat-26-simpflat-107 =i ExceptNotAnError : Error
        flat-26-simpflat-108 =i 0.0 : Double
        
        if (eq#
              conv-0-simpflat-264
              ExceptNotAnError)
        {
            simpflat-8 = doubleOfInt#
                           conv-0-simpflat-266
            flat-26-simpflat-107 =w ExceptNotAnError
            flat-26-simpflat-108 =w simpflat-8
        }
        else
        {
            flat-26-simpflat-107 =w conv-0-simpflat-264
            flat-26-simpflat-108 =w 0.0
        }
        
        flat-26-simpflat-109 =r flat-26-simpflat-107
        flat-26-simpflat-110 =r flat-26-simpflat-108
        acc-conv-75-simpflat-26 =w flat-26-simpflat-109
        acc-conv-75-simpflat-27 =w flat-26-simpflat-110
        conv-75-aval-3-simpflat-111 =r acc-conv-75-simpflat-26
        conv-75-aval-3-simpflat-112 =r acc-conv-75-simpflat-27
        a-conv-76-aval-2-simpflat-117 =r acc-a-conv-76-simpflat-32
        a-conv-76-aval-2-simpflat-118 =r acc-a-conv-76-simpflat-33
        a-conv-76-aval-2-simpflat-119 =r acc-a-conv-76-simpflat-34
        a-conv-76-aval-2-simpflat-120 =r acc-a-conv-76-simpflat-35
        flat-27-simpflat-121 =i ExceptNotAnError : Error
        flat-27-simpflat-122 =i 0.0 : Double
        flat-27-simpflat-123 =i 0.0 : Double
        flat-27-simpflat-124 =i 0.0 : Double
        
        if (eq#
              a-conv-76-aval-2-simpflat-117
              ExceptNotAnError)
        {
            simp-23 = add#
                        a-conv-76-aval-2-simpflat-118
                        1.0
            flat-30-simpflat-125 =i ExceptNotAnError : Error
            flat-30-simpflat-126 =i 0.0 : Double
            
            if (doubleIsValid# simp-23)
            {
                flat-30-simpflat-125 =w ExceptNotAnError
                flat-30-simpflat-126 =w simp-23
            }
            else
            {
                flat-30-simpflat-125 =w ExceptNotANumber
                flat-30-simpflat-126 =w 0.0
            }
            
            flat-30-simpflat-127 =r flat-30-simpflat-125
            flat-30-simpflat-128 =r flat-30-simpflat-126
            flat-31-simpflat-129 =i ExceptNotAnError : Error
            flat-31-simpflat-130 =i 0.0 : Double
            
            if (eq#
                  conv-75-aval-3-simpflat-111
                  ExceptNotAnError)
            {
                conv-88 = sub#
                            conv-75-aval-3-simpflat-112
                            a-conv-76-aval-2-simpflat-119
                flat-75-simpflat-131 =i ExceptNotAnError : Error
                flat-75-simpflat-132 =i 0.0 : Double
                
                if (doubleIsValid# conv-88)
                {
                    flat-75-simpflat-131 =w ExceptNotAnError
                    flat-75-simpflat-132 =w conv-88
                }
                else
                {
                    flat-75-simpflat-131 =w ExceptNotANumber
                    flat-75-simpflat-132 =w 0.0
                }
                
                flat-75-simpflat-133 =r flat-75-simpflat-131
                flat-75-simpflat-134 =r flat-75-simpflat-132
                flat-31-simpflat-129 =w flat-75-simpflat-133
                flat-31-simpflat-130 =w flat-75-simpflat-134
            }
            else
            {
                flat-31-simpflat-129 =w conv-75-aval-3-simpflat-111
                flat-31-simpflat-130 =w 0.0
            }
            
            flat-31-simpflat-135 =r flat-31-simpflat-129
            flat-31-simpflat-136 =r flat-31-simpflat-130
            flat-32-simpflat-137 =i ExceptNotAnError : Error
            flat-32-simpflat-138 =i 0.0 : Double
            
            if (eq#
                  flat-31-simpflat-135
                  ExceptNotAnError)
            {
                flat-69-simpflat-139 =i ExceptNotAnError : Error
                flat-69-simpflat-140 =i 0.0 : Double
                
                if (eq#
                      flat-30-simpflat-127
                      ExceptNotAnError)
                {
                    conv-96 = div#
                                flat-31-simpflat-136
                                flat-30-simpflat-128
                    flat-72-simpflat-141 =i ExceptNotAnError : Error
                    flat-72-simpflat-142 =i 0.0 : Double
                    
                    if (doubleIsValid# conv-96)
                    {
                        flat-72-simpflat-141 =w ExceptNotAnError
                        flat-72-simpflat-142 =w conv-96
                    }
                    else
                    {
                        flat-72-simpflat-141 =w ExceptNotANumber
                        flat-72-simpflat-142 =w 0.0
                    }
                    
                    flat-72-simpflat-143 =r flat-72-simpflat-141
                    flat-72-simpflat-144 =r flat-72-simpflat-142
                    flat-69-simpflat-139 =w flat-72-simpflat-143
                    flat-69-simpflat-140 =w flat-72-simpflat-144
                }
                else
                {
                    flat-69-simpflat-139 =w flat-30-simpflat-127
                    flat-69-simpflat-140 =w 0.0
                }
                
                flat-69-simpflat-145 =r flat-69-simpflat-139
                flat-69-simpflat-146 =r flat-69-simpflat-140
                flat-32-simpflat-137 =w flat-69-simpflat-145
                flat-32-simpflat-138 =w flat-69-simpflat-146
            }
            else
            {
                flat-32-simpflat-137 =w flat-31-simpflat-135
                flat-32-simpflat-138 =w 0.0
            }
            
            flat-32-simpflat-147 =r flat-32-simpflat-137
            flat-32-simpflat-148 =r flat-32-simpflat-138
            flat-33-simpflat-149 =i ExceptNotAnError : Error
            flat-33-simpflat-150 =i 0.0 : Double
            
            if (eq#
                  flat-32-simpflat-147
                  ExceptNotAnError)
            {
                conv-102 = add#
                             a-conv-76-aval-2-simpflat-119
                             flat-32-simpflat-148
                flat-66-simpflat-151 =i ExceptNotAnError : Error
                flat-66-simpflat-152 =i 0.0 : Double
                
                if (doubleIsValid# conv-102)
                {
                    flat-66-simpflat-151 =w ExceptNotAnError
                    flat-66-simpflat-152 =w conv-102
                }
                else
                {
                    flat-66-simpflat-151 =w ExceptNotANumber
                    flat-66-simpflat-152 =w 0.0
                }
                
                flat-66-simpflat-153 =r flat-66-simpflat-151
                flat-66-simpflat-154 =r flat-66-simpflat-152
                flat-33-simpflat-149 =w flat-66-simpflat-153
                flat-33-simpflat-150 =w flat-66-simpflat-154
            }
            else
            {
                flat-33-simpflat-149 =w flat-32-simpflat-147
                flat-33-simpflat-150 =w 0.0
            }
            
            flat-33-simpflat-155 =r flat-33-simpflat-149
            flat-33-simpflat-156 =r flat-33-simpflat-150
            flat-34-simpflat-157 =i ExceptNotAnError : Error
            flat-34-simpflat-158 =i 0.0 : Double
            
            if (eq#
                  flat-31-simpflat-135
                  ExceptNotAnError)
            {
                flat-53-simpflat-159 =i ExceptNotAnError : Error
                flat-53-simpflat-160 =i 0.0 : Double
                
                if (eq#
                      conv-75-aval-3-simpflat-111
                      ExceptNotAnError)
                {
                    flat-60-simpflat-161 =i ExceptNotAnError : Error
                    flat-60-simpflat-162 =i 0.0 : Double
                    
                    if (eq#
                          flat-33-simpflat-155
                          ExceptNotAnError)
                    {
                        conv-112 = sub#
                                     conv-75-aval-3-simpflat-112
                                     flat-33-simpflat-156
                        flat-63-simpflat-163 =i ExceptNotAnError : Error
                        flat-63-simpflat-164 =i 0.0 : Double
                        
                        if (doubleIsValid# conv-112)
                        {
                            flat-63-simpflat-163 =w ExceptNotAnError
                            flat-63-simpflat-164 =w conv-112
                        }
                        else
                        {
                            flat-63-simpflat-163 =w ExceptNotANumber
                            flat-63-simpflat-164 =w 0.0
                        }
                        
                        flat-63-simpflat-165 =r flat-63-simpflat-163
                        flat-63-simpflat-166 =r flat-63-simpflat-164
                        flat-60-simpflat-161 =w flat-63-simpflat-165
                        flat-60-simpflat-162 =w flat-63-simpflat-166
                    }
                    else
                    {
                        flat-60-simpflat-161 =w flat-33-simpflat-155
                        flat-60-simpflat-162 =w 0.0
                    }
                    
                    flat-60-simpflat-167 =r flat-60-simpflat-161
                    flat-60-simpflat-168 =r flat-60-simpflat-162
                    flat-53-simpflat-159 =w flat-60-simpflat-167
                    flat-53-simpflat-160 =w flat-60-simpflat-168
                }
                else
                {
                    flat-53-simpflat-159 =w conv-75-aval-3-simpflat-111
                    flat-53-simpflat-160 =w 0.0
                }
                
                flat-53-simpflat-169 =r flat-53-simpflat-159
                flat-53-simpflat-170 =r flat-53-simpflat-160
                flat-54-simpflat-171 =i ExceptNotAnError : Error
                flat-54-simpflat-172 =i 0.0 : Double
                
                if (eq#
                      flat-53-simpflat-169
                      ExceptNotAnError)
                {
                    conv-118 = mul#
                                 flat-31-simpflat-136
                                 flat-53-simpflat-170
                    flat-57-simpflat-173 =i ExceptNotAnError : Error
                    flat-57-simpflat-174 =i 0.0 : Double
                    
                    if (doubleIsValid# conv-118)
                    {
                        flat-57-simpflat-173 =w ExceptNotAnError
                        flat-57-simpflat-174 =w conv-118
                    }
                    else
                    {
                        flat-57-simpflat-173 =w ExceptNotANumber
                        flat-57-simpflat-174 =w 0.0
                    }
                    
                    flat-57-simpflat-175 =r flat-57-simpflat-173
                    flat-57-simpflat-176 =r flat-57-simpflat-174
                    flat-54-simpflat-171 =w flat-57-simpflat-175
                    flat-54-simpflat-172 =w flat-57-simpflat-176
                }
                else
                {
                    flat-54-simpflat-171 =w flat-53-simpflat-169
                    flat-54-simpflat-172 =w 0.0
                }
                
                flat-54-simpflat-177 =r flat-54-simpflat-171
                flat-54-simpflat-178 =r flat-54-simpflat-172
                flat-34-simpflat-157 =w flat-54-simpflat-177
                flat-34-simpflat-158 =w flat-54-simpflat-178
            }
            else
            {
                flat-34-simpflat-157 =w flat-31-simpflat-135
                flat-34-simpflat-158 =w 0.0
            }
            
            flat-34-simpflat-179 =r flat-34-simpflat-157
            flat-34-simpflat-180 =r flat-34-simpflat-158
            flat-35-simpflat-181 =i ExceptNotAnError : Error
            flat-35-simpflat-182 =i 0.0 : Double
            
            if (eq#
                  flat-34-simpflat-179
                  ExceptNotAnError)
            {
                conv-124 = add#
                             a-conv-76-aval-2-simpflat-120
                             flat-34-simpflat-180
                flat-50-simpflat-183 =i ExceptNotAnError : Error
                flat-50-simpflat-184 =i 0.0 : Double
                
                if (doubleIsValid# conv-124)
                {
                    flat-50-simpflat-183 =w ExceptNotAnError
                    flat-50-simpflat-184 =w conv-124
                }
                else
                {
                    flat-50-simpflat-183 =w ExceptNotANumber
                    flat-50-simpflat-184 =w 0.0
                }
                
                flat-50-simpflat-185 =r flat-50-simpflat-183
                flat-50-simpflat-186 =r flat-50-simpflat-184
                flat-35-simpflat-181 =w flat-50-simpflat-185
                flat-35-simpflat-182 =w flat-50-simpflat-186
            }
            else
            {
                flat-35-simpflat-181 =w flat-34-simpflat-179
                flat-35-simpflat-182 =w 0.0
            }
            
            flat-35-simpflat-187 =r flat-35-simpflat-181
            flat-35-simpflat-188 =r flat-35-simpflat-182
            flat-36-simpflat-189 =i ExceptNotAnError : Error
            flat-36-simpflat-190 =i 0.0 : Double
            flat-36-simpflat-191 =i 0.0 : Double
            
            if (eq#
                  flat-30-simpflat-127
                  ExceptNotAnError)
            {
                flat-45-simpflat-192 =i ExceptNotAnError : Error
                flat-45-simpflat-193 =i 0.0 : Double
                flat-45-simpflat-194 =i 0.0 : Double
                
                if (eq#
                      flat-33-simpflat-155
                      ExceptNotAnError)
                {
                    flat-45-simpflat-192 =w ExceptNotAnError
                    flat-45-simpflat-193 =w flat-30-simpflat-128
                    flat-45-simpflat-194 =w flat-33-simpflat-156
                }
                else
                {
                    flat-45-simpflat-192 =w flat-33-simpflat-155
                    flat-45-simpflat-193 =w 0.0
                    flat-45-simpflat-194 =w 0.0
                }
                
                flat-45-simpflat-195 =r flat-45-simpflat-192
                flat-45-simpflat-196 =r flat-45-simpflat-193
                flat-45-simpflat-197 =r flat-45-simpflat-194
                flat-36-simpflat-189 =w flat-45-simpflat-195
                flat-36-simpflat-190 =w flat-45-simpflat-196
                flat-36-simpflat-191 =w flat-45-simpflat-197
            }
            else
            {
                flat-36-simpflat-189 =w flat-30-simpflat-127
                flat-36-simpflat-190 =w 0.0
                flat-36-simpflat-191 =w 0.0
            }
            
            flat-36-simpflat-198 =r flat-36-simpflat-189
            flat-36-simpflat-199 =r flat-36-simpflat-190
            flat-36-simpflat-200 =r flat-36-simpflat-191
            flat-37-simpflat-201 =i ExceptNotAnError : Error
            flat-37-simpflat-202 =i 0.0 : Double
            flat-37-simpflat-203 =i 0.0 : Double
            flat-37-simpflat-204 =i 0.0 : Double
            
            if (eq#
                  flat-36-simpflat-198
                  ExceptNotAnError)
            {
                flat-40-simpflat-205 =i ExceptNotAnError : Error
                flat-40-simpflat-206 =i 0.0 : Double
                flat-40-simpflat-207 =i 0.0 : Double
                flat-40-simpflat-208 =i 0.0 : Double
                
                if (eq#
                      flat-35-simpflat-187
                      ExceptNotAnError)
                {
                    flat-40-simpflat-205 =w ExceptNotAnError
                    flat-40-simpflat-206 =w flat-36-simpflat-199
                    flat-40-simpflat-207 =w flat-36-simpflat-200
                    flat-40-simpflat-208 =w flat-35-simpflat-188
                }
                else
                {
                    flat-40-simpflat-205 =w flat-35-simpflat-187
                    flat-40-simpflat-206 =w 0.0
                    flat-40-simpflat-207 =w 0.0
                    flat-40-simpflat-208 =w 0.0
                }
                
                flat-40-simpflat-209 =r flat-40-simpflat-205
                flat-40-simpflat-210 =r flat-40-simpflat-206
                flat-40-simpflat-211 =r flat-40-simpflat-207
                flat-40-simpflat-212 =r flat-40-simpflat-208
                flat-37-simpflat-201 =w flat-40-simpflat-209
                flat-37-simpflat-202 =w flat-40-simpflat-210
                flat-37-simpflat-203 =w flat-40-simpflat-211
                flat-37-simpflat-204 =w flat-40-simpflat-212
            }
            else
            {
                flat-37-simpflat-201 =w flat-36-simpflat-198
                flat-37-simpflat-202 =w 0.0
                flat-37-simpflat-203 =w 0.0
                flat-37-simpflat-204 =w 0.0
            }
            
            flat-37-simpflat-213 =r flat-37-simpflat-201
            flat-37-simpflat-214 =r flat-37-simpflat-202
            flat-37-simpflat-215 =r flat-37-simpflat-203
            flat-37-simpflat-216 =r flat-37-simpflat-204
            flat-27-simpflat-121 =w flat-37-simpflat-213
            flat-27-simpflat-122 =w flat-37-simpflat-214
            flat-27-simpflat-123 =w flat-37-simpflat-215
            flat-27-simpflat-124 =w flat-37-simpflat-216
        }
        else
        {
            flat-27-simpflat-121 =w a-conv-76-aval-2-simpflat-117
            flat-27-simpflat-122 =w 0.0
            flat-27-simpflat-123 =w 0.0
            flat-27-simpflat-124 =w 0.0
        }
        
        flat-27-simpflat-217 =r flat-27-simpflat-121
        flat-27-simpflat-218 =r flat-27-simpflat-122
        flat-27-simpflat-219 =r flat-27-simpflat-123
        flat-27-simpflat-220 =r flat-27-simpflat-124
        acc-a-conv-76-simpflat-32 =w flat-27-simpflat-217
        acc-a-conv-76-simpflat-33 =w flat-27-simpflat-218
        acc-a-conv-76-simpflat-34 =w flat-27-simpflat-219
        acc-a-conv-76-simpflat-35 =w flat-27-simpflat-220
    }
    
}

a-conv-76-simpflat-221 =r acc-a-conv-76-simpflat-32
a-conv-76-simpflat-222 =r acc-a-conv-76-simpflat-33
a-conv-76-simpflat-224 =r acc-a-conv-76-simpflat-35
s-reify-6-conv-11-simpflat-225 =r acc-s-reify-6-conv-11-simpflat-23
s-reify-6-conv-11-simpflat-226 =r acc-s-reify-6-conv-11-simpflat-24
flat-82-simpflat-228 =i ExceptNotAnError : Error
flat-82-simpflat-229 =i 0.0 : Double

if (eq#
      s-reify-6-conv-11-simpflat-225
      ExceptNotAnError)
{
    flat-82-simpflat-228 =w ExceptNotAnError
    flat-82-simpflat-229 =w s-reify-6-conv-11-simpflat-226
}
else
{
    flat-82-simpflat-228 =w s-reify-6-conv-11-simpflat-225
    flat-82-simpflat-229 =w 0.0
}

flat-82-simpflat-230 =r flat-82-simpflat-228
flat-82-simpflat-231 =r flat-82-simpflat-229
flat-83-simpflat-232 =i ExceptNotAnError : Error
flat-83-simpflat-233 =i 0.0 : Double

if (eq#
      flat-82-simpflat-230
      ExceptNotAnError)
{
    flat-86-simpflat-234 =i ExceptNotAnError : Error
    flat-86-simpflat-235 =i 0.0 : Double
    
    if (eq#
          a-conv-76-simpflat-221
          ExceptNotAnError)
    {
        simp-0 = sub#
                   a-conv-76-simpflat-222
                   1.0
        flat-97-simpflat-236 =i ExceptNotAnError : Error
        flat-97-simpflat-237 =i 0.0 : Double
        
        if (doubleIsValid# simp-0)
        {
            conv-157 = div#
                         a-conv-76-simpflat-224
                         simp-0
            flat-98-simpflat-238 =i ExceptNotAnError : Error
            flat-98-simpflat-239 =i 0.0 : Double
            
            if (doubleIsValid# conv-157)
            {
                flat-98-simpflat-238 =w ExceptNotAnError
                flat-98-simpflat-239 =w conv-157
            }
            else
            {
                flat-98-simpflat-238 =w ExceptNotANumber
                flat-98-simpflat-239 =w 0.0
            }
            
            flat-98-simpflat-240 =r flat-98-simpflat-238
            flat-98-simpflat-241 =r flat-98-simpflat-239
            flat-97-simpflat-236 =w flat-98-simpflat-240
            flat-97-simpflat-237 =w flat-98-simpflat-241
        }
        else
        {
            flat-97-simpflat-236 =w ExceptNotANumber
            flat-97-simpflat-237 =w 0.0
        }
        
        flat-97-simpflat-242 =r flat-97-simpflat-236
        flat-97-simpflat-243 =r flat-97-simpflat-237
        flat-86-simpflat-234 =w flat-97-simpflat-242
        flat-86-simpflat-235 =w flat-97-simpflat-243
    }
    else
    {
        flat-86-simpflat-234 =w a-conv-76-simpflat-221
        flat-86-simpflat-235 =w 0.0
    }
    
    flat-86-simpflat-244 =r flat-86-simpflat-234
    flat-86-simpflat-245 =r flat-86-simpflat-235
    flat-87-simpflat-246 =i ExceptNotAnError : Error
    flat-87-simpflat-247 =i 0.0 : Double
    
    if (eq#
          flat-86-simpflat-244
          ExceptNotAnError)
    {
        conv-171 = sqrt#
                     flat-86-simpflat-245
        flat-94-simpflat-248 =i ExceptNotAnError : Error
        flat-94-simpflat-249 =i 0.0 : Double
        
        if (doubleIsValid# conv-171)
        {
            flat-94-simpflat-248 =w ExceptNotAnError
            flat-94-simpflat-249 =w conv-171
        }
        else
        {
            flat-94-simpflat-248 =w ExceptNotANumber
            flat-94-simpflat-249 =w 0.0
        }
        
        flat-94-simpflat-250 =r flat-94-simpflat-248
        flat-94-simpflat-251 =r flat-94-simpflat-249
        flat-87-simpflat-246 =w flat-94-simpflat-250
        flat-87-simpflat-247 =w flat-94-simpflat-251
    }
    else
    {
        flat-87-simpflat-246 =w flat-86-simpflat-244
        flat-87-simpflat-247 =w 0.0
    }
    
    flat-87-simpflat-252 =r flat-87-simpflat-246
    flat-87-simpflat-253 =r flat-87-simpflat-247
    flat-88-simpflat-254 =i ExceptNotAnError : Error
    flat-88-simpflat-255 =i 0.0 : Double
    
    if (eq#
          flat-87-simpflat-252
          ExceptNotAnError)
    {
        conv-179 = mul#
                     flat-82-simpflat-231
                     flat-87-simpflat-253
        flat-91-simpflat-256 =i ExceptNotAnError : Error
        flat-91-simpflat-257 =i 0.0 : Double
        
        if (doubleIsValid# conv-179)
        {
            flat-91-simpflat-256 =w ExceptNotAnError
            flat-91-simpflat-257 =w conv-179
        }
        else
        {
            flat-91-simpflat-256 =w ExceptNotANumber
            flat-91-simpflat-257 =w 0.0
        }
        
        flat-91-simpflat-258 =r flat-91-simpflat-256
        flat-91-simpflat-259 =r flat-91-simpflat-257
        flat-88-simpflat-254 =w flat-91-simpflat-258
        flat-88-simpflat-255 =w flat-91-simpflat-259
    }
    else
    {
        flat-88-simpflat-254 =w flat-87-simpflat-252
        flat-88-simpflat-255 =w 0.0
    }
    
    flat-88-simpflat-260 =r flat-88-simpflat-254
    flat-88-simpflat-261 =r flat-88-simpflat-255
    flat-83-simpflat-232 =w flat-88-simpflat-260
    flat-83-simpflat-233 =w flat-88-simpflat-261
}
else
{
    flat-83-simpflat-232 =w flat-82-simpflat-230
    flat-83-simpflat-233 =w 0.0
}

flat-83-simpflat-262 =r flat-83-simpflat-232
flat-83-simpflat-263 =r flat-83-simpflat-233

output repl:output : Sum Error Double =
    flat-83-simpflat-262 : Error
  , flat-83-simpflat-263 : Double

C
-

#line 1 "cluster state #0 - default:injury"

typedef struct {
    itime_t          convzm2;
    iint_t           new_count;
    ierror_t         *new_convzm0zmsimpflatzm264;
    istring_t        *new_convzm0zmsimpflatzm265;
    iint_t           *new_convzm0zmsimpflatzm266;
    itime_t          *new_convzm0zmsimpflatzm267;
} input_defaultZCinjury_t;

typedef struct {
    /* runtime */
    anemone_mempool_t *mempool;
    iint_t           max_map_size;

    /* inputs */
    input_defaultZCinjury_t input;

    /* kernel 0:0 outputs */
    ierror_t         replZCoutputzsixzs0;
    idouble_t        replZCoutputzsixzs1;
} icluster_0_t;

iint_t size_of_icluster_0 ()
{
    return sizeof (icluster_0_t);
}

#line 1 "kernel function #0 - default:injury icluster_0_kernel_0"
void icluster_0_kernel_0(icluster_0_t *s)
{
    ierror_t         flatzm98zmsimpflatzm238;
    idouble_t        flatzm98zmsimpflatzm239;
    idouble_t        flatzm34zmsimpflatzm158;
    ierror_t         flatzm34zmsimpflatzm157;
    ierror_t         flatzm34zmsimpflatzm179;
    idouble_t        flatzm98zmsimpflatzm241;
    ierror_t         flatzm98zmsimpflatzm240;
    idouble_t        flatzm31zmsimpflatzm130;
    idouble_t        flatzm31zmsimpflatzm136;
    ierror_t         flatzm31zmsimpflatzm135;
    idouble_t        flatzm0zmsimpflatzm39;
    ierror_t         flatzm0zmsimpflatzm38;
    idouble_t        flatzm0zmsimpflatzm37;
    ierror_t         flatzm0zmsimpflatzm36;
    ierror_t         flatzm31zmsimpflatzm129;
    idouble_t        flatzm35zmsimpflatzm188;
    ierror_t         flatzm35zmsimpflatzm187;
    ierror_t         flatzm35zmsimpflatzm181;
    idouble_t        flatzm35zmsimpflatzm182;
    idouble_t        flatzm50zmsimpflatzm186;
    idouble_t        flatzm50zmsimpflatzm184;
    ierror_t         flatzm50zmsimpflatzm185;
    ierror_t         flatzm50zmsimpflatzm183;
    idouble_t        flatzm88zmsimpflatzm255;
    ierror_t         flatzm88zmsimpflatzm254;
    ierror_t         flatzm88zmsimpflatzm260;
    idouble_t        flatzm88zmsimpflatzm261;
    ierror_t         flatzm20zmsimpflatzm68;
    idouble_t        flatzm20zmsimpflatzm69;
    ierror_t         flatzm20zmsimpflatzm62;
    idouble_t        flatzm20zmsimpflatzm63;
    idouble_t        flatzm60zmsimpflatzm168;
    idouble_t        flatzm60zmsimpflatzm162;
    ierror_t         flatzm60zmsimpflatzm161;
    ierror_t         flatzm60zmsimpflatzm167;
    idouble_t        flatzm1zmsimpflatzm50;
    idouble_t        flatzm1zmsimpflatzm51;
    idouble_t        acczmconvzm10zmsimpflatzm18;
    ierror_t         acczmconvzm10zmsimpflatzm17;
    ierror_t         szmreifyzm6zmconvzm11zmsimpflatzm225;
    idouble_t        szmreifyzm6zmconvzm11zmsimpflatzm226;
    ierror_t         flatzm1zmsimpflatzm49;
    idouble_t        acczmconvzm75zmsimpflatzm27;
    ierror_t         acczmconvzm75zmsimpflatzm26;
    idouble_t        flatzm54zmsimpflatzm178;
    ierror_t         flatzm54zmsimpflatzm177;
    ierror_t         flatzm54zmsimpflatzm171;
    idouble_t        flatzm54zmsimpflatzm172;
    idouble_t        flatzm34zmsimpflatzm180;
    idouble_t        flatzm57zmsimpflatzm176;
    idouble_t        flatzm57zmsimpflatzm174;
    ierror_t         flatzm57zmsimpflatzm175;
    ierror_t         flatzm57zmsimpflatzm173;
    idouble_t        flatzm26zmsimpflatzm110;
    idouble_t        flatzm72zmsimpflatzm142;
    ierror_t         flatzm72zmsimpflatzm143;
    ierror_t         flatzm72zmsimpflatzm141;
    idouble_t        flatzm72zmsimpflatzm144;
    ierror_t         flatzm10zmsimpflatzm72;
    idouble_t        flatzm10zmsimpflatzm73;
    ierror_t         flatzm10zmsimpflatzm78;
    idouble_t        flatzm10zmsimpflatzm79;
    ierror_t         flatzm26zmsimpflatzm109;
    idouble_t        flatzm26zmsimpflatzm108;
    ierror_t         flatzm26zmsimpflatzm107;
    ierror_t         flatzm53zmsimpflatzm159;
    ierror_t         flatzm97zmsimpflatzm242;
    idouble_t        flatzm97zmsimpflatzm243;
    ierror_t         flatzm63zmsimpflatzm163;
    idouble_t        flatzm63zmsimpflatzm164;
    ierror_t         flatzm63zmsimpflatzm165;
    idouble_t        flatzm63zmsimpflatzm166;
    idouble_t        flatzm36zmsimpflatzm200;
    idouble_t        acczmazmconvzm76zmsimpflatzm35;
    idouble_t        acczmazmconvzm76zmsimpflatzm34;
    idouble_t        acczmazmconvzm76zmsimpflatzm33;
    ierror_t         acczmazmconvzm76zmsimpflatzm32;
    idouble_t        flatzm53zmsimpflatzm170;
    ierror_t         azmconvzm76zmsimpflatzm221;
    idouble_t        azmconvzm76zmsimpflatzm222;
    idouble_t        azmconvzm76zmsimpflatzm224;
    idouble_t        flatzm53zmsimpflatzm160;
    ierror_t         flatzm53zmsimpflatzm169;
    idouble_t        flatzm97zmsimpflatzm237;
    ierror_t         flatzm97zmsimpflatzm236;
    idouble_t        flatzm30zmsimpflatzm126;
    ierror_t         flatzm30zmsimpflatzm127;
    ierror_t         flatzm30zmsimpflatzm125;
    idouble_t        flatzm30zmsimpflatzm128;
    idouble_t        flatzm27zmsimpflatzm124;
    ierror_t         flatzm27zmsimpflatzm121;
    idouble_t        flatzm27zmsimpflatzm122;
    idouble_t        flatzm27zmsimpflatzm123;
    ierror_t         flatzm5zmsimpflatzm98;
    idouble_t        flatzm5zmsimpflatzm99;
    idouble_t        flatzm5zmsimpflatzm96;
    idouble_t        flatzm5zmsimpflatzm97;
    ierror_t         flatzm5zmsimpflatzm95;
    ierror_t         flatzm11zmsimpflatzm89;
    idouble_t        flatzm11zmsimpflatzm82;
    ierror_t         flatzm11zmsimpflatzm80;
    idouble_t        flatzm11zmsimpflatzm81;
    idouble_t        flatzm1zmsimpflatzm106;
    ierror_t         flatzm1zmsimpflatzm104;
    idouble_t        flatzm1zmsimpflatzm105;
    idouble_t        flatzm11zmsimpflatzm91;
    idouble_t        flatzm11zmsimpflatzm90;
    idouble_t        acczmszmreifyzm6zmconvzm11zmsimpflatzm24;
    idouble_t        acczmszmreifyzm6zmconvzm11zmsimpflatzm25;
    ierror_t         acczmszmreifyzm6zmconvzm11zmsimpflatzm23;
    ierror_t         flatzm27zmsimpflatzm217;
    idouble_t        flatzm27zmsimpflatzm218;
    idouble_t        flatzm27zmsimpflatzm219;
    idouble_t        flatzm69zmsimpflatzm140;
    ierror_t         flatzm69zmsimpflatzm145;
    idouble_t        flatzm69zmsimpflatzm146;
    idouble_t        flatzm27zmsimpflatzm220;
    idouble_t        flatzm33zmsimpflatzm156;
    ierror_t         flatzm33zmsimpflatzm155;
    idouble_t        flatzm33zmsimpflatzm150;
    idouble_t        flatzm5zmsimpflatzm100;
    idouble_t        flatzm45zmsimpflatzm193;
    ierror_t         flatzm45zmsimpflatzm192;
    idouble_t        flatzm45zmsimpflatzm197;
    idouble_t        flatzm45zmsimpflatzm196;
    ierror_t         flatzm45zmsimpflatzm195;
    idouble_t        flatzm45zmsimpflatzm194;
    ierror_t         flatzm33zmsimpflatzm149;
    ierror_t         flatzm83zmsimpflatzm232;
    idouble_t        flatzm83zmsimpflatzm233;
    idouble_t        szmreifyzm6zmconvzm11zmavalzm0zmsimpflatzm48;
    ierror_t         szmreifyzm6zmconvzm11zmavalzm0zmsimpflatzm46;
    idouble_t        szmreifyzm6zmconvzm11zmavalzm0zmsimpflatzm47;
    idouble_t        flatzm91zmsimpflatzm257;
    ierror_t         flatzm91zmsimpflatzm256;
    idouble_t        flatzm91zmsimpflatzm259;
    ierror_t         flatzm91zmsimpflatzm258;
    idouble_t        flatzm75zmsimpflatzm132;
    ierror_t         flatzm75zmsimpflatzm133;
    ierror_t         flatzm75zmsimpflatzm131;
    idouble_t        flatzm75zmsimpflatzm134;
    idouble_t        flatzm14zmsimpflatzm87;
    ierror_t         flatzm14zmsimpflatzm86;
    idouble_t        flatzm14zmsimpflatzm85;
    idouble_t        flatzm14zmsimpflatzm84;
    ierror_t         flatzm14zmsimpflatzm83;
    idouble_t        flatzm14zmsimpflatzm88;
    idouble_t        flatzm4zmsimpflatzm103;
    idouble_t        flatzm4zmsimpflatzm102;
    ierror_t         flatzm4zmsimpflatzm101;
    idouble_t        flatzm40zmsimpflatzm208;
    ierror_t         flatzm40zmsimpflatzm209;
    ierror_t         flatzm40zmsimpflatzm205;
    idouble_t        flatzm40zmsimpflatzm206;
    idouble_t        flatzm40zmsimpflatzm207;
    ierror_t         flatzm69zmsimpflatzm139;
    idouble_t        flatzm40zmsimpflatzm211;
    idouble_t        flatzm40zmsimpflatzm210;
    idouble_t        flatzm40zmsimpflatzm212;
    idouble_t        flatzm83zmsimpflatzm263;
    ierror_t         flatzm83zmsimpflatzm262;
    ierror_t         flatzm9zmsimpflatzm70;
    idouble_t        flatzm9zmsimpflatzm71;
    idouble_t        flatzm8zmsimpflatzm53;
    ierror_t         flatzm8zmsimpflatzm52;
    idouble_t        flatzm8zmsimpflatzm59;
    ierror_t         flatzm8zmsimpflatzm58;
    idouble_t        flatzm17zmsimpflatzm77;
    ierror_t         flatzm17zmsimpflatzm76;
    idouble_t        flatzm17zmsimpflatzm75;
    ierror_t         flatzm17zmsimpflatzm74;
    idouble_t        flatzm9zmsimpflatzm61;
    ierror_t         flatzm9zmsimpflatzm60;
    idouble_t        convzm75zmavalzm3zmsimpflatzm112;
    ierror_t         convzm75zmavalzm3zmsimpflatzm111;
    ierror_t         flatzm82zmsimpflatzm228;
    idouble_t        flatzm82zmsimpflatzm229;
    ierror_t         flatzm87zmsimpflatzm252;
    idouble_t        flatzm87zmsimpflatzm253;
    idouble_t        flatzm82zmsimpflatzm231;
    ierror_t         flatzm82zmsimpflatzm230;
    idouble_t        flatzm87zmsimpflatzm247;
    ierror_t         flatzm87zmsimpflatzm246;
    idouble_t        flatzm4zmsimpflatzm94;
    idouble_t        flatzm4zmsimpflatzm93;
    ierror_t         flatzm4zmsimpflatzm92;
    idouble_t        azmconvzm76zmavalzm2zmsimpflatzm120;
    idouble_t        azmconvzm76zmavalzm2zmsimpflatzm118;
    idouble_t        azmconvzm76zmavalzm2zmsimpflatzm119;
    ierror_t         azmconvzm76zmavalzm2zmsimpflatzm117;
    idouble_t        flatzm24zmsimpflatzm55;
    ierror_t         flatzm24zmsimpflatzm54;
    idouble_t        flatzm24zmsimpflatzm57;
    ierror_t         flatzm24zmsimpflatzm56;
    idouble_t        flatzm37zmsimpflatzm204;
    ierror_t         flatzm37zmsimpflatzm201;
    idouble_t        flatzm37zmsimpflatzm202;
    idouble_t        flatzm37zmsimpflatzm203;
    ierror_t         flatzm36zmsimpflatzm189;
    idouble_t        flatzm37zmsimpflatzm215;
    idouble_t        flatzm37zmsimpflatzm214;
    idouble_t        flatzm37zmsimpflatzm216;
    ierror_t         flatzm37zmsimpflatzm213;
    idouble_t        flatzm36zmsimpflatzm191;
    idouble_t        flatzm36zmsimpflatzm190;
    idouble_t        flatzm36zmsimpflatzm199;
    ierror_t         flatzm36zmsimpflatzm198;
    ibool_t          flatzm25;
    idouble_t        flatzm32zmsimpflatzm138;
    ierror_t         flatzm32zmsimpflatzm137;
    ierror_t         flatzm94zmsimpflatzm250;
    idouble_t        flatzm94zmsimpflatzm251;
    ierror_t         flatzm86zmsimpflatzm244;
    idouble_t        flatzm86zmsimpflatzm245;
    idouble_t        flatzm94zmsimpflatzm249;
    ierror_t         flatzm94zmsimpflatzm248;
    idouble_t        convzm10zmavalzm1zmsimpflatzm41;
    ierror_t         convzm10zmavalzm1zmsimpflatzm40;
    idouble_t        flatzm86zmsimpflatzm235;
    ierror_t         flatzm86zmsimpflatzm234;
    idouble_t        flatzm21zmsimpflatzm67;
    ierror_t         flatzm21zmsimpflatzm66;
    idouble_t        flatzm21zmsimpflatzm65;
    ierror_t         flatzm21zmsimpflatzm64;
    ierror_t         flatzm32zmsimpflatzm147;
    idouble_t        flatzm32zmsimpflatzm148;
    idouble_t        flatzm66zmsimpflatzm154;
    idouble_t        flatzm66zmsimpflatzm152;
    ierror_t         flatzm66zmsimpflatzm153;
    ierror_t         flatzm66zmsimpflatzm151;

    anemone_mempool_t *mempool                = s->mempool;
    itime_t          convzm2                  = s->input.convzm2;
    iint_t           convzm3                  = s->max_map_size;

    acczmconvzm10zmsimpflatzm17               = ierror_not_an_error;                  /* init */
    acczmconvzm10zmsimpflatzm18               = 0.0;                                  /* init */
    acczmszmreifyzm6zmconvzm11zmsimpflatzm23  = ierror_fold1_no_value;                /* init */
    acczmszmreifyzm6zmconvzm11zmsimpflatzm24  = 0.0;                                  /* init */
    acczmszmreifyzm6zmconvzm11zmsimpflatzm25  = 0.0;                                  /* init */
    acczmconvzm75zmsimpflatzm26               = ierror_not_an_error;                  /* init */
    acczmconvzm75zmsimpflatzm27               = 0.0;                                  /* init */
    acczmazmconvzm76zmsimpflatzm32            = ierror_not_an_error;                  /* init */
    acczmazmconvzm76zmsimpflatzm33            = 0.0;                                  /* init */
    acczmazmconvzm76zmsimpflatzm34            = 0.0;                                  /* init */
    acczmazmconvzm76zmsimpflatzm35            = 0.0;                                  /* init */
    
    const iint_t     new_count                = s->input.new_count;
    const ierror_t  *const new_convzm0zmsimpflatzm264 = s->input.new_convzm0zmsimpflatzm264;
    const istring_t *const new_convzm0zmsimpflatzm265 = s->input.new_convzm0zmsimpflatzm265;
    const iint_t    *const new_convzm0zmsimpflatzm266 = s->input.new_convzm0zmsimpflatzm266;
    const itime_t   *const new_convzm0zmsimpflatzm267 = s->input.new_convzm0zmsimpflatzm267;
    
    for (iint_t i = 0; i < new_count; i++) {
        itime_t          convzm1              = new_convzm0zmsimpflatzm267[i];
        ierror_t         convzm0zmsimpflatzm264 = new_convzm0zmsimpflatzm264[i];
        istring_t        convzm0zmsimpflatzm265 = new_convzm0zmsimpflatzm265[i];
        iint_t           convzm0zmsimpflatzm266 = new_convzm0zmsimpflatzm266[i];
        itime_t          convzm0zmsimpflatzm267 = new_convzm0zmsimpflatzm267[i];
        flatzm0zmsimpflatzm36                 = ierror_not_an_error;                  /* init */
        flatzm0zmsimpflatzm37                 = 0.0;                                  /* init */
        
        if (ierror_eq (convzm0zmsimpflatzm264, ierror_not_an_error)) {
            idouble_t        reifyzm3zmconvzm8 = iint_extend (convzm0zmsimpflatzm266); /* let */
            flatzm0zmsimpflatzm36             = ierror_not_an_error;                  /* write */
            flatzm0zmsimpflatzm37             = reifyzm3zmconvzm8;                    /* write */
        } else {
            flatzm0zmsimpflatzm36             = convzm0zmsimpflatzm264;               /* write */
            flatzm0zmsimpflatzm37             = 0.0;                                  /* write */
        }
        
        flatzm0zmsimpflatzm38                 = flatzm0zmsimpflatzm36;                /* read */
        flatzm0zmsimpflatzm39                 = flatzm0zmsimpflatzm37;                /* read */
        acczmconvzm10zmsimpflatzm17           = flatzm0zmsimpflatzm38;                /* write */
        acczmconvzm10zmsimpflatzm18           = flatzm0zmsimpflatzm39;                /* write */
        convzm10zmavalzm1zmsimpflatzm40       = acczmconvzm10zmsimpflatzm17;          /* read */
        convzm10zmavalzm1zmsimpflatzm41       = acczmconvzm10zmsimpflatzm18;          /* read */
        szmreifyzm6zmconvzm11zmavalzm0zmsimpflatzm46 = acczmszmreifyzm6zmconvzm11zmsimpflatzm23; /* read */
        szmreifyzm6zmconvzm11zmavalzm0zmsimpflatzm47 = acczmszmreifyzm6zmconvzm11zmsimpflatzm24; /* read */
        szmreifyzm6zmconvzm11zmavalzm0zmsimpflatzm48 = acczmszmreifyzm6zmconvzm11zmsimpflatzm25; /* read */
        flatzm1zmsimpflatzm49                 = ierror_not_an_error;                  /* init */
        flatzm1zmsimpflatzm50                 = 0.0;                                  /* init */
        flatzm1zmsimpflatzm51                 = 0.0;                                  /* init */
        
        if (ierror_eq (szmreifyzm6zmconvzm11zmavalzm0zmsimpflatzm46, ierror_not_an_error)) {
            flatzm8zmsimpflatzm52             = ierror_not_an_error;                  /* init */
            flatzm8zmsimpflatzm53             = 0.0;                                  /* init */
            
            if (ierror_eq (convzm10zmavalzm1zmsimpflatzm40, ierror_not_an_error)) {
                idouble_t        convzm24     = idouble_sub (convzm10zmavalzm1zmsimpflatzm41, szmreifyzm6zmconvzm11zmavalzm0zmsimpflatzm47); /* let */
                flatzm24zmsimpflatzm54        = ierror_not_an_error;                  /* init */
                flatzm24zmsimpflatzm55        = 0.0;                                  /* init */
                
                if (idouble_is_valid (convzm24)) {
                    flatzm24zmsimpflatzm54    = ierror_not_an_error;                  /* write */
                    flatzm24zmsimpflatzm55    = convzm24;                             /* write */
                } else {
                    flatzm24zmsimpflatzm54    = ierror_not_a_number;                  /* write */
                    flatzm24zmsimpflatzm55    = 0.0;                                  /* write */
                }
                
                flatzm24zmsimpflatzm56        = flatzm24zmsimpflatzm54;               /* read */
                flatzm24zmsimpflatzm57        = flatzm24zmsimpflatzm55;               /* read */
                flatzm8zmsimpflatzm52         = flatzm24zmsimpflatzm56;               /* write */
                flatzm8zmsimpflatzm53         = flatzm24zmsimpflatzm57;               /* write */
            } else {
                flatzm8zmsimpflatzm52         = convzm10zmavalzm1zmsimpflatzm40;      /* write */
                flatzm8zmsimpflatzm53         = 0.0;                                  /* write */
            }
            
            flatzm8zmsimpflatzm58             = flatzm8zmsimpflatzm52;                /* read */
            flatzm8zmsimpflatzm59             = flatzm8zmsimpflatzm53;                /* read */
            flatzm9zmsimpflatzm60             = ierror_not_an_error;                  /* init */
            flatzm9zmsimpflatzm61             = 0.0;                                  /* init */
            
            if (ierror_eq (flatzm8zmsimpflatzm58, ierror_not_an_error)) {
                idouble_t        convzm29     = idouble_add (szmreifyzm6zmconvzm11zmavalzm0zmsimpflatzm48, 1.0); /* let */
                flatzm20zmsimpflatzm62        = ierror_not_an_error;                  /* init */
                flatzm20zmsimpflatzm63        = 0.0;                                  /* init */
                
                if (idouble_is_valid (convzm29)) {
                    idouble_t        convzm33 = idouble_div (flatzm8zmsimpflatzm59, convzm29); /* let */
                    flatzm21zmsimpflatzm64    = ierror_not_an_error;                  /* init */
                    flatzm21zmsimpflatzm65    = 0.0;                                  /* init */
                    
                    if (idouble_is_valid (convzm33)) {
                        flatzm21zmsimpflatzm64 = ierror_not_an_error;                 /* write */
                        flatzm21zmsimpflatzm65 = convzm33;                            /* write */
                    } else {
                        flatzm21zmsimpflatzm64 = ierror_not_a_number;                 /* write */
                        flatzm21zmsimpflatzm65 = 0.0;                                 /* write */
                    }
                    
                    flatzm21zmsimpflatzm66    = flatzm21zmsimpflatzm64;               /* read */
                    flatzm21zmsimpflatzm67    = flatzm21zmsimpflatzm65;               /* read */
                    flatzm20zmsimpflatzm62    = flatzm21zmsimpflatzm66;               /* write */
                    flatzm20zmsimpflatzm63    = flatzm21zmsimpflatzm67;               /* write */
                } else {
                    flatzm20zmsimpflatzm62    = ierror_not_a_number;                  /* write */
                    flatzm20zmsimpflatzm63    = 0.0;                                  /* write */
                }
                
                flatzm20zmsimpflatzm68        = flatzm20zmsimpflatzm62;               /* read */
                flatzm20zmsimpflatzm69        = flatzm20zmsimpflatzm63;               /* read */
                flatzm9zmsimpflatzm60         = flatzm20zmsimpflatzm68;               /* write */
                flatzm9zmsimpflatzm61         = flatzm20zmsimpflatzm69;               /* write */
            } else {
                flatzm9zmsimpflatzm60         = flatzm8zmsimpflatzm58;                /* write */
                flatzm9zmsimpflatzm61         = 0.0;                                  /* write */
            }
            
            flatzm9zmsimpflatzm70             = flatzm9zmsimpflatzm60;                /* read */
            flatzm9zmsimpflatzm71             = flatzm9zmsimpflatzm61;                /* read */
            flatzm10zmsimpflatzm72            = ierror_not_an_error;                  /* init */
            flatzm10zmsimpflatzm73            = 0.0;                                  /* init */
            
            if (ierror_eq (flatzm9zmsimpflatzm70, ierror_not_an_error)) {
                idouble_t        convzm39     = idouble_add (szmreifyzm6zmconvzm11zmavalzm0zmsimpflatzm47, flatzm9zmsimpflatzm71); /* let */
                flatzm17zmsimpflatzm74        = ierror_not_an_error;                  /* init */
                flatzm17zmsimpflatzm75        = 0.0;                                  /* init */
                
                if (idouble_is_valid (convzm39)) {
                    flatzm17zmsimpflatzm74    = ierror_not_an_error;                  /* write */
                    flatzm17zmsimpflatzm75    = convzm39;                             /* write */
                } else {
                    flatzm17zmsimpflatzm74    = ierror_not_a_number;                  /* write */
                    flatzm17zmsimpflatzm75    = 0.0;                                  /* write */
                }
                
                flatzm17zmsimpflatzm76        = flatzm17zmsimpflatzm74;               /* read */
                flatzm17zmsimpflatzm77        = flatzm17zmsimpflatzm75;               /* read */
                flatzm10zmsimpflatzm72        = flatzm17zmsimpflatzm76;               /* write */
                flatzm10zmsimpflatzm73        = flatzm17zmsimpflatzm77;               /* write */
            } else {
                flatzm10zmsimpflatzm72        = flatzm9zmsimpflatzm70;                /* write */
                flatzm10zmsimpflatzm73        = 0.0;                                  /* write */
            }
            
            flatzm10zmsimpflatzm78            = flatzm10zmsimpflatzm72;               /* read */
            flatzm10zmsimpflatzm79            = flatzm10zmsimpflatzm73;               /* read */
            flatzm11zmsimpflatzm80            = ierror_not_an_error;                  /* init */
            flatzm11zmsimpflatzm81            = 0.0;                                  /* init */
            flatzm11zmsimpflatzm82            = 0.0;                                  /* init */
            
            if (ierror_eq (flatzm10zmsimpflatzm78, ierror_not_an_error)) {
                idouble_t        convzm44     = idouble_add (szmreifyzm6zmconvzm11zmavalzm0zmsimpflatzm48, 1.0); /* let */
                flatzm14zmsimpflatzm83        = ierror_not_an_error;                  /* init */
                flatzm14zmsimpflatzm84        = 0.0;                                  /* init */
                flatzm14zmsimpflatzm85        = 0.0;                                  /* init */
                
                if (idouble_is_valid (convzm44)) {
                    flatzm14zmsimpflatzm83    = ierror_not_an_error;                  /* write */
                    flatzm14zmsimpflatzm84    = flatzm10zmsimpflatzm79;               /* write */
                    flatzm14zmsimpflatzm85    = convzm44;                             /* write */
                } else {
                    flatzm14zmsimpflatzm83    = ierror_not_a_number;                  /* write */
                    flatzm14zmsimpflatzm84    = 0.0;                                  /* write */
                    flatzm14zmsimpflatzm85    = 0.0;                                  /* write */
                }
                
                flatzm14zmsimpflatzm86        = flatzm14zmsimpflatzm83;               /* read */
                flatzm14zmsimpflatzm87        = flatzm14zmsimpflatzm84;               /* read */
                flatzm14zmsimpflatzm88        = flatzm14zmsimpflatzm85;               /* read */
                flatzm11zmsimpflatzm80        = flatzm14zmsimpflatzm86;               /* write */
                flatzm11zmsimpflatzm81        = flatzm14zmsimpflatzm87;               /* write */
                flatzm11zmsimpflatzm82        = flatzm14zmsimpflatzm88;               /* write */
            } else {
                flatzm11zmsimpflatzm80        = flatzm10zmsimpflatzm78;               /* write */
                flatzm11zmsimpflatzm81        = 0.0;                                  /* write */
                flatzm11zmsimpflatzm82        = 0.0;                                  /* write */
            }
            
            flatzm11zmsimpflatzm89            = flatzm11zmsimpflatzm80;               /* read */
            flatzm11zmsimpflatzm90            = flatzm11zmsimpflatzm81;               /* read */
            flatzm11zmsimpflatzm91            = flatzm11zmsimpflatzm82;               /* read */
            flatzm1zmsimpflatzm49             = flatzm11zmsimpflatzm89;               /* write */
            flatzm1zmsimpflatzm50             = flatzm11zmsimpflatzm90;               /* write */
            flatzm1zmsimpflatzm51             = flatzm11zmsimpflatzm91;               /* write */
        } else {
            flatzm4zmsimpflatzm92             = ierror_not_an_error;                  /* init */
            flatzm4zmsimpflatzm93             = 0.0;                                  /* init */
            flatzm4zmsimpflatzm94             = 0.0;                                  /* init */
            
            if (ierror_eq (ierror_fold1_no_value, szmreifyzm6zmconvzm11zmavalzm0zmsimpflatzm46)) {
                flatzm5zmsimpflatzm95         = ierror_not_an_error;                  /* init */
                flatzm5zmsimpflatzm96         = 0.0;                                  /* init */
                flatzm5zmsimpflatzm97         = 0.0;                                  /* init */
                
                if (ierror_eq (convzm10zmavalzm1zmsimpflatzm40, ierror_not_an_error)) {
                    flatzm5zmsimpflatzm95     = ierror_not_an_error;                  /* write */
                    flatzm5zmsimpflatzm96     = convzm10zmavalzm1zmsimpflatzm41;      /* write */
                    flatzm5zmsimpflatzm97     = 1.0;                                  /* write */
                } else {
                    flatzm5zmsimpflatzm95     = convzm10zmavalzm1zmsimpflatzm40;      /* write */
                    flatzm5zmsimpflatzm96     = 0.0;                                  /* write */
                    flatzm5zmsimpflatzm97     = 0.0;                                  /* write */
                }
                
                flatzm5zmsimpflatzm98         = flatzm5zmsimpflatzm95;                /* read */
                flatzm5zmsimpflatzm99         = flatzm5zmsimpflatzm96;                /* read */
                flatzm5zmsimpflatzm100        = flatzm5zmsimpflatzm97;                /* read */
                flatzm4zmsimpflatzm92         = flatzm5zmsimpflatzm98;                /* write */
                flatzm4zmsimpflatzm93         = flatzm5zmsimpflatzm99;                /* write */
                flatzm4zmsimpflatzm94         = flatzm5zmsimpflatzm100;               /* write */
            } else {
                flatzm4zmsimpflatzm92         = szmreifyzm6zmconvzm11zmavalzm0zmsimpflatzm46; /* write */
                flatzm4zmsimpflatzm93         = 0.0;                                  /* write */
                flatzm4zmsimpflatzm94         = 0.0;                                  /* write */
            }
            
            flatzm4zmsimpflatzm101            = flatzm4zmsimpflatzm92;                /* read */
            flatzm4zmsimpflatzm102            = flatzm4zmsimpflatzm93;                /* read */
            flatzm4zmsimpflatzm103            = flatzm4zmsimpflatzm94;                /* read */
            flatzm1zmsimpflatzm49             = flatzm4zmsimpflatzm101;               /* write */
            flatzm1zmsimpflatzm50             = flatzm4zmsimpflatzm102;               /* write */
            flatzm1zmsimpflatzm51             = flatzm4zmsimpflatzm103;               /* write */
        }
        
        flatzm1zmsimpflatzm104                = flatzm1zmsimpflatzm49;                /* read */
        flatzm1zmsimpflatzm105                = flatzm1zmsimpflatzm50;                /* read */
        flatzm1zmsimpflatzm106                = flatzm1zmsimpflatzm51;                /* read */
        acczmszmreifyzm6zmconvzm11zmsimpflatzm23 = flatzm1zmsimpflatzm104;            /* write */
        acczmszmreifyzm6zmconvzm11zmsimpflatzm24 = flatzm1zmsimpflatzm105;            /* write */
        acczmszmreifyzm6zmconvzm11zmsimpflatzm25 = flatzm1zmsimpflatzm106;            /* write */
        flatzm25                              = ifalse;                               /* init */
        
        if (ierror_eq (convzm0zmsimpflatzm264, ierror_not_an_error)) {
            flatzm25                          = istring_eq (convzm0zmsimpflatzm265, "torso"); /* write */
        } else {
            flatzm25                          = itrue;                                /* write */
        }
        
        flatzm25                              = flatzm25;                             /* read */
        
        if (flatzm25) {
            flatzm26zmsimpflatzm107           = ierror_not_an_error;                  /* init */
            flatzm26zmsimpflatzm108           = 0.0;                                  /* init */
            
            if (ierror_eq (convzm0zmsimpflatzm264, ierror_not_an_error)) {
                idouble_t        simpflatzm8  = iint_extend (convzm0zmsimpflatzm266); /* let */
                flatzm26zmsimpflatzm107       = ierror_not_an_error;                  /* write */
                flatzm26zmsimpflatzm108       = simpflatzm8;                          /* write */
            } else {
                flatzm26zmsimpflatzm107       = convzm0zmsimpflatzm264;               /* write */
                flatzm26zmsimpflatzm108       = 0.0;                                  /* write */
            }
            
            flatzm26zmsimpflatzm109           = flatzm26zmsimpflatzm107;              /* read */
            flatzm26zmsimpflatzm110           = flatzm26zmsimpflatzm108;              /* read */
            acczmconvzm75zmsimpflatzm26       = flatzm26zmsimpflatzm109;              /* write */
            acczmconvzm75zmsimpflatzm27       = flatzm26zmsimpflatzm110;              /* write */
            convzm75zmavalzm3zmsimpflatzm111  = acczmconvzm75zmsimpflatzm26;          /* read */
            convzm75zmavalzm3zmsimpflatzm112  = acczmconvzm75zmsimpflatzm27;          /* read */
            azmconvzm76zmavalzm2zmsimpflatzm117 = acczmazmconvzm76zmsimpflatzm32;     /* read */
            azmconvzm76zmavalzm2zmsimpflatzm118 = acczmazmconvzm76zmsimpflatzm33;     /* read */
            azmconvzm76zmavalzm2zmsimpflatzm119 = acczmazmconvzm76zmsimpflatzm34;     /* read */
            azmconvzm76zmavalzm2zmsimpflatzm120 = acczmazmconvzm76zmsimpflatzm35;     /* read */
            flatzm27zmsimpflatzm121           = ierror_not_an_error;                  /* init */
            flatzm27zmsimpflatzm122           = 0.0;                                  /* init */
            flatzm27zmsimpflatzm123           = 0.0;                                  /* init */
            flatzm27zmsimpflatzm124           = 0.0;                                  /* init */
            
            if (ierror_eq (azmconvzm76zmavalzm2zmsimpflatzm117, ierror_not_an_error)) {
                idouble_t        simpzm23     = idouble_add (azmconvzm76zmavalzm2zmsimpflatzm118, 1.0); /* let */
                flatzm30zmsimpflatzm125       = ierror_not_an_error;                  /* init */
                flatzm30zmsimpflatzm126       = 0.0;                                  /* init */
                
                if (idouble_is_valid (simpzm23)) {
                    flatzm30zmsimpflatzm125   = ierror_not_an_error;                  /* write */
                    flatzm30zmsimpflatzm126   = simpzm23;                             /* write */
                } else {
                    flatzm30zmsimpflatzm125   = ierror_not_a_number;                  /* write */
                    flatzm30zmsimpflatzm126   = 0.0;                                  /* write */
                }
                
                flatzm30zmsimpflatzm127       = flatzm30zmsimpflatzm125;              /* read */
                flatzm30zmsimpflatzm128       = flatzm30zmsimpflatzm126;              /* read */
                flatzm31zmsimpflatzm129       = ierror_not_an_error;                  /* init */
                flatzm31zmsimpflatzm130       = 0.0;                                  /* init */
                
                if (ierror_eq (convzm75zmavalzm3zmsimpflatzm111, ierror_not_an_error)) {
                    idouble_t        convzm88 = idouble_sub (convzm75zmavalzm3zmsimpflatzm112, azmconvzm76zmavalzm2zmsimpflatzm119); /* let */
                    flatzm75zmsimpflatzm131   = ierror_not_an_error;                  /* init */
                    flatzm75zmsimpflatzm132   = 0.0;                                  /* init */
                    
                    if (idouble_is_valid (convzm88)) {
                        flatzm75zmsimpflatzm131 = ierror_not_an_error;                /* write */
                        flatzm75zmsimpflatzm132 = convzm88;                           /* write */
                    } else {
                        flatzm75zmsimpflatzm131 = ierror_not_a_number;                /* write */
                        flatzm75zmsimpflatzm132 = 0.0;                                /* write */
                    }
                    
                    flatzm75zmsimpflatzm133   = flatzm75zmsimpflatzm131;              /* read */
                    flatzm75zmsimpflatzm134   = flatzm75zmsimpflatzm132;              /* read */
                    flatzm31zmsimpflatzm129   = flatzm75zmsimpflatzm133;              /* write */
                    flatzm31zmsimpflatzm130   = flatzm75zmsimpflatzm134;              /* write */
                } else {
                    flatzm31zmsimpflatzm129   = convzm75zmavalzm3zmsimpflatzm111;     /* write */
                    flatzm31zmsimpflatzm130   = 0.0;                                  /* write */
                }
                
                flatzm31zmsimpflatzm135       = flatzm31zmsimpflatzm129;              /* read */
                flatzm31zmsimpflatzm136       = flatzm31zmsimpflatzm130;              /* read */
                flatzm32zmsimpflatzm137       = ierror_not_an_error;                  /* init */
                flatzm32zmsimpflatzm138       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzm31zmsimpflatzm135, ierror_not_an_error)) {
                    flatzm69zmsimpflatzm139   = ierror_not_an_error;                  /* init */
                    flatzm69zmsimpflatzm140   = 0.0;                                  /* init */
                    
                    if (ierror_eq (flatzm30zmsimpflatzm127, ierror_not_an_error)) {
                        idouble_t        convzm96 = idouble_div (flatzm31zmsimpflatzm136, flatzm30zmsimpflatzm128); /* let */
                        flatzm72zmsimpflatzm141 = ierror_not_an_error;                /* init */
                        flatzm72zmsimpflatzm142 = 0.0;                                /* init */
                        
                        if (idouble_is_valid (convzm96)) {
                            flatzm72zmsimpflatzm141 = ierror_not_an_error;            /* write */
                            flatzm72zmsimpflatzm142 = convzm96;                       /* write */
                        } else {
                            flatzm72zmsimpflatzm141 = ierror_not_a_number;            /* write */
                            flatzm72zmsimpflatzm142 = 0.0;                            /* write */
                        }
                        
                        flatzm72zmsimpflatzm143 = flatzm72zmsimpflatzm141;            /* read */
                        flatzm72zmsimpflatzm144 = flatzm72zmsimpflatzm142;            /* read */
                        flatzm69zmsimpflatzm139 = flatzm72zmsimpflatzm143;            /* write */
                        flatzm69zmsimpflatzm140 = flatzm72zmsimpflatzm144;            /* write */
                    } else {
                        flatzm69zmsimpflatzm139 = flatzm30zmsimpflatzm127;            /* write */
                        flatzm69zmsimpflatzm140 = 0.0;                                /* write */
                    }
                    
                    flatzm69zmsimpflatzm145   = flatzm69zmsimpflatzm139;              /* read */
                    flatzm69zmsimpflatzm146   = flatzm69zmsimpflatzm140;              /* read */
                    flatzm32zmsimpflatzm137   = flatzm69zmsimpflatzm145;              /* write */
                    flatzm32zmsimpflatzm138   = flatzm69zmsimpflatzm146;              /* write */
                } else {
                    flatzm32zmsimpflatzm137   = flatzm31zmsimpflatzm135;              /* write */
                    flatzm32zmsimpflatzm138   = 0.0;                                  /* write */
                }
                
                flatzm32zmsimpflatzm147       = flatzm32zmsimpflatzm137;              /* read */
                flatzm32zmsimpflatzm148       = flatzm32zmsimpflatzm138;              /* read */
                flatzm33zmsimpflatzm149       = ierror_not_an_error;                  /* init */
                flatzm33zmsimpflatzm150       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzm32zmsimpflatzm147, ierror_not_an_error)) {
                    idouble_t        convzm102 = idouble_add (azmconvzm76zmavalzm2zmsimpflatzm119, flatzm32zmsimpflatzm148); /* let */
                    flatzm66zmsimpflatzm151   = ierror_not_an_error;                  /* init */
                    flatzm66zmsimpflatzm152   = 0.0;                                  /* init */
                    
                    if (idouble_is_valid (convzm102)) {
                        flatzm66zmsimpflatzm151 = ierror_not_an_error;                /* write */
                        flatzm66zmsimpflatzm152 = convzm102;                          /* write */
                    } else {
                        flatzm66zmsimpflatzm151 = ierror_not_a_number;                /* write */
                        flatzm66zmsimpflatzm152 = 0.0;                                /* write */
                    }
                    
                    flatzm66zmsimpflatzm153   = flatzm66zmsimpflatzm151;              /* read */
                    flatzm66zmsimpflatzm154   = flatzm66zmsimpflatzm152;              /* read */
                    flatzm33zmsimpflatzm149   = flatzm66zmsimpflatzm153;              /* write */
                    flatzm33zmsimpflatzm150   = flatzm66zmsimpflatzm154;              /* write */
                } else {
                    flatzm33zmsimpflatzm149   = flatzm32zmsimpflatzm147;              /* write */
                    flatzm33zmsimpflatzm150   = 0.0;                                  /* write */
                }
                
                flatzm33zmsimpflatzm155       = flatzm33zmsimpflatzm149;              /* read */
                flatzm33zmsimpflatzm156       = flatzm33zmsimpflatzm150;              /* read */
                flatzm34zmsimpflatzm157       = ierror_not_an_error;                  /* init */
                flatzm34zmsimpflatzm158       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzm31zmsimpflatzm135, ierror_not_an_error)) {
                    flatzm53zmsimpflatzm159   = ierror_not_an_error;                  /* init */
                    flatzm53zmsimpflatzm160   = 0.0;                                  /* init */
                    
                    if (ierror_eq (convzm75zmavalzm3zmsimpflatzm111, ierror_not_an_error)) {
                        flatzm60zmsimpflatzm161 = ierror_not_an_error;                /* init */
                        flatzm60zmsimpflatzm162 = 0.0;                                /* init */
                        
                        if (ierror_eq (flatzm33zmsimpflatzm155, ierror_not_an_error)) {
                            idouble_t        convzm112 = idouble_sub (convzm75zmavalzm3zmsimpflatzm112, flatzm33zmsimpflatzm156); /* let */
                            flatzm63zmsimpflatzm163 = ierror_not_an_error;            /* init */
                            flatzm63zmsimpflatzm164 = 0.0;                            /* init */
                            
                            if (idouble_is_valid (convzm112)) {
                                flatzm63zmsimpflatzm163 = ierror_not_an_error;        /* write */
                                flatzm63zmsimpflatzm164 = convzm112;                  /* write */
                            } else {
                                flatzm63zmsimpflatzm163 = ierror_not_a_number;        /* write */
                                flatzm63zmsimpflatzm164 = 0.0;                        /* write */
                            }
                            
                            flatzm63zmsimpflatzm165 = flatzm63zmsimpflatzm163;        /* read */
                            flatzm63zmsimpflatzm166 = flatzm63zmsimpflatzm164;        /* read */
                            flatzm60zmsimpflatzm161 = flatzm63zmsimpflatzm165;        /* write */
                            flatzm60zmsimpflatzm162 = flatzm63zmsimpflatzm166;        /* write */
                        } else {
                            flatzm60zmsimpflatzm161 = flatzm33zmsimpflatzm155;        /* write */
                            flatzm60zmsimpflatzm162 = 0.0;                            /* write */
                        }
                        
                        flatzm60zmsimpflatzm167 = flatzm60zmsimpflatzm161;            /* read */
                        flatzm60zmsimpflatzm168 = flatzm60zmsimpflatzm162;            /* read */
                        flatzm53zmsimpflatzm159 = flatzm60zmsimpflatzm167;            /* write */
                        flatzm53zmsimpflatzm160 = flatzm60zmsimpflatzm168;            /* write */
                    } else {
                        flatzm53zmsimpflatzm159 = convzm75zmavalzm3zmsimpflatzm111;   /* write */
                        flatzm53zmsimpflatzm160 = 0.0;                                /* write */
                    }
                    
                    flatzm53zmsimpflatzm169   = flatzm53zmsimpflatzm159;              /* read */
                    flatzm53zmsimpflatzm170   = flatzm53zmsimpflatzm160;              /* read */
                    flatzm54zmsimpflatzm171   = ierror_not_an_error;                  /* init */
                    flatzm54zmsimpflatzm172   = 0.0;                                  /* init */
                    
                    if (ierror_eq (flatzm53zmsimpflatzm169, ierror_not_an_error)) {
                        idouble_t        convzm118 = idouble_mul (flatzm31zmsimpflatzm136, flatzm53zmsimpflatzm170); /* let */
                        flatzm57zmsimpflatzm173 = ierror_not_an_error;                /* init */
                        flatzm57zmsimpflatzm174 = 0.0;                                /* init */
                        
                        if (idouble_is_valid (convzm118)) {
                            flatzm57zmsimpflatzm173 = ierror_not_an_error;            /* write */
                            flatzm57zmsimpflatzm174 = convzm118;                      /* write */
                        } else {
                            flatzm57zmsimpflatzm173 = ierror_not_a_number;            /* write */
                            flatzm57zmsimpflatzm174 = 0.0;                            /* write */
                        }
                        
                        flatzm57zmsimpflatzm175 = flatzm57zmsimpflatzm173;            /* read */
                        flatzm57zmsimpflatzm176 = flatzm57zmsimpflatzm174;            /* read */
                        flatzm54zmsimpflatzm171 = flatzm57zmsimpflatzm175;            /* write */
                        flatzm54zmsimpflatzm172 = flatzm57zmsimpflatzm176;            /* write */
                    } else {
                        flatzm54zmsimpflatzm171 = flatzm53zmsimpflatzm169;            /* write */
                        flatzm54zmsimpflatzm172 = 0.0;                                /* write */
                    }
                    
                    flatzm54zmsimpflatzm177   = flatzm54zmsimpflatzm171;              /* read */
                    flatzm54zmsimpflatzm178   = flatzm54zmsimpflatzm172;              /* read */
                    flatzm34zmsimpflatzm157   = flatzm54zmsimpflatzm177;              /* write */
                    flatzm34zmsimpflatzm158   = flatzm54zmsimpflatzm178;              /* write */
                } else {
                    flatzm34zmsimpflatzm157   = flatzm31zmsimpflatzm135;              /* write */
                    flatzm34zmsimpflatzm158   = 0.0;                                  /* write */
                }
                
                flatzm34zmsimpflatzm179       = flatzm34zmsimpflatzm157;              /* read */
                flatzm34zmsimpflatzm180       = flatzm34zmsimpflatzm158;              /* read */
                flatzm35zmsimpflatzm181       = ierror_not_an_error;                  /* init */
                flatzm35zmsimpflatzm182       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzm34zmsimpflatzm179, ierror_not_an_error)) {
                    idouble_t        convzm124 = idouble_add (azmconvzm76zmavalzm2zmsimpflatzm120, flatzm34zmsimpflatzm180); /* let */
                    flatzm50zmsimpflatzm183   = ierror_not_an_error;                  /* init */
                    flatzm50zmsimpflatzm184   = 0.0;                                  /* init */
                    
                    if (idouble_is_valid (convzm124)) {
                        flatzm50zmsimpflatzm183 = ierror_not_an_error;                /* write */
                        flatzm50zmsimpflatzm184 = convzm124;                          /* write */
                    } else {
                        flatzm50zmsimpflatzm183 = ierror_not_a_number;                /* write */
                        flatzm50zmsimpflatzm184 = 0.0;                                /* write */
                    }
                    
                    flatzm50zmsimpflatzm185   = flatzm50zmsimpflatzm183;              /* read */
                    flatzm50zmsimpflatzm186   = flatzm50zmsimpflatzm184;              /* read */
                    flatzm35zmsimpflatzm181   = flatzm50zmsimpflatzm185;              /* write */
                    flatzm35zmsimpflatzm182   = flatzm50zmsimpflatzm186;              /* write */
                } else {
                    flatzm35zmsimpflatzm181   = flatzm34zmsimpflatzm179;              /* write */
                    flatzm35zmsimpflatzm182   = 0.0;                                  /* write */
                }
                
                flatzm35zmsimpflatzm187       = flatzm35zmsimpflatzm181;              /* read */
                flatzm35zmsimpflatzm188       = flatzm35zmsimpflatzm182;              /* read */
                flatzm36zmsimpflatzm189       = ierror_not_an_error;                  /* init */
                flatzm36zmsimpflatzm190       = 0.0;                                  /* init */
                flatzm36zmsimpflatzm191       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzm30zmsimpflatzm127, ierror_not_an_error)) {
                    flatzm45zmsimpflatzm192   = ierror_not_an_error;                  /* init */
                    flatzm45zmsimpflatzm193   = 0.0;                                  /* init */
                    flatzm45zmsimpflatzm194   = 0.0;                                  /* init */
                    
                    if (ierror_eq (flatzm33zmsimpflatzm155, ierror_not_an_error)) {
                        flatzm45zmsimpflatzm192 = ierror_not_an_error;                /* write */
                        flatzm45zmsimpflatzm193 = flatzm30zmsimpflatzm128;            /* write */
                        flatzm45zmsimpflatzm194 = flatzm33zmsimpflatzm156;            /* write */
                    } else {
                        flatzm45zmsimpflatzm192 = flatzm33zmsimpflatzm155;            /* write */
                        flatzm45zmsimpflatzm193 = 0.0;                                /* write */
                        flatzm45zmsimpflatzm194 = 0.0;                                /* write */
                    }
                    
                    flatzm45zmsimpflatzm195   = flatzm45zmsimpflatzm192;              /* read */
                    flatzm45zmsimpflatzm196   = flatzm45zmsimpflatzm193;              /* read */
                    flatzm45zmsimpflatzm197   = flatzm45zmsimpflatzm194;              /* read */
                    flatzm36zmsimpflatzm189   = flatzm45zmsimpflatzm195;              /* write */
                    flatzm36zmsimpflatzm190   = flatzm45zmsimpflatzm196;              /* write */
                    flatzm36zmsimpflatzm191   = flatzm45zmsimpflatzm197;              /* write */
                } else {
                    flatzm36zmsimpflatzm189   = flatzm30zmsimpflatzm127;              /* write */
                    flatzm36zmsimpflatzm190   = 0.0;                                  /* write */
                    flatzm36zmsimpflatzm191   = 0.0;                                  /* write */
                }
                
                flatzm36zmsimpflatzm198       = flatzm36zmsimpflatzm189;              /* read */
                flatzm36zmsimpflatzm199       = flatzm36zmsimpflatzm190;              /* read */
                flatzm36zmsimpflatzm200       = flatzm36zmsimpflatzm191;              /* read */
                flatzm37zmsimpflatzm201       = ierror_not_an_error;                  /* init */
                flatzm37zmsimpflatzm202       = 0.0;                                  /* init */
                flatzm37zmsimpflatzm203       = 0.0;                                  /* init */
                flatzm37zmsimpflatzm204       = 0.0;                                  /* init */
                
                if (ierror_eq (flatzm36zmsimpflatzm198, ierror_not_an_error)) {
                    flatzm40zmsimpflatzm205   = ierror_not_an_error;                  /* init */
                    flatzm40zmsimpflatzm206   = 0.0;                                  /* init */
                    flatzm40zmsimpflatzm207   = 0.0;                                  /* init */
                    flatzm40zmsimpflatzm208   = 0.0;                                  /* init */
                    
                    if (ierror_eq (flatzm35zmsimpflatzm187, ierror_not_an_error)) {
                        flatzm40zmsimpflatzm205 = ierror_not_an_error;                /* write */
                        flatzm40zmsimpflatzm206 = flatzm36zmsimpflatzm199;            /* write */
                        flatzm40zmsimpflatzm207 = flatzm36zmsimpflatzm200;            /* write */
                        flatzm40zmsimpflatzm208 = flatzm35zmsimpflatzm188;            /* write */
                    } else {
                        flatzm40zmsimpflatzm205 = flatzm35zmsimpflatzm187;            /* write */
                        flatzm40zmsimpflatzm206 = 0.0;                                /* write */
                        flatzm40zmsimpflatzm207 = 0.0;                                /* write */
                        flatzm40zmsimpflatzm208 = 0.0;                                /* write */
                    }
                    
                    flatzm40zmsimpflatzm209   = flatzm40zmsimpflatzm205;              /* read */
                    flatzm40zmsimpflatzm210   = flatzm40zmsimpflatzm206;              /* read */
                    flatzm40zmsimpflatzm211   = flatzm40zmsimpflatzm207;              /* read */
                    flatzm40zmsimpflatzm212   = flatzm40zmsimpflatzm208;              /* read */
                    flatzm37zmsimpflatzm201   = flatzm40zmsimpflatzm209;              /* write */
                    flatzm37zmsimpflatzm202   = flatzm40zmsimpflatzm210;              /* write */
                    flatzm37zmsimpflatzm203   = flatzm40zmsimpflatzm211;              /* write */
                    flatzm37zmsimpflatzm204   = flatzm40zmsimpflatzm212;              /* write */
                } else {
                    flatzm37zmsimpflatzm201   = flatzm36zmsimpflatzm198;              /* write */
                    flatzm37zmsimpflatzm202   = 0.0;                                  /* write */
                    flatzm37zmsimpflatzm203   = 0.0;                                  /* write */
                    flatzm37zmsimpflatzm204   = 0.0;                                  /* write */
                }
                
                flatzm37zmsimpflatzm213       = flatzm37zmsimpflatzm201;              /* read */
                flatzm37zmsimpflatzm214       = flatzm37zmsimpflatzm202;              /* read */
                flatzm37zmsimpflatzm215       = flatzm37zmsimpflatzm203;              /* read */
                flatzm37zmsimpflatzm216       = flatzm37zmsimpflatzm204;              /* read */
                flatzm27zmsimpflatzm121       = flatzm37zmsimpflatzm213;              /* write */
                flatzm27zmsimpflatzm122       = flatzm37zmsimpflatzm214;              /* write */
                flatzm27zmsimpflatzm123       = flatzm37zmsimpflatzm215;              /* write */
                flatzm27zmsimpflatzm124       = flatzm37zmsimpflatzm216;              /* write */
            } else {
                flatzm27zmsimpflatzm121       = azmconvzm76zmavalzm2zmsimpflatzm117;  /* write */
                flatzm27zmsimpflatzm122       = 0.0;                                  /* write */
                flatzm27zmsimpflatzm123       = 0.0;                                  /* write */
                flatzm27zmsimpflatzm124       = 0.0;                                  /* write */
            }
            
            flatzm27zmsimpflatzm217           = flatzm27zmsimpflatzm121;              /* read */
            flatzm27zmsimpflatzm218           = flatzm27zmsimpflatzm122;              /* read */
            flatzm27zmsimpflatzm219           = flatzm27zmsimpflatzm123;              /* read */
            flatzm27zmsimpflatzm220           = flatzm27zmsimpflatzm124;              /* read */
            acczmazmconvzm76zmsimpflatzm32    = flatzm27zmsimpflatzm217;              /* write */
            acczmazmconvzm76zmsimpflatzm33    = flatzm27zmsimpflatzm218;              /* write */
            acczmazmconvzm76zmsimpflatzm34    = flatzm27zmsimpflatzm219;              /* write */
            acczmazmconvzm76zmsimpflatzm35    = flatzm27zmsimpflatzm220;              /* write */
        }
        
    }
    
    azmconvzm76zmsimpflatzm221                = acczmazmconvzm76zmsimpflatzm32;       /* read */
    azmconvzm76zmsimpflatzm222                = acczmazmconvzm76zmsimpflatzm33;       /* read */
    azmconvzm76zmsimpflatzm224                = acczmazmconvzm76zmsimpflatzm35;       /* read */
    szmreifyzm6zmconvzm11zmsimpflatzm225      = acczmszmreifyzm6zmconvzm11zmsimpflatzm23; /* read */
    szmreifyzm6zmconvzm11zmsimpflatzm226      = acczmszmreifyzm6zmconvzm11zmsimpflatzm24; /* read */
    flatzm82zmsimpflatzm228                   = ierror_not_an_error;                  /* init */
    flatzm82zmsimpflatzm229                   = 0.0;                                  /* init */
    
    if (ierror_eq (szmreifyzm6zmconvzm11zmsimpflatzm225, ierror_not_an_error)) {
        flatzm82zmsimpflatzm228               = ierror_not_an_error;                  /* write */
        flatzm82zmsimpflatzm229               = szmreifyzm6zmconvzm11zmsimpflatzm226; /* write */
    } else {
        flatzm82zmsimpflatzm228               = szmreifyzm6zmconvzm11zmsimpflatzm225; /* write */
        flatzm82zmsimpflatzm229               = 0.0;                                  /* write */
    }
    
    flatzm82zmsimpflatzm230                   = flatzm82zmsimpflatzm228;              /* read */
    flatzm82zmsimpflatzm231                   = flatzm82zmsimpflatzm229;              /* read */
    flatzm83zmsimpflatzm232                   = ierror_not_an_error;                  /* init */
    flatzm83zmsimpflatzm233                   = 0.0;                                  /* init */
    
    if (ierror_eq (flatzm82zmsimpflatzm230, ierror_not_an_error)) {
        flatzm86zmsimpflatzm234               = ierror_not_an_error;                  /* init */
        flatzm86zmsimpflatzm235               = 0.0;                                  /* init */
        
        if (ierror_eq (azmconvzm76zmsimpflatzm221, ierror_not_an_error)) {
            idouble_t        simpzm0          = idouble_sub (azmconvzm76zmsimpflatzm222, 1.0); /* let */
            flatzm97zmsimpflatzm236           = ierror_not_an_error;                  /* init */
            flatzm97zmsimpflatzm237           = 0.0;                                  /* init */
            
            if (idouble_is_valid (simpzm0)) {
                idouble_t        convzm157    = idouble_div (azmconvzm76zmsimpflatzm224, simpzm0); /* let */
                flatzm98zmsimpflatzm238       = ierror_not_an_error;                  /* init */
                flatzm98zmsimpflatzm239       = 0.0;                                  /* init */
                
                if (idouble_is_valid (convzm157)) {
                    flatzm98zmsimpflatzm238   = ierror_not_an_error;                  /* write */
                    flatzm98zmsimpflatzm239   = convzm157;                            /* write */
                } else {
                    flatzm98zmsimpflatzm238   = ierror_not_a_number;                  /* write */
                    flatzm98zmsimpflatzm239   = 0.0;                                  /* write */
                }
                
                flatzm98zmsimpflatzm240       = flatzm98zmsimpflatzm238;              /* read */
                flatzm98zmsimpflatzm241       = flatzm98zmsimpflatzm239;              /* read */
                flatzm97zmsimpflatzm236       = flatzm98zmsimpflatzm240;              /* write */
                flatzm97zmsimpflatzm237       = flatzm98zmsimpflatzm241;              /* write */
            } else {
                flatzm97zmsimpflatzm236       = ierror_not_a_number;                  /* write */
                flatzm97zmsimpflatzm237       = 0.0;                                  /* write */
            }
            
            flatzm97zmsimpflatzm242           = flatzm97zmsimpflatzm236;              /* read */
            flatzm97zmsimpflatzm243           = flatzm97zmsimpflatzm237;              /* read */
            flatzm86zmsimpflatzm234           = flatzm97zmsimpflatzm242;              /* write */
            flatzm86zmsimpflatzm235           = flatzm97zmsimpflatzm243;              /* write */
        } else {
            flatzm86zmsimpflatzm234           = azmconvzm76zmsimpflatzm221;           /* write */
            flatzm86zmsimpflatzm235           = 0.0;                                  /* write */
        }
        
        flatzm86zmsimpflatzm244               = flatzm86zmsimpflatzm234;              /* read */
        flatzm86zmsimpflatzm245               = flatzm86zmsimpflatzm235;              /* read */
        flatzm87zmsimpflatzm246               = ierror_not_an_error;                  /* init */
        flatzm87zmsimpflatzm247               = 0.0;                                  /* init */
        
        if (ierror_eq (flatzm86zmsimpflatzm244, ierror_not_an_error)) {
            idouble_t        convzm171        = idouble_sqrt (flatzm86zmsimpflatzm245); /* let */
            flatzm94zmsimpflatzm248           = ierror_not_an_error;                  /* init */
            flatzm94zmsimpflatzm249           = 0.0;                                  /* init */
            
            if (idouble_is_valid (convzm171)) {
                flatzm94zmsimpflatzm248       = ierror_not_an_error;                  /* write */
                flatzm94zmsimpflatzm249       = convzm171;                            /* write */
            } else {
                flatzm94zmsimpflatzm248       = ierror_not_a_number;                  /* write */
                flatzm94zmsimpflatzm249       = 0.0;                                  /* write */
            }
            
            flatzm94zmsimpflatzm250           = flatzm94zmsimpflatzm248;              /* read */
            flatzm94zmsimpflatzm251           = flatzm94zmsimpflatzm249;              /* read */
            flatzm87zmsimpflatzm246           = flatzm94zmsimpflatzm250;              /* write */
            flatzm87zmsimpflatzm247           = flatzm94zmsimpflatzm251;              /* write */
        } else {
            flatzm87zmsimpflatzm246           = flatzm86zmsimpflatzm244;              /* write */
            flatzm87zmsimpflatzm247           = 0.0;                                  /* write */
        }
        
        flatzm87zmsimpflatzm252               = flatzm87zmsimpflatzm246;              /* read */
        flatzm87zmsimpflatzm253               = flatzm87zmsimpflatzm247;              /* read */
        flatzm88zmsimpflatzm254               = ierror_not_an_error;                  /* init */
        flatzm88zmsimpflatzm255               = 0.0;                                  /* init */
        
        if (ierror_eq (flatzm87zmsimpflatzm252, ierror_not_an_error)) {
            idouble_t        convzm179        = idouble_mul (flatzm82zmsimpflatzm231, flatzm87zmsimpflatzm253); /* let */
            flatzm91zmsimpflatzm256           = ierror_not_an_error;                  /* init */
            flatzm91zmsimpflatzm257           = 0.0;                                  /* init */
            
            if (idouble_is_valid (convzm179)) {
                flatzm91zmsimpflatzm256       = ierror_not_an_error;                  /* write */
                flatzm91zmsimpflatzm257       = convzm179;                            /* write */
            } else {
                flatzm91zmsimpflatzm256       = ierror_not_a_number;                  /* write */
                flatzm91zmsimpflatzm257       = 0.0;                                  /* write */
            }
            
            flatzm91zmsimpflatzm258           = flatzm91zmsimpflatzm256;              /* read */
            flatzm91zmsimpflatzm259           = flatzm91zmsimpflatzm257;              /* read */
            flatzm88zmsimpflatzm254           = flatzm91zmsimpflatzm258;              /* write */
            flatzm88zmsimpflatzm255           = flatzm91zmsimpflatzm259;              /* write */
        } else {
            flatzm88zmsimpflatzm254           = flatzm87zmsimpflatzm252;              /* write */
            flatzm88zmsimpflatzm255           = 0.0;                                  /* write */
        }
        
        flatzm88zmsimpflatzm260               = flatzm88zmsimpflatzm254;              /* read */
        flatzm88zmsimpflatzm261               = flatzm88zmsimpflatzm255;              /* read */
        flatzm83zmsimpflatzm232               = flatzm88zmsimpflatzm260;              /* write */
        flatzm83zmsimpflatzm233               = flatzm88zmsimpflatzm261;              /* write */
    } else {
        flatzm83zmsimpflatzm232               = flatzm82zmsimpflatzm230;              /* write */
        flatzm83zmsimpflatzm233               = 0.0;                                  /* write */
    }
    
    flatzm83zmsimpflatzm262                   = flatzm83zmsimpflatzm232;              /* read */
    flatzm83zmsimpflatzm263                   = flatzm83zmsimpflatzm233;              /* read */
    s->replZCoutputzsixzs0                    = flatzm83zmsimpflatzm262;              /* output */
    s->replZCoutputzsixzs1                    = flatzm83zmsimpflatzm263;              /* output */
}

Core evaluation
---------------

homer|3.1112698372208096

C evaluation
------------

homer|3.1112698372208096

λ λ -- Times
λ Flattened (simplified), not typechecked
---------------------------------------

conv-2 : Time =
  TIME
conv-3 : Int =
  MAX_MAP_SIZE

acc-s-reify-2-conv-4-simpflat-11 =i ExceptFold1NoValue : Error
acc-s-reify-2-conv-4-simpflat-12 =i 1858-11-17T00:00:00Z : Time

for_facts conv-1 : Time
        , conv-0-simpflat-25 : Error
        , conv-0-simpflat-26 : Int
        , conv-0-simpflat-27 : Time {
    s-reify-2-conv-4-aval-0-simpflat-13 =r acc-s-reify-2-conv-4-simpflat-11
    s-reify-2-conv-4-aval-0-simpflat-14 =r acc-s-reify-2-conv-4-simpflat-12
    flat-0-simpflat-15 =i ExceptNotAnError : Error
    flat-0-simpflat-16 =i 1858-11-17T00:00:00Z : Time
    
    if (eq#
          s-reify-2-conv-4-aval-0-simpflat-13
          ExceptNotAnError)
    {
        flat-4 =i 1858-11-17T00:00:00Z : Time
        simpflat-1 = Time_daysDifference#
                       1980-01-06T00:00:00Z
                       conv-0-simpflat-27
        simpflat-2 = negate# simpflat-1
        simpflat-3 = Time_minusDays#
                       2000-01-01T00:00:00Z
                       simpflat-2
        
        if (gt#
              simpflat-3
              s-reify-2-conv-4-aval-0-simpflat-14)
        {
            flat-4 =w Time_minusDays#
                        2000-01-01T00:00:00Z
                        simpflat-2
        }
        else
        {
            flat-4 =w s-reify-2-conv-4-aval-0-simpflat-14
        }
        
        flat-4 =r flat-4
        flat-0-simpflat-15 =w ExceptNotAnError
        flat-0-simpflat-16 =w flat-4
    }
    else
    {
        flat-3-simpflat-17 =i ExceptNotAnError : Error
        flat-3-simpflat-18 =i 1858-11-17T00:00:00Z : Time
        
        if (eq#
              ExceptFold1NoValue
              s-reify-2-conv-4-aval-0-simpflat-13)
        {
            simpflat-8 = Time_daysDifference#
                           1980-01-06T00:00:00Z
                           conv-0-simpflat-27
            simpflat-9 = negate# simpflat-8
            simpflat-10 = Time_minusDays#
                            2000-01-01T00:00:00Z
                            simpflat-9
            flat-3-simpflat-17 =w ExceptNotAnError
            flat-3-simpflat-18 =w simpflat-10
        }
        else
        {
            flat-3-simpflat-17 =w s-reify-2-conv-4-aval-0-simpflat-13
            flat-3-simpflat-18 =w 1858-11-17T00:00:00Z
        }
        
        flat-3-simpflat-19 =r flat-3-simpflat-17
        flat-3-simpflat-20 =r flat-3-simpflat-18
        flat-0-simpflat-15 =w flat-3-simpflat-19
        flat-0-simpflat-16 =w flat-3-simpflat-20
    }
    
    flat-0-simpflat-21 =r flat-0-simpflat-15
    flat-0-simpflat-22 =r flat-0-simpflat-16
    acc-s-reify-2-conv-4-simpflat-11 =w flat-0-simpflat-21
    acc-s-reify-2-conv-4-simpflat-12 =w flat-0-simpflat-22
}

s-reify-2-conv-4-simpflat-23 =r acc-s-reify-2-conv-4-simpflat-11
s-reify-2-conv-4-simpflat-24 =r acc-s-reify-2-conv-4-simpflat-12

output repl:output : Sum Error Time =
    s-reify-2-conv-4-simpflat-23 : Error
  , s-reify-2-conv-4-simpflat-24 : Time

Flattened Avalanche (simplified), typechecked
---------------------------------------------

conv-2 : Time =
  TIME
conv-3 : Int =
  MAX_MAP_SIZE

acc-s-reify-2-conv-4-simpflat-11 =i ExceptFold1NoValue : Error
acc-s-reify-2-conv-4-simpflat-12 =i 1858-11-17T00:00:00Z : Time

for_facts conv-1 : Time
        , conv-0-simpflat-25 : Error
        , conv-0-simpflat-26 : Int
        , conv-0-simpflat-27 : Time {
    s-reify-2-conv-4-aval-0-simpflat-13 =r acc-s-reify-2-conv-4-simpflat-11
    s-reify-2-conv-4-aval-0-simpflat-14 =r acc-s-reify-2-conv-4-simpflat-12
    flat-0-simpflat-15 =i ExceptNotAnError : Error
    flat-0-simpflat-16 =i 1858-11-17T00:00:00Z : Time
    
    if (eq#
          s-reify-2-conv-4-aval-0-simpflat-13
          ExceptNotAnError)
    {
        flat-4 =i 1858-11-17T00:00:00Z : Time
        simpflat-1 = Time_daysDifference#
                       1980-01-06T00:00:00Z
                       conv-0-simpflat-27
        simpflat-2 = negate# simpflat-1
        simpflat-3 = Time_minusDays#
                       2000-01-01T00:00:00Z
                       simpflat-2
        
        if (gt#
              simpflat-3
              s-reify-2-conv-4-aval-0-simpflat-14)
        {
            flat-4 =w Time_minusDays#
                        2000-01-01T00:00:00Z
                        simpflat-2
        }
        else
        {
            flat-4 =w s-reify-2-conv-4-aval-0-simpflat-14
        }
        
        flat-4 =r flat-4
        flat-0-simpflat-15 =w ExceptNotAnError
        flat-0-simpflat-16 =w flat-4
    }
    else
    {
        flat-3-simpflat-17 =i ExceptNotAnError : Error
        flat-3-simpflat-18 =i 1858-11-17T00:00:00Z : Time
        
        if (eq#
              ExceptFold1NoValue
              s-reify-2-conv-4-aval-0-simpflat-13)
        {
            simpflat-8 = Time_daysDifference#
                           1980-01-06T00:00:00Z
                           conv-0-simpflat-27
            simpflat-9 = negate# simpflat-8
            simpflat-10 = Time_minusDays#
                            2000-01-01T00:00:00Z
                            simpflat-9
            flat-3-simpflat-17 =w ExceptNotAnError
            flat-3-simpflat-18 =w simpflat-10
        }
        else
        {
            flat-3-simpflat-17 =w s-reify-2-conv-4-aval-0-simpflat-13
            flat-3-simpflat-18 =w 1858-11-17T00:00:00Z
        }
        
        flat-3-simpflat-19 =r flat-3-simpflat-17
        flat-3-simpflat-20 =r flat-3-simpflat-18
        flat-0-simpflat-15 =w flat-3-simpflat-19
        flat-0-simpflat-16 =w flat-3-simpflat-20
    }
    
    flat-0-simpflat-21 =r flat-0-simpflat-15
    flat-0-simpflat-22 =r flat-0-simpflat-16
    acc-s-reify-2-conv-4-simpflat-11 =w flat-0-simpflat-21
    acc-s-reify-2-conv-4-simpflat-12 =w flat-0-simpflat-22
}

s-reify-2-conv-4-simpflat-23 =r acc-s-reify-2-conv-4-simpflat-11
s-reify-2-conv-4-simpflat-24 =r acc-s-reify-2-conv-4-simpflat-12

output repl:output : Sum Error Time =
    s-reify-2-conv-4-simpflat-23 : Error
  , s-reify-2-conv-4-simpflat-24 : Time

C
-

#line 1 "cluster state #0 - default:salary"

typedef struct {
    itime_t          convzm2;
    iint_t           new_count;
    ierror_t         *new_convzm0zmsimpflatzm25;
    iint_t           *new_convzm0zmsimpflatzm26;
    itime_t          *new_convzm0zmsimpflatzm27;
} input_defaultZCsalary_t;

typedef struct {
    /* runtime */
    anemone_mempool_t *mempool;
    iint_t           max_map_size;

    /* inputs */
    input_defaultZCsalary_t input;

    /* kernel 0:0 outputs */
    ierror_t         replZCoutputzsixzs0;
    itime_t          replZCoutputzsixzs1;
} icluster_0_t;

iint_t size_of_icluster_0 ()
{
    return sizeof (icluster_0_t);
}

#line 1 "kernel function #0 - default:salary icluster_0_kernel_0"
void icluster_0_kernel_0(icluster_0_t *s)
{
    ierror_t         flatzm3zmsimpflatzm17;
    itime_t          flatzm3zmsimpflatzm18;
    ierror_t         flatzm3zmsimpflatzm19;
    ierror_t         flatzm0zmsimpflatzm21;
    itime_t          flatzm0zmsimpflatzm22;
    itime_t          flatzm3zmsimpflatzm20;
    itime_t          flatzm0zmsimpflatzm16;
    ierror_t         flatzm0zmsimpflatzm15;
    itime_t          acczmszmreifyzm2zmconvzm4zmsimpflatzm12;
    ierror_t         acczmszmreifyzm2zmconvzm4zmsimpflatzm11;
    itime_t          flatzm4;
    ierror_t         szmreifyzm2zmconvzm4zmavalzm0zmsimpflatzm13;
    itime_t          szmreifyzm2zmconvzm4zmavalzm0zmsimpflatzm14;
    ierror_t         szmreifyzm2zmconvzm4zmsimpflatzm23;
    itime_t          szmreifyzm2zmconvzm4zmsimpflatzm24;

    anemone_mempool_t *mempool                = s->mempool;
    itime_t          convzm2                  = s->input.convzm2;
    iint_t           convzm3                  = s->max_map_size;

    acczmszmreifyzm2zmconvzm4zmsimpflatzm11   = ierror_fold1_no_value;                /* init */
    acczmszmreifyzm2zmconvzm4zmsimpflatzm12   = 0x7420b1100000000;                    /* init */
    
    const iint_t     new_count                = s->input.new_count;
    const ierror_t  *const new_convzm0zmsimpflatzm25 = s->input.new_convzm0zmsimpflatzm25;
    const iint_t    *const new_convzm0zmsimpflatzm26 = s->input.new_convzm0zmsimpflatzm26;
    const itime_t   *const new_convzm0zmsimpflatzm27 = s->input.new_convzm0zmsimpflatzm27;
    
    for (iint_t i = 0; i < new_count; i++) {
        itime_t          convzm1              = new_convzm0zmsimpflatzm27[i];
        ierror_t         convzm0zmsimpflatzm25 = new_convzm0zmsimpflatzm25[i];
        iint_t           convzm0zmsimpflatzm26 = new_convzm0zmsimpflatzm26[i];
        itime_t          convzm0zmsimpflatzm27 = new_convzm0zmsimpflatzm27[i];
        szmreifyzm2zmconvzm4zmavalzm0zmsimpflatzm13 = acczmszmreifyzm2zmconvzm4zmsimpflatzm11; /* read */
        szmreifyzm2zmconvzm4zmavalzm0zmsimpflatzm14 = acczmszmreifyzm2zmconvzm4zmsimpflatzm12; /* read */
        flatzm0zmsimpflatzm15                 = ierror_not_an_error;                  /* init */
        flatzm0zmsimpflatzm16                 = 0x7420b1100000000;                    /* init */
        
        if (ierror_eq (szmreifyzm2zmconvzm4zmavalzm0zmsimpflatzm13, ierror_not_an_error)) {
            flatzm4                           = 0x7420b1100000000;                    /* init */
            iint_t           simpflatzm1      = itime_days_diff (0x7bc010600000000, convzm0zmsimpflatzm27); /* let */
            iint_t           simpflatzm2      = iint_neg (simpflatzm1);               /* let */
            itime_t          simpflatzm3      = itime_minus_days (0x7d0010100000000, simpflatzm2); /* let */
            
            if (itime_gt (simpflatzm3, szmreifyzm2zmconvzm4zmavalzm0zmsimpflatzm14)) {
                flatzm4                       = itime_minus_days (0x7d0010100000000, simpflatzm2); /* write */
            } else {
                flatzm4                       = szmreifyzm2zmconvzm4zmavalzm0zmsimpflatzm14; /* write */
            }
            
            flatzm4                           = flatzm4;                              /* read */
            flatzm0zmsimpflatzm15             = ierror_not_an_error;                  /* write */
            flatzm0zmsimpflatzm16             = flatzm4;                              /* write */
        } else {
            flatzm3zmsimpflatzm17             = ierror_not_an_error;                  /* init */
            flatzm3zmsimpflatzm18             = 0x7420b1100000000;                    /* init */
            
            if (ierror_eq (ierror_fold1_no_value, szmreifyzm2zmconvzm4zmavalzm0zmsimpflatzm13)) {
                iint_t           simpflatzm8  = itime_days_diff (0x7bc010600000000, convzm0zmsimpflatzm27); /* let */
                iint_t           simpflatzm9  = iint_neg (simpflatzm8);               /* let */
                itime_t          simpflatzm10 = itime_minus_days (0x7d0010100000000, simpflatzm9); /* let */
                flatzm3zmsimpflatzm17         = ierror_not_an_error;                  /* write */
                flatzm3zmsimpflatzm18         = simpflatzm10;                         /* write */
            } else {
                flatzm3zmsimpflatzm17         = szmreifyzm2zmconvzm4zmavalzm0zmsimpflatzm13; /* write */
                flatzm3zmsimpflatzm18         = 0x7420b1100000000;                    /* write */
            }
            
            flatzm3zmsimpflatzm19             = flatzm3zmsimpflatzm17;                /* read */
            flatzm3zmsimpflatzm20             = flatzm3zmsimpflatzm18;                /* read */
            flatzm0zmsimpflatzm15             = flatzm3zmsimpflatzm19;                /* write */
            flatzm0zmsimpflatzm16             = flatzm3zmsimpflatzm20;                /* write */
        }
        
        flatzm0zmsimpflatzm21                 = flatzm0zmsimpflatzm15;                /* read */
        flatzm0zmsimpflatzm22                 = flatzm0zmsimpflatzm16;                /* read */
        acczmszmreifyzm2zmconvzm4zmsimpflatzm11 = flatzm0zmsimpflatzm21;              /* write */
        acczmszmreifyzm2zmconvzm4zmsimpflatzm12 = flatzm0zmsimpflatzm22;              /* write */
    }
    
    szmreifyzm2zmconvzm4zmsimpflatzm23        = acczmszmreifyzm2zmconvzm4zmsimpflatzm11; /* read */
    szmreifyzm2zmconvzm4zmsimpflatzm24        = acczmszmreifyzm2zmconvzm4zmsimpflatzm12; /* read */
    s->replZCoutputzsixzs0                    = szmreifyzm2zmconvzm4zmsimpflatzm23;   /* output */
    s->replZCoutputzsixzs1                    = szmreifyzm2zmconvzm4zmsimpflatzm24;   /* output */
}

Core evaluation
---------------

homer|2029-12-27
marge|2009-12-12

C evaluation
------------

homer|2029-12-27
marge|2009-12-12

λ λ -- Math
λ The C will be hidden during evaluation.
The flattened simplified avalanche will be hidden during evaluation.
λ λ Core evaluation
---------------

homer|tombstone

C evaluation
------------

homer|tombstone

λ λ Core evaluation
---------------

homer|tombstone

C evaluation
------------

homer|tombstone

λ 